{"version":3,"file":"index.85fce489.js","sources":["../../vite/modulepreload-polyfill","../../node_modules/ol/events/Event.js","../../node_modules/ol/ObjectEventType.js","../../node_modules/ol/Disposable.js","../../node_modules/ol/array.js","../../node_modules/ol/functions.js","../../node_modules/ol/obj.js","../../node_modules/ol/events/Target.js","../../node_modules/ol/events/EventType.js","../../node_modules/ol/events.js","../../node_modules/ol/Observable.js","../../node_modules/ol/util.js","../../node_modules/ol/Object.js","../../node_modules/ol/AssertionError.js","../../node_modules/ol/asserts.js","../../node_modules/ol/Feature.js","../../node_modules/ol/CollectionEventType.js","../../node_modules/ol/Collection.js","../../node_modules/ol/has.js","../../node_modules/ol/transform.js","../../node_modules/ol/extent/Relationship.js","../../node_modules/ol/extent.js","../../node_modules/ol/math.js","../../node_modules/ol/color.js","../../node_modules/ol/style/IconImageCache.js","../../node_modules/ol/layer/Property.js","../../node_modules/ol/layer/Base.js","../../node_modules/ol/render/EventType.js","../../node_modules/ol/layer/Layer.js","../../node_modules/ol/coordinate.js","../../node_modules/ol/renderer/Map.js","../../node_modules/ol/render/Event.js","../../node_modules/ol/css.js","../../node_modules/ol/dom.js","../../node_modules/ol/render/canvas.js","../../node_modules/ol/renderer/Composite.js","../../node_modules/ol/layer/Group.js","../../node_modules/ol/MapEvent.js","../../node_modules/ol/MapBrowserEvent.js","../../node_modules/ol/MapBrowserEventType.js","../../node_modules/ol/pointer/EventType.js","../../node_modules/ol/MapBrowserEventHandler.js","../../node_modules/ol/MapEventType.js","../../node_modules/ol/MapProperty.js","../../node_modules/ol/structs/PriorityQueue.js","../../node_modules/ol/TileState.js","../../node_modules/ol/TileQueue.js","../../node_modules/ol/ViewHint.js","../../node_modules/ol/ViewProperty.js","../../node_modules/ol/tilegrid/common.js","../../node_modules/ol/proj/Units.js","../../node_modules/ol/proj/Projection.js","../../node_modules/ol/proj/epsg3857.js","../../node_modules/ol/proj/epsg4326.js","../../node_modules/ol/proj/projections.js","../../node_modules/ol/proj/transforms.js","../../node_modules/ol/sphere.js","../../node_modules/ol/proj.js","../../node_modules/ol/centerconstraint.js","../../node_modules/ol/resolutionconstraint.js","../../node_modules/ol/rotationconstraint.js","../../node_modules/ol/easing.js","../../node_modules/ol/geom/flat/transform.js","../../node_modules/ol/geom/Geometry.js","../../node_modules/ol/geom/SimpleGeometry.js","../../node_modules/ol/geom/flat/closest.js","../../node_modules/ol/geom/flat/deflate.js","../../node_modules/ol/geom/flat/simplify.js","../../node_modules/ol/geom/flat/inflate.js","../../node_modules/ol/geom/flat/area.js","../../node_modules/ol/geom/LinearRing.js","../../node_modules/ol/geom/Point.js","../../node_modules/ol/geom/flat/contains.js","../../node_modules/ol/geom/flat/interiorpoint.js","../../node_modules/ol/geom/flat/segments.js","../../node_modules/ol/geom/flat/intersectsextent.js","../../node_modules/ol/geom/flat/reverse.js","../../node_modules/ol/geom/flat/orient.js","../../node_modules/ol/geom/Polygon.js","../../node_modules/ol/View.js","../../node_modules/ol/control/Control.js","../../node_modules/ol/control/Attribution.js","../../node_modules/ol/control/Rotate.js","../../node_modules/ol/control/Zoom.js","../../node_modules/ol/control/defaults.js","../../node_modules/ol/interaction/Property.js","../../node_modules/ol/interaction/Interaction.js","../../node_modules/ol/interaction/DoubleClickZoom.js","../../node_modules/ol/interaction/Pointer.js","../../node_modules/ol/events/condition.js","../../node_modules/ol/interaction/DragPan.js","../../node_modules/ol/interaction/DragRotate.js","../../node_modules/ol/render/Box.js","../../node_modules/ol/interaction/DragBox.js","../../node_modules/ol/interaction/DragZoom.js","../../node_modules/ol/events/KeyCode.js","../../node_modules/ol/interaction/KeyboardPan.js","../../node_modules/ol/interaction/KeyboardZoom.js","../../node_modules/ol/Kinetic.js","../../node_modules/ol/interaction/MouseWheelZoom.js","../../node_modules/ol/interaction/PinchRotate.js","../../node_modules/ol/interaction/PinchZoom.js","../../node_modules/ol/interaction/defaults.js","../../node_modules/ol/size.js","../../node_modules/ol/Map.js","../../node_modules/quickselect/index.js","../../node_modules/rbush/index.js","../../node_modules/ol/ImageState.js","../../node_modules/ol/style/Image.js","../../node_modules/ol/colorlike.js","../../node_modules/ol/style/RegularShape.js","../../node_modules/ol/style/Circle.js","../../node_modules/ol/style/Fill.js","../../node_modules/ol/style/Stroke.js","../../node_modules/ol/style/Style.js","../../node_modules/ol/Image.js","../../node_modules/ol/style/IconImage.js","../../node_modules/ol/style/Icon.js","../../node_modules/ol/style/Text.js","../../node_modules/ol/style/flat.js","../../node_modules/ol/layer/BaseVector.js","../../node_modules/ol/render/canvas/Instruction.js","../../node_modules/ol/render/VectorContext.js","../../node_modules/ol/render/canvas/Builder.js","../../node_modules/ol/render/canvas/ImageBuilder.js","../../node_modules/ol/render/canvas/LineStringBuilder.js","../../node_modules/ol/render/canvas/PolygonBuilder.js","../../node_modules/ol/geom/flat/straightchunk.js","../../node_modules/ol/render/canvas/TextBuilder.js","../../node_modules/ol/render/canvas/BuilderGroup.js","../../node_modules/ol/renderer/Layer.js","../../node_modules/ol/renderer/canvas/Layer.js","../../node_modules/ol/geom/flat/textpath.js","../../node_modules/ol/geom/flat/length.js","../../node_modules/ol/render/canvas/Executor.js","../../node_modules/ol/render/canvas/ExecutorGroup.js","../../node_modules/ol/render/canvas/Immediate.js","../../node_modules/ol/render/canvas/hitdetect.js","../../node_modules/ol/renderer/vector.js","../../node_modules/ol/renderer/canvas/VectorLayer.js","../../node_modules/ol/layer/Vector.js","../../node_modules/ol/structs/RBush.js","../../node_modules/ol/source/Source.js","../../node_modules/ol/source/VectorEventType.js","../../node_modules/ol/loadingstrategy.js","../../node_modules/ol/featureloader.js","../../node_modules/ol/source/Vector.js","../../node_modules/ol/layer/TileProperty.js","../../node_modules/ol/layer/BaseTile.js","../../node_modules/ol/Tile.js","../../node_modules/ol/ImageTile.js","../../node_modules/ol/reproj/common.js","../../node_modules/ol/reproj/Triangulation.js","../../node_modules/ol/reproj.js","../../node_modules/ol/reproj/Tile.js","../../node_modules/ol/TileRange.js","../../node_modules/ol/renderer/canvas/TileLayer.js","../../node_modules/ol/layer/Tile.js","../../node_modules/ol/structs/LRUCache.js","../../node_modules/ol/tilecoord.js","../../node_modules/ol/TileCache.js","../../node_modules/ol/source/TileEventType.js","../../node_modules/ol/tilegrid/TileGrid.js","../../node_modules/ol/tilegrid.js","../../node_modules/ol/source/Tile.js","../../node_modules/ol/tileurlfunction.js","../../node_modules/ol/source/UrlTile.js","../../node_modules/ol/source/TileImage.js","../../node_modules/ol/source/XYZ.js","../../node_modules/ol/source/OSM.js","../../node_modules/ol/control/ZoomSlider.js","../../main.js"],"sourcesContent":["__VITE_IS_MODERN__&&(function polyfill() {\n    const relList = document.createElement('link').relList;\n    if (relList && relList.supports && relList.supports('modulepreload')) {\n        return;\n    }\n    for (const link of document.querySelectorAll('link[rel=\"modulepreload\"]')) {\n        processPreload(link);\n    }\n    new MutationObserver((mutations) => {\n        for (const mutation of mutations) {\n            if (mutation.type !== 'childList') {\n                continue;\n            }\n            for (const node of mutation.addedNodes) {\n                if (node.tagName === 'LINK' && node.rel === 'modulepreload')\n                    processPreload(node);\n            }\n        }\n    }).observe(document, { childList: true, subtree: true });\n    function getFetchOpts(script) {\n        const fetchOpts = {};\n        if (script.integrity)\n            fetchOpts.integrity = script.integrity;\n        if (script.referrerpolicy)\n            fetchOpts.referrerPolicy = script.referrerpolicy;\n        if (script.crossorigin === 'use-credentials')\n            fetchOpts.credentials = 'include';\n        else if (script.crossorigin === 'anonymous')\n            fetchOpts.credentials = 'omit';\n        else\n            fetchOpts.credentials = 'same-origin';\n        return fetchOpts;\n    }\n    function processPreload(link) {\n        if (link.ep)\n            // ep marker = processed\n            return;\n        link.ep = true;\n        // prepopulate the load record\n        const fetchOpts = getFetchOpts(link);\n        fetch(link.href, fetchOpts);\n    }\n}());","/**\r\n * @module ol/events/Event\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\r\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\r\n *\r\n * This implementation only provides `type` and `target` properties, and\r\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\r\n * for higher level events defined in the library, and works with\r\n * {@link module:ol/events/Target~Target}.\r\n */\r\nclass BaseEvent {\r\n  /**\r\n   * @param {string} type Type.\r\n   */\r\n  constructor(type) {\r\n    /**\r\n     * @type {boolean}\r\n     */\r\n    this.propagationStopped;\r\n\r\n    /**\r\n     * @type {boolean}\r\n     */\r\n    this.defaultPrevented;\r\n\r\n    /**\r\n     * The event type.\r\n     * @type {string}\r\n     * @api\r\n     */\r\n    this.type = type;\r\n\r\n    /**\r\n     * The event target.\r\n     * @type {Object}\r\n     * @api\r\n     */\r\n    this.target = null;\r\n  }\r\n\r\n  /**\r\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\r\n   * will be fired.\r\n   * @api\r\n   */\r\n  preventDefault() {\r\n    this.defaultPrevented = true;\r\n  }\r\n\r\n  /**\r\n   * Stop event propagation.\r\n   * @api\r\n   */\r\n  stopPropagation() {\r\n    this.propagationStopped = true;\r\n  }\r\n}\r\n\r\n/**\r\n * @param {Event|import(\"./Event.js\").default} evt Event\r\n */\r\nexport function stopPropagation(evt) {\r\n  evt.stopPropagation();\r\n}\r\n\r\n/**\r\n * @param {Event|import(\"./Event.js\").default} evt Event\r\n */\r\nexport function preventDefault(evt) {\r\n  evt.preventDefault();\r\n}\r\n\r\nexport default BaseEvent;\r\n","/**\r\n * @module ol/ObjectEventType\r\n */\r\n\r\n/**\r\n * @enum {string}\r\n */\r\nexport default {\r\n  /**\r\n   * Triggered when a property is changed.\r\n   * @event module:ol/Object.ObjectEvent#propertychange\r\n   * @api\r\n   */\r\n  PROPERTYCHANGE: 'propertychange',\r\n};\r\n\r\n/**\r\n * @typedef {'propertychange'} Types\r\n */\r\n","/**\r\n * @module ol/Disposable\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Objects that need to clean up after themselves.\r\n */\r\nclass Disposable {\r\n  constructor() {\r\n    /**\r\n     * The object has already been disposed.\r\n     * @type {boolean}\r\n     * @protected\r\n     */\r\n    this.disposed = false;\r\n  }\r\n\r\n  /**\r\n   * Clean up.\r\n   */\r\n  dispose() {\r\n    if (!this.disposed) {\r\n      this.disposed = true;\r\n      this.disposeInternal();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Extension point for disposable objects.\r\n   * @protected\r\n   */\r\n  disposeInternal() {}\r\n}\r\n\r\nexport default Disposable;\r\n","/**\r\n * @module ol/array\r\n */\r\n\r\n/**\r\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\r\n * https://github.com/darkskyapp/binary-search\r\n *\r\n * @param {Array<*>} haystack Items to search through.\r\n * @param {*} needle The item to look for.\r\n * @param {Function} [comparator] Comparator function.\r\n * @return {number} The index of the item if found, -1 if not.\r\n */\r\nexport function binarySearch(haystack, needle, comparator) {\r\n  let mid, cmp;\r\n  comparator = comparator || numberSafeCompareFunction;\r\n  let low = 0;\r\n  let high = haystack.length;\r\n  let found = false;\r\n\r\n  while (low < high) {\r\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\r\n     * to double (which gives the wrong results). */\r\n    mid = low + ((high - low) >> 1);\r\n    cmp = +comparator(haystack[mid], needle);\r\n\r\n    if (cmp < 0.0) {\r\n      /* Too low. */\r\n      low = mid + 1;\r\n    } else {\r\n      /* Key found or too high */\r\n      high = mid;\r\n      found = !cmp;\r\n    }\r\n  }\r\n\r\n  /* Key not found. */\r\n  return found ? low : ~low;\r\n}\r\n\r\n/**\r\n * Compare function for array sort that is safe for numbers.\r\n * @param {*} a The first object to be compared.\r\n * @param {*} b The second object to be compared.\r\n * @return {number} A negative number, zero, or a positive number as the first\r\n *     argument is less than, equal to, or greater than the second.\r\n */\r\nexport function numberSafeCompareFunction(a, b) {\r\n  return a > b ? 1 : a < b ? -1 : 0;\r\n}\r\n\r\n/**\r\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\r\n * of this type to determine which nearest resolution to use.\r\n *\r\n * This function takes a `{number}` representing a value between two array entries,\r\n * a `{number}` representing the value of the nearest higher entry and\r\n * a `{number}` representing the value of the nearest lower entry\r\n * as arguments and returns a `{number}`. If a negative number or zero is returned\r\n * the lower value will be used, if a positive number is returned the higher value\r\n * will be used.\r\n * @typedef {function(number, number, number): number} NearestDirectionFunction\r\n * @api\r\n */\r\n\r\n/**\r\n * @param {Array<number>} arr Array in descending order.\r\n * @param {number} target Target.\r\n * @param {number|NearestDirectionFunction} direction\r\n *    0 means return the nearest,\r\n *    > 0 means return the largest nearest,\r\n *    < 0 means return the smallest nearest.\r\n * @return {number} Index.\r\n */\r\nexport function linearFindNearest(arr, target, direction) {\r\n  const n = arr.length;\r\n  if (arr[0] <= target) {\r\n    return 0;\r\n  } else if (target <= arr[n - 1]) {\r\n    return n - 1;\r\n  } else {\r\n    let i;\r\n    if (direction > 0) {\r\n      for (i = 1; i < n; ++i) {\r\n        if (arr[i] < target) {\r\n          return i - 1;\r\n        }\r\n      }\r\n    } else if (direction < 0) {\r\n      for (i = 1; i < n; ++i) {\r\n        if (arr[i] <= target) {\r\n          return i;\r\n        }\r\n      }\r\n    } else {\r\n      for (i = 1; i < n; ++i) {\r\n        if (arr[i] == target) {\r\n          return i;\r\n        } else if (arr[i] < target) {\r\n          if (typeof direction === 'function') {\r\n            if (direction(target, arr[i - 1], arr[i]) > 0) {\r\n              return i - 1;\r\n            } else {\r\n              return i;\r\n            }\r\n          } else if (arr[i - 1] - target < target - arr[i]) {\r\n            return i - 1;\r\n          } else {\r\n            return i;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return n - 1;\r\n  }\r\n}\r\n\r\n/**\r\n * @param {Array<*>} arr Array.\r\n * @param {number} begin Begin index.\r\n * @param {number} end End index.\r\n */\r\nexport function reverseSubArray(arr, begin, end) {\r\n  while (begin < end) {\r\n    const tmp = arr[begin];\r\n    arr[begin] = arr[end];\r\n    arr[end] = tmp;\r\n    ++begin;\r\n    --end;\r\n  }\r\n}\r\n\r\n/**\r\n * @param {Array<VALUE>} arr The array to modify.\r\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\r\n * @template VALUE\r\n */\r\nexport function extend(arr, data) {\r\n  const extension = Array.isArray(data) ? data : [data];\r\n  const length = extension.length;\r\n  for (let i = 0; i < length; i++) {\r\n    arr[arr.length] = extension[i];\r\n  }\r\n}\r\n\r\n/**\r\n * @param {Array<VALUE>} arr The array to modify.\r\n * @param {VALUE} obj The element to remove.\r\n * @template VALUE\r\n * @return {boolean} If the element was removed.\r\n */\r\nexport function remove(arr, obj) {\r\n  const i = arr.indexOf(obj);\r\n  const found = i > -1;\r\n  if (found) {\r\n    arr.splice(i, 1);\r\n  }\r\n  return found;\r\n}\r\n\r\n/**\r\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\r\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\r\n * @return {boolean} Whether the two arrays are equal.\r\n */\r\nexport function equals(arr1, arr2) {\r\n  const len1 = arr1.length;\r\n  if (len1 !== arr2.length) {\r\n    return false;\r\n  }\r\n  for (let i = 0; i < len1; i++) {\r\n    if (arr1[i] !== arr2[i]) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\n\r\n/**\r\n * Sort the passed array such that the relative order of equal elements is preserved.\r\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\r\n * @param {Array<*>} arr The array to sort (modifies original).\r\n * @param {!function(*, *): number} compareFnc Comparison function.\r\n * @api\r\n */\r\nexport function stableSort(arr, compareFnc) {\r\n  const length = arr.length;\r\n  const tmp = Array(arr.length);\r\n  let i;\r\n  for (i = 0; i < length; i++) {\r\n    tmp[i] = {index: i, value: arr[i]};\r\n  }\r\n  tmp.sort(function (a, b) {\r\n    return compareFnc(a.value, b.value) || a.index - b.index;\r\n  });\r\n  for (i = 0; i < arr.length; i++) {\r\n    arr[i] = tmp[i].value;\r\n  }\r\n}\r\n\r\n/**\r\n * @param {Array<*>} arr The array to test.\r\n * @param {Function} [func] Comparison function.\r\n * @param {boolean} [strict] Strictly sorted (default false).\r\n * @return {boolean} Return index.\r\n */\r\nexport function isSorted(arr, func, strict) {\r\n  const compare = func || numberSafeCompareFunction;\r\n  return arr.every(function (currentVal, index) {\r\n    if (index === 0) {\r\n      return true;\r\n    }\r\n    const res = compare(arr[index - 1], currentVal);\r\n    return !(res > 0 || (strict && res === 0));\r\n  });\r\n}\r\n","/**\r\n * @module ol/functions\r\n */\r\n\r\nimport {equals as arrayEquals} from './array.js';\r\n\r\n/**\r\n * Always returns true.\r\n * @return {boolean} true.\r\n */\r\nexport function TRUE() {\r\n  return true;\r\n}\r\n\r\n/**\r\n * Always returns false.\r\n * @return {boolean} false.\r\n */\r\nexport function FALSE() {\r\n  return false;\r\n}\r\n\r\n/**\r\n * A reusable function, used e.g. as a default for callbacks.\r\n *\r\n * @return {void} Nothing.\r\n */\r\nexport function VOID() {}\r\n\r\n/**\r\n * Wrap a function in another function that remembers the last return.  If the\r\n * returned function is called twice in a row with the same arguments and the same\r\n * this object, it will return the value from the first call in the second call.\r\n *\r\n * @param {function(...any): ReturnType} fn The function to memoize.\r\n * @return {function(...any): ReturnType} The memoized function.\r\n * @template ReturnType\r\n */\r\nexport function memoizeOne(fn) {\r\n  let called = false;\r\n\r\n  /** @type {ReturnType} */\r\n  let lastResult;\r\n\r\n  /** @type {Array<any>} */\r\n  let lastArgs;\r\n\r\n  let lastThis;\r\n\r\n  return function () {\r\n    const nextArgs = Array.prototype.slice.call(arguments);\r\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\r\n      called = true;\r\n      lastThis = this;\r\n      lastArgs = nextArgs;\r\n      lastResult = fn.apply(this, arguments);\r\n    }\r\n    return lastResult;\r\n  };\r\n}\r\n\r\n/**\r\n * @template T\r\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\r\n * @return {Promise<T>} A promise for the value.\r\n */\r\nexport function toPromise(getter) {\r\n  function promiseGetter() {\r\n    let value;\r\n    try {\r\n      value = getter();\r\n    } catch (err) {\r\n      return Promise.reject(err);\r\n    }\r\n    if (value instanceof Promise) {\r\n      return value;\r\n    }\r\n    return Promise.resolve(value);\r\n  }\r\n  return promiseGetter();\r\n}\r\n","/**\r\n * @module ol/obj\r\n */\r\n\r\n/**\r\n * Removes all properties from an object.\r\n * @param {Object} object The object to clear.\r\n */\r\nexport function clear(object) {\r\n  for (const property in object) {\r\n    delete object[property];\r\n  }\r\n}\r\n\r\n/**\r\n * Determine if an object has any properties.\r\n * @param {Object} object The object to check.\r\n * @return {boolean} The object is empty.\r\n */\r\nexport function isEmpty(object) {\r\n  let property;\r\n  for (property in object) {\r\n    return false;\r\n  }\r\n  return !property;\r\n}\r\n","/**\r\n * @module ol/events/Target\r\n */\r\nimport Disposable from '../Disposable.js';\r\nimport Event from './Event.js';\r\nimport {VOID} from '../functions.js';\r\nimport {clear} from '../obj.js';\r\n\r\n/**\r\n * @typedef {EventTarget|Target} EventTargetLike\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\r\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\r\n *\r\n * There are two important simplifications compared to the specification:\r\n *\r\n * 1. The handling of `useCapture` in `addEventListener` and\r\n *    `removeEventListener`. There is no real capture model.\r\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\r\n *    There is no event target hierarchy. When a listener calls\r\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\r\n *    more listeners after this one will be called. Same as when the listener\r\n *    returns false.\r\n */\r\nclass Target extends Disposable {\r\n  /**\r\n   * @param {*} [target] Default event target for dispatched events.\r\n   */\r\n  constructor(target) {\r\n    super();\r\n\r\n    /**\r\n     * @private\r\n     * @type {*}\r\n     */\r\n    this.eventTarget_ = target;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Object<string, number>}\r\n     */\r\n    this.pendingRemovals_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Object<string, number>}\r\n     */\r\n    this.dispatching_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\r\n     */\r\n    this.listeners_ = null;\r\n  }\r\n\r\n  /**\r\n   * @param {string} type Type.\r\n   * @param {import(\"../events.js\").Listener} listener Listener.\r\n   */\r\n  addEventListener(type, listener) {\r\n    if (!type || !listener) {\r\n      return;\r\n    }\r\n    const listeners = this.listeners_ || (this.listeners_ = {});\r\n    const listenersForType = listeners[type] || (listeners[type] = []);\r\n    if (!listenersForType.includes(listener)) {\r\n      listenersForType.push(listener);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Dispatches an event and calls all listeners listening for events\r\n   * of this type. The event parameter can either be a string or an\r\n   * Object with a `type` property.\r\n   *\r\n   * @param {import(\"./Event.js\").default|string} event Event object.\r\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\r\n   *     event object or if any of the listeners returned false.\r\n   * @api\r\n   */\r\n  dispatchEvent(event) {\r\n    const isString = typeof event === 'string';\r\n    const type = isString ? event : event.type;\r\n    const listeners = this.listeners_ && this.listeners_[type];\r\n    if (!listeners) {\r\n      return;\r\n    }\r\n\r\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\r\n    if (!evt.target) {\r\n      evt.target = this.eventTarget_ || this;\r\n    }\r\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\r\n    const pendingRemovals =\r\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\r\n    if (!(type in dispatching)) {\r\n      dispatching[type] = 0;\r\n      pendingRemovals[type] = 0;\r\n    }\r\n    ++dispatching[type];\r\n    let propagate;\r\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\r\n      if ('handleEvent' in listeners[i]) {\r\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\r\n          listeners[i]\r\n        ).handleEvent(evt);\r\n      } else {\r\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\r\n          listeners[i]\r\n        ).call(this, evt);\r\n      }\r\n      if (propagate === false || evt.propagationStopped) {\r\n        propagate = false;\r\n        break;\r\n      }\r\n    }\r\n    if (--dispatching[type] === 0) {\r\n      let pr = pendingRemovals[type];\r\n      delete pendingRemovals[type];\r\n      while (pr--) {\r\n        this.removeEventListener(type, VOID);\r\n      }\r\n      delete dispatching[type];\r\n    }\r\n    return propagate;\r\n  }\r\n\r\n  /**\r\n   * Clean up.\r\n   */\r\n  disposeInternal() {\r\n    this.listeners_ && clear(this.listeners_);\r\n  }\r\n\r\n  /**\r\n   * Get the listeners for a specified event type. Listeners are returned in the\r\n   * order that they will be called in.\r\n   *\r\n   * @param {string} type Type.\r\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\r\n   */\r\n  getListeners(type) {\r\n    return (this.listeners_ && this.listeners_[type]) || undefined;\r\n  }\r\n\r\n  /**\r\n   * @param {string} [type] Type. If not provided,\r\n   *     `true` will be returned if this event target has any listeners.\r\n   * @return {boolean} Has listeners.\r\n   */\r\n  hasListener(type) {\r\n    if (!this.listeners_) {\r\n      return false;\r\n    }\r\n    return type\r\n      ? type in this.listeners_\r\n      : Object.keys(this.listeners_).length > 0;\r\n  }\r\n\r\n  /**\r\n   * @param {string} type Type.\r\n   * @param {import(\"../events.js\").Listener} listener Listener.\r\n   */\r\n  removeEventListener(type, listener) {\r\n    const listeners = this.listeners_ && this.listeners_[type];\r\n    if (listeners) {\r\n      const index = listeners.indexOf(listener);\r\n      if (index !== -1) {\r\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\r\n          // make listener a no-op, and remove later in #dispatchEvent()\r\n          listeners[index] = VOID;\r\n          ++this.pendingRemovals_[type];\r\n        } else {\r\n          listeners.splice(index, 1);\r\n          if (listeners.length === 0) {\r\n            delete this.listeners_[type];\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default Target;\r\n","/**\r\n * @module ol/events/EventType\r\n */\r\n\r\n/**\r\n * @enum {string}\r\n * @const\r\n */\r\nexport default {\r\n  /**\r\n   * Generic change event. Triggered when the revision counter is increased.\r\n   * @event module:ol/events/Event~BaseEvent#change\r\n   * @api\r\n   */\r\n  CHANGE: 'change',\r\n\r\n  /**\r\n   * Generic error event. Triggered when an error occurs.\r\n   * @event module:ol/events/Event~BaseEvent#error\r\n   * @api\r\n   */\r\n  ERROR: 'error',\r\n\r\n  BLUR: 'blur',\r\n  CLEAR: 'clear',\r\n  CONTEXTMENU: 'contextmenu',\r\n  CLICK: 'click',\r\n  DBLCLICK: 'dblclick',\r\n  DRAGENTER: 'dragenter',\r\n  DRAGOVER: 'dragover',\r\n  DROP: 'drop',\r\n  FOCUS: 'focus',\r\n  KEYDOWN: 'keydown',\r\n  KEYPRESS: 'keypress',\r\n  LOAD: 'load',\r\n  RESIZE: 'resize',\r\n  TOUCHMOVE: 'touchmove',\r\n  WHEEL: 'wheel',\r\n};\r\n","/**\r\n * @module ol/events\r\n */\r\nimport {clear} from './obj.js';\r\n\r\n/**\r\n * Key to use with {@link module:ol/Observable.unByKey}.\r\n * @typedef {Object} EventsKey\r\n * @property {ListenerFunction} listener Listener.\r\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\r\n * @property {string} type Type.\r\n * @api\r\n */\r\n\r\n/**\r\n * Listener function. This function is called with an event object as argument.\r\n * When the function returns `false`, event propagation will stop.\r\n *\r\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\r\n * @api\r\n */\r\n\r\n/**\r\n * @typedef {Object} ListenerObject\r\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\r\n */\r\n\r\n/**\r\n * @typedef {ListenerFunction|ListenerObject} Listener\r\n */\r\n\r\n/**\r\n * Registers an event listener on an event target. Inspired by\r\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\r\n *\r\n * This function efficiently binds a `listener` to a `this` object, and returns\r\n * a key for use with {@link module:ol/events.unlistenByKey}.\r\n *\r\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\r\n * @param {string} type Event type.\r\n * @param {ListenerFunction} listener Listener.\r\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\r\n *     listener. Default is the `target`.\r\n * @param {boolean} [once] If true, add the listener as one-off listener.\r\n * @return {EventsKey} Unique key for the listener.\r\n */\r\nexport function listen(target, type, listener, thisArg, once) {\r\n  if (thisArg && thisArg !== target) {\r\n    listener = listener.bind(thisArg);\r\n  }\r\n  if (once) {\r\n    const originalListener = listener;\r\n    listener = function () {\r\n      target.removeEventListener(type, listener);\r\n      originalListener.apply(this, arguments);\r\n    };\r\n  }\r\n  const eventsKey = {\r\n    target: target,\r\n    type: type,\r\n    listener: listener,\r\n  };\r\n  target.addEventListener(type, listener);\r\n  return eventsKey;\r\n}\r\n\r\n/**\r\n * Registers a one-off event listener on an event target. Inspired by\r\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\r\n *\r\n * This function efficiently binds a `listener` as self-unregistering listener\r\n * to a `this` object, and returns a key for use with\r\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\r\n * unregistered before it is called.\r\n *\r\n * When {@link module:ol/events.listen} is called with the same arguments after this\r\n * function, the self-unregistering listener will be turned into a permanent\r\n * listener.\r\n *\r\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\r\n * @param {string} type Event type.\r\n * @param {ListenerFunction} listener Listener.\r\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\r\n *     listener. Default is the `target`.\r\n * @return {EventsKey} Key for unlistenByKey.\r\n */\r\nexport function listenOnce(target, type, listener, thisArg) {\r\n  return listen(target, type, listener, thisArg, true);\r\n}\r\n\r\n/**\r\n * Unregisters event listeners on an event target. Inspired by\r\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\r\n *\r\n * The argument passed to this function is the key returned from\r\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\r\n *\r\n * @param {EventsKey} key The key.\r\n */\r\nexport function unlistenByKey(key) {\r\n  if (key && key.target) {\r\n    key.target.removeEventListener(key.type, key.listener);\r\n    clear(key);\r\n  }\r\n}\r\n","/**\r\n * @module ol/Observable\r\n */\r\nimport EventTarget from './events/Target.js';\r\nimport EventType from './events/EventType.js';\r\nimport {listen, listenOnce, unlistenByKey} from './events.js';\r\n\r\n/***\r\n * @template {string} Type\r\n * @template {Event|import(\"./events/Event.js\").default} EventClass\r\n * @template Return\r\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\r\n */\r\n\r\n/***\r\n * @template {string} Type\r\n * @template Return\r\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\r\n */\r\n\r\n/**\r\n * @typedef {'change'|'error'} EventTypes\r\n */\r\n\r\n/***\r\n * @template Return\r\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Abstract base class; normally only used for creating subclasses and not\r\n * instantiated in apps.\r\n * An event target providing convenient methods for listener registration\r\n * and unregistration. A generic `change` event is always available through\r\n * {@link module:ol/Observable~Observable#changed}.\r\n *\r\n * @fires import(\"./events/Event.js\").default\r\n * @api\r\n */\r\nclass Observable extends EventTarget {\r\n  constructor() {\r\n    super();\r\n\r\n    this.on =\r\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\r\n        this.onInternal\r\n      );\r\n\r\n    this.once =\r\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\r\n        this.onceInternal\r\n      );\r\n\r\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.revision_ = 0;\r\n  }\r\n\r\n  /**\r\n   * Increases the revision counter and dispatches a 'change' event.\r\n   * @api\r\n   */\r\n  changed() {\r\n    ++this.revision_;\r\n    this.dispatchEvent(EventType.CHANGE);\r\n  }\r\n\r\n  /**\r\n   * Get the version number for this object.  Each time the object is modified,\r\n   * its version number will be incremented.\r\n   * @return {number} Revision.\r\n   * @api\r\n   */\r\n  getRevision() {\r\n    return this.revision_;\r\n  }\r\n\r\n  /**\r\n   * @param {string|Array<string>} type Type.\r\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\r\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\r\n   * @protected\r\n   */\r\n  onInternal(type, listener) {\r\n    if (Array.isArray(type)) {\r\n      const len = type.length;\r\n      const keys = new Array(len);\r\n      for (let i = 0; i < len; ++i) {\r\n        keys[i] = listen(this, type[i], listener);\r\n      }\r\n      return keys;\r\n    } else {\r\n      return listen(this, /** @type {string} */ (type), listener);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {string|Array<string>} type Type.\r\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\r\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\r\n   * @protected\r\n   */\r\n  onceInternal(type, listener) {\r\n    let key;\r\n    if (Array.isArray(type)) {\r\n      const len = type.length;\r\n      key = new Array(len);\r\n      for (let i = 0; i < len; ++i) {\r\n        key[i] = listenOnce(this, type[i], listener);\r\n      }\r\n    } else {\r\n      key = listenOnce(this, /** @type {string} */ (type), listener);\r\n    }\r\n    /** @type {Object} */ (listener).ol_key = key;\r\n    return key;\r\n  }\r\n\r\n  /**\r\n   * Unlisten for a certain type of event.\r\n   * @param {string|Array<string>} type Type.\r\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\r\n   * @protected\r\n   */\r\n  unInternal(type, listener) {\r\n    const key = /** @type {Object} */ (listener).ol_key;\r\n    if (key) {\r\n      unByKey(key);\r\n    } else if (Array.isArray(type)) {\r\n      for (let i = 0, ii = type.length; i < ii; ++i) {\r\n        this.removeEventListener(type[i], listener);\r\n      }\r\n    } else {\r\n      this.removeEventListener(type, listener);\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Listen for a certain type of event.\r\n * @function\r\n * @param {string|Array<string>} type The event type or array of event types.\r\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\r\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\r\n *     called with an array of event types as the first argument, the return\r\n *     will be an array of keys.\r\n * @api\r\n */\r\nObservable.prototype.on;\r\n\r\n/**\r\n * Listen once for a certain type of event.\r\n * @function\r\n * @param {string|Array<string>} type The event type or array of event types.\r\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\r\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\r\n *     called with an array of event types as the first argument, the return\r\n *     will be an array of keys.\r\n * @api\r\n */\r\nObservable.prototype.once;\r\n\r\n/**\r\n * Unlisten for a certain type of event.\r\n * @function\r\n * @param {string|Array<string>} type The event type or array of event types.\r\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\r\n * @api\r\n */\r\nObservable.prototype.un;\r\n\r\n/**\r\n * Removes an event listener using the key returned by `on()` or `once()`.\r\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\r\n *     or `once()` (or an array of keys).\r\n * @api\r\n */\r\nexport function unByKey(key) {\r\n  if (Array.isArray(key)) {\r\n    for (let i = 0, ii = key.length; i < ii; ++i) {\r\n      unlistenByKey(key[i]);\r\n    }\r\n  } else {\r\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\r\n  }\r\n}\r\n\r\nexport default Observable;\r\n","/**\r\n * @module ol/util\r\n */\r\n\r\n/**\r\n * @return {never} Any return.\r\n */\r\nexport function abstract() {\r\n  throw new Error('Unimplemented abstract method.');\r\n}\r\n\r\n/**\r\n * Counter for getUid.\r\n * @type {number}\r\n * @private\r\n */\r\nlet uidCounter_ = 0;\r\n\r\n/**\r\n * Gets a unique ID for an object. This mutates the object so that further calls\r\n * with the same object as a parameter returns the same value. Unique IDs are generated\r\n * as a strictly increasing sequence. Adapted from goog.getUid.\r\n *\r\n * @param {Object} obj The object to get the unique ID for.\r\n * @return {string} The unique ID for the object.\r\n * @api\r\n */\r\nexport function getUid(obj) {\r\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\r\n}\r\n\r\n/**\r\n * OpenLayers version.\r\n * @type {string}\r\n */\r\nexport const VERSION = '7.1.0';\r\n","/**\r\n * @module ol/Object\r\n */\r\nimport Event from './events/Event.js';\r\nimport ObjectEventType from './ObjectEventType.js';\r\nimport Observable from './Observable.js';\r\nimport {getUid} from './util.js';\r\nimport {isEmpty} from './obj.js';\r\n\r\n/**\r\n * @classdesc\r\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\r\n */\r\nexport class ObjectEvent extends Event {\r\n  /**\r\n   * @param {string} type The event type.\r\n   * @param {string} key The property name.\r\n   * @param {*} oldValue The old value for `key`.\r\n   */\r\n  constructor(type, key, oldValue) {\r\n    super(type);\r\n\r\n    /**\r\n     * The name of the property whose value is changing.\r\n     * @type {string}\r\n     * @api\r\n     */\r\n    this.key = key;\r\n\r\n    /**\r\n     * The old value. To get the new value use `e.target.get(e.key)` where\r\n     * `e` is the event object.\r\n     * @type {*}\r\n     * @api\r\n     */\r\n    this.oldValue = oldValue;\r\n  }\r\n}\r\n\r\n/***\r\n * @template Return\r\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\r\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\r\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Abstract base class; normally only used for creating subclasses and not\r\n * instantiated in apps.\r\n * Most non-trivial classes inherit from this.\r\n *\r\n * This extends {@link module:ol/Observable~Observable} with observable\r\n * properties, where each property is observable as well as the object as a\r\n * whole.\r\n *\r\n * Classes that inherit from this have pre-defined properties, to which you can\r\n * add your owns. The pre-defined properties are listed in this documentation as\r\n * 'Observable Properties', and have their own accessors; for example,\r\n * {@link module:ol/Map~Map} has a `target` property, accessed with\r\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\r\n * settable. There are also general-purpose accessors `get()` and `set()`. For\r\n * example, `get('target')` is equivalent to `getTarget()`.\r\n *\r\n * The `set` accessors trigger a change event, and you can monitor this by\r\n * registering a listener. For example, {@link module:ol/View~View} has a\r\n * `center` property, so `view.on('change:center', function(evt) {...});` would\r\n * call the function whenever the value of the center property changes. Within\r\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\r\n * would return the new center.\r\n *\r\n * You can add your own observable properties with\r\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\r\n * You can listen for changes on that property value with\r\n * `object.on('change:prop', listener)`. You can get a list of all\r\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\r\n *\r\n * Note that the observable properties are separate from standard JS properties.\r\n * You can, for example, give your map object a title with\r\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\r\n * first will be a `hasOwnProperty`; the second will appear in\r\n * `getProperties()`. Only the second is observable.\r\n *\r\n * Properties can be deleted by using the unset method. E.g.\r\n * object.unset('foo').\r\n *\r\n * @fires ObjectEvent\r\n * @api\r\n */\r\nclass BaseObject extends Observable {\r\n  /**\r\n   * @param {Object<string, *>} [values] An object with key-value pairs.\r\n   */\r\n  constructor(values) {\r\n    super();\r\n\r\n    /***\r\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\r\n     */\r\n    this.on;\r\n\r\n    /***\r\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\r\n     */\r\n    this.once;\r\n\r\n    /***\r\n     * @type {ObjectOnSignature<void>}\r\n     */\r\n    this.un;\r\n\r\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\r\n    // the same as the order in which they were created.  This also helps to\r\n    // ensure that object properties are always added in the same order, which\r\n    // helps many JavaScript engines generate faster code.\r\n    getUid(this);\r\n\r\n    /**\r\n     * @private\r\n     * @type {Object<string, *>}\r\n     */\r\n    this.values_ = null;\r\n\r\n    if (values !== undefined) {\r\n      this.setProperties(values);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Gets a value.\r\n   * @param {string} key Key name.\r\n   * @return {*} Value.\r\n   * @api\r\n   */\r\n  get(key) {\r\n    let value;\r\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\r\n      value = this.values_[key];\r\n    }\r\n    return value;\r\n  }\r\n\r\n  /**\r\n   * Get a list of object property names.\r\n   * @return {Array<string>} List of property names.\r\n   * @api\r\n   */\r\n  getKeys() {\r\n    return (this.values_ && Object.keys(this.values_)) || [];\r\n  }\r\n\r\n  /**\r\n   * Get an object of all property names and values.\r\n   * @return {Object<string, *>} Object.\r\n   * @api\r\n   */\r\n  getProperties() {\r\n    return (this.values_ && Object.assign({}, this.values_)) || {};\r\n  }\r\n\r\n  /**\r\n   * @return {boolean} The object has properties.\r\n   */\r\n  hasProperties() {\r\n    return !!this.values_;\r\n  }\r\n\r\n  /**\r\n   * @param {string} key Key name.\r\n   * @param {*} oldValue Old value.\r\n   */\r\n  notify(key, oldValue) {\r\n    let eventType;\r\n    eventType = `change:${key}`;\r\n    if (this.hasListener(eventType)) {\r\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\r\n    }\r\n    eventType = ObjectEventType.PROPERTYCHANGE;\r\n    if (this.hasListener(eventType)) {\r\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {string} key Key name.\r\n   * @param {import(\"./events.js\").Listener} listener Listener.\r\n   */\r\n  addChangeListener(key, listener) {\r\n    this.addEventListener(`change:${key}`, listener);\r\n  }\r\n\r\n  /**\r\n   * @param {string} key Key name.\r\n   * @param {import(\"./events.js\").Listener} listener Listener.\r\n   */\r\n  removeChangeListener(key, listener) {\r\n    this.removeEventListener(`change:${key}`, listener);\r\n  }\r\n\r\n  /**\r\n   * Sets a value.\r\n   * @param {string} key Key name.\r\n   * @param {*} value Value.\r\n   * @param {boolean} [silent] Update without triggering an event.\r\n   * @api\r\n   */\r\n  set(key, value, silent) {\r\n    const values = this.values_ || (this.values_ = {});\r\n    if (silent) {\r\n      values[key] = value;\r\n    } else {\r\n      const oldValue = values[key];\r\n      values[key] = value;\r\n      if (oldValue !== value) {\r\n        this.notify(key, oldValue);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sets a collection of key-value pairs.  Note that this changes any existing\r\n   * properties and adds new ones (it does not remove any existing properties).\r\n   * @param {Object<string, *>} values Values.\r\n   * @param {boolean} [silent] Update without triggering an event.\r\n   * @api\r\n   */\r\n  setProperties(values, silent) {\r\n    for (const key in values) {\r\n      this.set(key, values[key], silent);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Apply any properties from another object without triggering events.\r\n   * @param {BaseObject} source The source object.\r\n   * @protected\r\n   */\r\n  applyProperties(source) {\r\n    if (!source.values_) {\r\n      return;\r\n    }\r\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\r\n  }\r\n\r\n  /**\r\n   * Unsets a property.\r\n   * @param {string} key Key name.\r\n   * @param {boolean} [silent] Unset without triggering an event.\r\n   * @api\r\n   */\r\n  unset(key, silent) {\r\n    if (this.values_ && key in this.values_) {\r\n      const oldValue = this.values_[key];\r\n      delete this.values_[key];\r\n      if (isEmpty(this.values_)) {\r\n        this.values_ = null;\r\n      }\r\n      if (!silent) {\r\n        this.notify(key, oldValue);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default BaseObject;\r\n","/**\r\n * @module ol/AssertionError\r\n */\r\n\r\n/** @type {Object<number, string>} */\r\nconst messages = {\r\n  1: 'The view center is not defined',\r\n  2: 'The view resolution is not defined',\r\n  3: 'The view rotation is not defined',\r\n  4: '`image` and `src` cannot be provided at the same time',\r\n  5: '`imgSize` must be set when `image` is provided',\r\n  7: '`format` must be set when `url` is set',\r\n  8: 'Unknown `serverType` configured',\r\n  9: '`url` must be configured or set using `#setUrl()`',\r\n  10: 'The default `geometryFunction` can only handle `Point` geometries',\r\n  11: '`options.featureTypes` must be an Array',\r\n  12: '`options.geometryName` must also be provided when `options.bbox` is set',\r\n  13: 'Invalid corner',\r\n  14: 'Invalid color',\r\n  15: 'Tried to get a value for a key that does not exist in the cache',\r\n  16: 'Tried to set a value for a key that is used already',\r\n  17: '`resolutions` must be sorted in descending order',\r\n  18: 'Either `origin` or `origins` must be configured, never both',\r\n  19: 'Number of `tileSizes` and `resolutions` must be equal',\r\n  20: 'Number of `origins` and `resolutions` must be equal',\r\n  22: 'Either `tileSize` or `tileSizes` must be configured, never both',\r\n  24: 'Invalid extent or geometry provided as `geometry`',\r\n  25: 'Cannot fit empty extent provided as `geometry`',\r\n  26: 'Features must have an id set',\r\n  27: 'Features must have an id set',\r\n  28: '`renderMode` must be `\"hybrid\"` or `\"vector\"`',\r\n  30: 'The passed `feature` was already added to the source',\r\n  31: 'Tried to enqueue an `element` that was already added to the queue',\r\n  32: 'Transformation matrix cannot be inverted',\r\n  33: 'Invalid units',\r\n  34: 'Invalid geometry layout',\r\n  36: 'Unknown SRS type',\r\n  37: 'Unknown geometry type found',\r\n  38: '`styleMapValue` has an unknown type',\r\n  39: 'Unknown geometry type',\r\n  40: 'Expected `feature` to have a geometry',\r\n  41: 'Expected an `ol/style/Style` or an array of `ol/style/Style.js`',\r\n  42: 'Question unknown, the answer is 42',\r\n  43: 'Expected `layers` to be an array or a `Collection`',\r\n  47: 'Expected `controls` to be an array or an `ol/Collection`',\r\n  48: 'Expected `interactions` to be an array or an `ol/Collection`',\r\n  49: 'Expected `overlays` to be an array or an `ol/Collection`',\r\n  50: '`options.featureTypes` should be an Array',\r\n  51: 'Either `url` or `tileJSON` options must be provided',\r\n  52: 'Unknown `serverType` configured',\r\n  53: 'Unknown `tierSizeCalculation` configured',\r\n  55: 'The {-y} placeholder requires a tile grid with extent',\r\n  56: 'mapBrowserEvent must originate from a pointer event',\r\n  57: 'At least 2 conditions are required',\r\n  59: 'Invalid command found in the PBF',\r\n  60: 'Missing or invalid `size`',\r\n  61: 'Cannot determine IIIF Image API version from provided image information JSON',\r\n  62: 'A `WebGLArrayBuffer` must either be of type `ELEMENT_ARRAY_BUFFER` or `ARRAY_BUFFER`',\r\n  64: 'Layer opacity must be a number',\r\n  66: '`forEachFeatureAtCoordinate` cannot be used on a WebGL layer if the hit detection logic has not been enabled. This is done by providing adequate shaders using the `hitVertexShader` and `hitFragmentShader` properties of `WebGLPointsLayerRenderer`',\r\n  67: 'A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both',\r\n  68: 'A VectorTile source can only be rendered if it has a projection compatible with the view projection',\r\n};\r\n\r\n/**\r\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\r\n * extended with a `code` property.\r\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\r\n */\r\nclass AssertionError extends Error {\r\n  /**\r\n   * @param {number} code Error code.\r\n   */\r\n  constructor(code) {\r\n    const message = messages[code];\r\n\r\n    super(message);\r\n\r\n    /**\r\n     * Error code. The meaning of the code can be found on\r\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\r\n     * the version found in the OpenLayers script's header comment if a version\r\n     * other than the latest is used).\r\n     * @type {number}\r\n     * @deprecated ol/AssertionError and error codes will be removed in v8.0\r\n     * @api\r\n     */\r\n    this.code = code;\r\n\r\n    /**\r\n     * @type {string}\r\n     */\r\n    this.name = 'AssertionError';\r\n\r\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\r\n    this.message = message;\r\n  }\r\n}\r\n\r\nexport default AssertionError;\r\n","/**\r\n * @module ol/asserts\r\n */\r\nimport AssertionError from './AssertionError.js';\r\n\r\n/**\r\n * @param {*} assertion Assertion we expected to be truthy.\r\n * @param {number} errorCode Error code.\r\n */\r\nexport function assert(assertion, errorCode) {\r\n  if (!assertion) {\r\n    throw new AssertionError(errorCode);\r\n  }\r\n}\r\n","/**\r\n * @module ol/Feature\r\n */\r\nimport BaseObject from './Object.js';\r\nimport EventType from './events/EventType.js';\r\nimport {assert} from './asserts.js';\r\nimport {listen, unlistenByKey} from './events.js';\r\n\r\n/**\r\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\r\n */\r\n\r\n/**\r\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\r\n */\r\n\r\n/***\r\n * @template Return\r\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\r\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\r\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\r\n *     |'change:geometry', Return>} FeatureOnSignature\r\n */\r\n\r\n/***\r\n * @template Geometry\r\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * A vector object for geographic features with a geometry and other\r\n * attribute properties, similar to the features in vector file formats like\r\n * GeoJSON.\r\n *\r\n * Features can be styled individually with `setStyle`; otherwise they use the\r\n * style of their vector layer.\r\n *\r\n * Note that attribute properties are set as {@link module:ol/Object~BaseObject} properties on\r\n * the feature object, so they are observable, and have get/set accessors.\r\n *\r\n * Typically, a feature has a single geometry property. You can set the\r\n * geometry using the `setGeometry` method and get it with `getGeometry`.\r\n * It is possible to store more than one geometry on a feature using attribute\r\n * properties. By default, the geometry used for rendering is identified by\r\n * the property name `geometry`. If you want to use another geometry property\r\n * for rendering, use the `setGeometryName` method to change the attribute\r\n * property associated with the geometry for the feature.  For example:\r\n *\r\n * ```js\r\n *\r\n * import Feature from 'ol/Feature';\r\n * import Polygon from 'ol/geom/Polygon';\r\n * import Point from 'ol/geom/Point';\r\n *\r\n * const feature = new Feature({\r\n *   geometry: new Polygon(polyCoords),\r\n *   labelPoint: new Point(labelCoords),\r\n *   name: 'My Polygon',\r\n * });\r\n *\r\n * // get the polygon geometry\r\n * const poly = feature.getGeometry();\r\n *\r\n * // Render the feature as a point using the coordinates from labelPoint\r\n * feature.setGeometryName('labelPoint');\r\n *\r\n * // get the point geometry\r\n * const point = feature.getGeometry();\r\n * ```\r\n *\r\n * @api\r\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\r\n */\r\nclass Feature extends BaseObject {\r\n  /**\r\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [geometryOrProperties]\r\n   *     You may pass a Geometry object directly, or an object literal containing\r\n   *     properties. If you pass an object literal, you may include a Geometry\r\n   *     associated with a `geometry` key.\r\n   */\r\n  constructor(geometryOrProperties) {\r\n    super();\r\n\r\n    /***\r\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\r\n     */\r\n    this.on;\r\n\r\n    /***\r\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\r\n     */\r\n    this.once;\r\n\r\n    /***\r\n     * @type {FeatureOnSignature<void>}\r\n     */\r\n    this.un;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|string|undefined}\r\n     */\r\n    this.id_ = undefined;\r\n\r\n    /**\r\n     * @type {string}\r\n     * @private\r\n     */\r\n    this.geometryName_ = 'geometry';\r\n\r\n    /**\r\n     * User provided style.\r\n     * @private\r\n     * @type {import(\"./style/Style.js\").StyleLike}\r\n     */\r\n    this.style_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\r\n     */\r\n    this.styleFunction_ = undefined;\r\n\r\n    /**\r\n     * @private\r\n     * @type {?import(\"./events.js\").EventsKey}\r\n     */\r\n    this.geometryChangeKey_ = null;\r\n\r\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\r\n\r\n    if (geometryOrProperties) {\r\n      if (\r\n        typeof (\r\n          /** @type {?} */ (geometryOrProperties).getSimplifiedGeometry\r\n        ) === 'function'\r\n      ) {\r\n        const geometry = /** @type {Geometry} */ (geometryOrProperties);\r\n        this.setGeometry(geometry);\r\n      } else {\r\n        /** @type {Object<string, *>} */\r\n        const properties = geometryOrProperties;\r\n        this.setProperties(properties);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clone this feature. If the original feature has a geometry it\r\n   * is also cloned. The feature id is not set in the clone.\r\n   * @return {Feature<Geometry>} The clone.\r\n   * @api\r\n   */\r\n  clone() {\r\n    const clone = /** @type {Feature<Geometry>} */ (\r\n      new Feature(this.hasProperties() ? this.getProperties() : null)\r\n    );\r\n    clone.setGeometryName(this.getGeometryName());\r\n    const geometry = this.getGeometry();\r\n    if (geometry) {\r\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\r\n    }\r\n    const style = this.getStyle();\r\n    if (style) {\r\n      clone.setStyle(style);\r\n    }\r\n    return clone;\r\n  }\r\n\r\n  /**\r\n   * Get the feature's default geometry.  A feature may have any number of named\r\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\r\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\r\n   * @return {Geometry|undefined} The default geometry for the feature.\r\n   * @api\r\n   * @observable\r\n   */\r\n  getGeometry() {\r\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\r\n  }\r\n\r\n  /**\r\n   * Get the feature identifier.  This is a stable identifier for the feature and\r\n   * is either set when reading data from a remote source or set explicitly by\r\n   * calling {@link module:ol/Feature~Feature#setId}.\r\n   * @return {number|string|undefined} Id.\r\n   * @api\r\n   */\r\n  getId() {\r\n    return this.id_;\r\n  }\r\n\r\n  /**\r\n   * Get the name of the feature's default geometry.  By default, the default\r\n   * geometry is named `geometry`.\r\n   * @return {string} Get the property name associated with the default geometry\r\n   *     for this feature.\r\n   * @api\r\n   */\r\n  getGeometryName() {\r\n    return this.geometryName_;\r\n  }\r\n\r\n  /**\r\n   * Get the feature's style. Will return what was provided to the\r\n   * {@link module:ol/Feature~Feature#setStyle} method.\r\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\r\n   * @api\r\n   */\r\n  getStyle() {\r\n    return this.style_;\r\n  }\r\n\r\n  /**\r\n   * Get the feature's style function.\r\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\r\n   * representing the current style of this feature.\r\n   * @api\r\n   */\r\n  getStyleFunction() {\r\n    return this.styleFunction_;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  handleGeometryChange_() {\r\n    this.changed();\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  handleGeometryChanged_() {\r\n    if (this.geometryChangeKey_) {\r\n      unlistenByKey(this.geometryChangeKey_);\r\n      this.geometryChangeKey_ = null;\r\n    }\r\n    const geometry = this.getGeometry();\r\n    if (geometry) {\r\n      this.geometryChangeKey_ = listen(\r\n        geometry,\r\n        EventType.CHANGE,\r\n        this.handleGeometryChange_,\r\n        this\r\n      );\r\n    }\r\n    this.changed();\r\n  }\r\n\r\n  /**\r\n   * Set the default geometry for the feature.  This will update the property\r\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\r\n   * @param {Geometry|undefined} geometry The new geometry.\r\n   * @api\r\n   * @observable\r\n   */\r\n  setGeometry(geometry) {\r\n    this.set(this.geometryName_, geometry);\r\n  }\r\n\r\n  /**\r\n   * Set the style for the feature to override the layer style.  This can be a\r\n   * single style object, an array of styles, or a function that takes a\r\n   * resolution and returns an array of styles. To unset the feature style, call\r\n   * `setStyle()` without arguments or a falsey value.\r\n   * @param {import(\"./style/Style.js\").StyleLike} [style] Style for this feature.\r\n   * @api\r\n   * @fires module:ol/events/Event~BaseEvent#event:change\r\n   */\r\n  setStyle(style) {\r\n    this.style_ = style;\r\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\r\n    this.changed();\r\n  }\r\n\r\n  /**\r\n   * Set the feature id.  The feature id is considered stable and may be used when\r\n   * requesting features or comparing identifiers returned from a remote source.\r\n   * The feature id can be used with the\r\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\r\n   * @param {number|string|undefined} id The feature id.\r\n   * @api\r\n   * @fires module:ol/events/Event~BaseEvent#event:change\r\n   */\r\n  setId(id) {\r\n    this.id_ = id;\r\n    this.changed();\r\n  }\r\n\r\n  /**\r\n   * Set the property name to be used when getting the feature's default geometry.\r\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\r\n   * this name will be returned.\r\n   * @param {string} name The property name of the default geometry.\r\n   * @api\r\n   */\r\n  setGeometryName(name) {\r\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\r\n    this.geometryName_ = name;\r\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\r\n    this.handleGeometryChanged_();\r\n  }\r\n}\r\n\r\n/**\r\n * Convert the provided object into a feature style function.  Functions passed\r\n * through unchanged.  Arrays of Style or single style objects wrapped\r\n * in a new feature style function.\r\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\r\n *     A feature style function, a single style, or an array of styles.\r\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\r\n */\r\nexport function createStyleFunction(obj) {\r\n  if (typeof obj === 'function') {\r\n    return obj;\r\n  } else {\r\n    /**\r\n     * @type {Array<import(\"./style/Style.js\").default>}\r\n     */\r\n    let styles;\r\n    if (Array.isArray(obj)) {\r\n      styles = obj;\r\n    } else {\r\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\r\n      const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\r\n      styles = [style];\r\n    }\r\n    return function () {\r\n      return styles;\r\n    };\r\n  }\r\n}\r\nexport default Feature;\r\n","/**\r\n * @module ol/CollectionEventType\r\n */\r\n\r\n/**\r\n * @enum {string}\r\n */\r\nexport default {\r\n  /**\r\n   * Triggered when an item is added to the collection.\r\n   * @event module:ol/Collection.CollectionEvent#add\r\n   * @api\r\n   */\r\n  ADD: 'add',\r\n  /**\r\n   * Triggered when an item is removed from the collection.\r\n   * @event module:ol/Collection.CollectionEvent#remove\r\n   * @api\r\n   */\r\n  REMOVE: 'remove',\r\n};\r\n","/**\r\n * @module ol/Collection\r\n */\r\nimport AssertionError from './AssertionError.js';\r\nimport BaseObject from './Object.js';\r\nimport CollectionEventType from './CollectionEventType.js';\r\nimport Event from './events/Event.js';\r\n\r\n/**\r\n * @enum {string}\r\n * @private\r\n */\r\nconst Property = {\r\n  LENGTH: 'length',\r\n};\r\n\r\n/**\r\n * @classdesc\r\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\r\n * type.\r\n * @template T\r\n */\r\nexport class CollectionEvent extends Event {\r\n  /**\r\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\r\n   * @param {T} element Element.\r\n   * @param {number} index The index of the added or removed element.\r\n   */\r\n  constructor(type, element, index) {\r\n    super(type);\r\n\r\n    /**\r\n     * The element that is added to or removed from the collection.\r\n     * @type {T}\r\n     * @api\r\n     */\r\n    this.element = element;\r\n\r\n    /**\r\n     * The index of the added or removed element.\r\n     * @type {number}\r\n     * @api\r\n     */\r\n    this.index = index;\r\n  }\r\n}\r\n\r\n/***\r\n * @template T\r\n * @template Return\r\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\r\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\r\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent<T>, Return> &\r\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\r\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\r\n */\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {boolean} [unique=false] Disallow the same item from being added to\r\n * the collection twice.\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * An expanded version of standard JS Array, adding convenience methods for\r\n * manipulation. Add and remove changes to the Collection trigger a Collection\r\n * event. Note that this does not cover changes to the objects _within_ the\r\n * Collection; they trigger events on the appropriate object, not on the\r\n * Collection as a whole.\r\n *\r\n * @fires CollectionEvent\r\n *\r\n * @template T\r\n * @api\r\n */\r\nclass Collection extends BaseObject {\r\n  /**\r\n   * @param {Array<T>} [array] Array.\r\n   * @param {Options} [options] Collection options.\r\n   */\r\n  constructor(array, options) {\r\n    super();\r\n\r\n    /***\r\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\r\n     */\r\n    this.on;\r\n\r\n    /***\r\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\r\n     */\r\n    this.once;\r\n\r\n    /***\r\n     * @type {CollectionOnSignature<T, void>}\r\n     */\r\n    this.un;\r\n\r\n    options = options || {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.unique_ = !!options.unique;\r\n\r\n    /**\r\n     * @private\r\n     * @type {!Array<T>}\r\n     */\r\n    this.array_ = array ? array : [];\r\n\r\n    if (this.unique_) {\r\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\r\n        this.assertUnique_(this.array_[i], i);\r\n      }\r\n    }\r\n\r\n    this.updateLength_();\r\n  }\r\n\r\n  /**\r\n   * Remove all elements from the collection.\r\n   * @api\r\n   */\r\n  clear() {\r\n    while (this.getLength() > 0) {\r\n      this.pop();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Add elements to the collection.  This pushes each item in the provided array\r\n   * to the end of the collection.\r\n   * @param {!Array<T>} arr Array.\r\n   * @return {Collection<T>} This collection.\r\n   * @api\r\n   */\r\n  extend(arr) {\r\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\r\n      this.push(arr[i]);\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Iterate over each element, calling the provided callback.\r\n   * @param {function(T, number, Array<T>): *} f The function to call\r\n   *     for every element. This function takes 3 arguments (the element, the\r\n   *     index and the array). The return value is ignored.\r\n   * @api\r\n   */\r\n  forEach(f) {\r\n    const array = this.array_;\r\n    for (let i = 0, ii = array.length; i < ii; ++i) {\r\n      f(array[i], i, array);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get a reference to the underlying Array object. Warning: if the array\r\n   * is mutated, no events will be dispatched by the collection, and the\r\n   * collection's \"length\" property won't be in sync with the actual length\r\n   * of the array.\r\n   * @return {!Array<T>} Array.\r\n   * @api\r\n   */\r\n  getArray() {\r\n    return this.array_;\r\n  }\r\n\r\n  /**\r\n   * Get the element at the provided index.\r\n   * @param {number} index Index.\r\n   * @return {T} Element.\r\n   * @api\r\n   */\r\n  item(index) {\r\n    return this.array_[index];\r\n  }\r\n\r\n  /**\r\n   * Get the length of this collection.\r\n   * @return {number} The length of the array.\r\n   * @observable\r\n   * @api\r\n   */\r\n  getLength() {\r\n    return this.get(Property.LENGTH);\r\n  }\r\n\r\n  /**\r\n   * Insert an element at the provided index.\r\n   * @param {number} index Index.\r\n   * @param {T} elem Element.\r\n   * @api\r\n   */\r\n  insertAt(index, elem) {\r\n    if (index < 0 || index > this.getLength()) {\r\n      throw new Error('Index out of bounds: ' + index);\r\n    }\r\n    if (this.unique_) {\r\n      this.assertUnique_(elem);\r\n    }\r\n    this.array_.splice(index, 0, elem);\r\n    this.updateLength_();\r\n    this.dispatchEvent(\r\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Remove the last element of the collection and return it.\r\n   * Return `undefined` if the collection is empty.\r\n   * @return {T|undefined} Element.\r\n   * @api\r\n   */\r\n  pop() {\r\n    return this.removeAt(this.getLength() - 1);\r\n  }\r\n\r\n  /**\r\n   * Insert the provided element at the end of the collection.\r\n   * @param {T} elem Element.\r\n   * @return {number} New length of the collection.\r\n   * @api\r\n   */\r\n  push(elem) {\r\n    if (this.unique_) {\r\n      this.assertUnique_(elem);\r\n    }\r\n    const n = this.getLength();\r\n    this.insertAt(n, elem);\r\n    return this.getLength();\r\n  }\r\n\r\n  /**\r\n   * Remove the first occurrence of an element from the collection.\r\n   * @param {T} elem Element.\r\n   * @return {T|undefined} The removed element or undefined if none found.\r\n   * @api\r\n   */\r\n  remove(elem) {\r\n    const arr = this.array_;\r\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\r\n      if (arr[i] === elem) {\r\n        return this.removeAt(i);\r\n      }\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  /**\r\n   * Remove the element at the provided index and return it.\r\n   * Return `undefined` if the collection does not contain this index.\r\n   * @param {number} index Index.\r\n   * @return {T|undefined} Value.\r\n   * @api\r\n   */\r\n  removeAt(index) {\r\n    if (index < 0 || index >= this.getLength()) {\r\n      return undefined;\r\n    }\r\n    const prev = this.array_[index];\r\n    this.array_.splice(index, 1);\r\n    this.updateLength_();\r\n    this.dispatchEvent(\r\n      /** @type {CollectionEvent<T>} */ (\r\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\r\n      )\r\n    );\r\n    return prev;\r\n  }\r\n\r\n  /**\r\n   * Set the element at the provided index.\r\n   * @param {number} index Index.\r\n   * @param {T} elem Element.\r\n   * @api\r\n   */\r\n  setAt(index, elem) {\r\n    const n = this.getLength();\r\n    if (index >= n) {\r\n      this.insertAt(index, elem);\r\n      return;\r\n    }\r\n    if (index < 0) {\r\n      throw new Error('Index out of bounds: ' + index);\r\n    }\r\n    if (this.unique_) {\r\n      this.assertUnique_(elem, index);\r\n    }\r\n    const prev = this.array_[index];\r\n    this.array_[index] = elem;\r\n    this.dispatchEvent(\r\n      /** @type {CollectionEvent<T>} */ (\r\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\r\n      )\r\n    );\r\n    this.dispatchEvent(\r\n      /** @type {CollectionEvent<T>} */ (\r\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\r\n      )\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  updateLength_() {\r\n    this.set(Property.LENGTH, this.array_.length);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {T} elem Element.\r\n   * @param {number} [except] Optional index to ignore.\r\n   */\r\n  assertUnique_(elem, except) {\r\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\r\n      if (this.array_[i] === elem && i !== except) {\r\n        throw new AssertionError(58);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default Collection;\r\n","/**\r\n * @module ol/has\r\n */\r\n\r\nconst ua =\r\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\r\n    ? navigator.userAgent.toLowerCase()\r\n    : '';\r\n\r\n/**\r\n * User agent string says we are dealing with Firefox as browser.\r\n * @type {boolean}\r\n */\r\nexport const FIREFOX = ua.includes('firefox');\r\n\r\n/**\r\n * User agent string says we are dealing with Safari as browser.\r\n * @type {boolean}\r\n */\r\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\r\n\r\n/**\r\n * https://bugs.webkit.org/show_bug.cgi?id=237906\r\n * @type {boolean}\r\n */\r\nexport const SAFARI_BUG_237906 =\r\n  SAFARI &&\r\n  (ua.includes('version/15.4') ||\r\n    /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\r\n\r\n/**\r\n * User agent string says we are dealing with a WebKit engine.\r\n * @type {boolean}\r\n */\r\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\r\n\r\n/**\r\n * User agent string says we are dealing with a Mac as platform.\r\n * @type {boolean}\r\n */\r\nexport const MAC = ua.includes('macintosh');\r\n\r\n/**\r\n * The ratio between physical pixels and device-independent pixels\r\n * (dips) on the device (`window.devicePixelRatio`).\r\n * @const\r\n * @type {number}\r\n * @api\r\n */\r\nexport const DEVICE_PIXEL_RATIO =\r\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\r\n\r\n/**\r\n * The execution context is a worker with OffscreenCanvas available.\r\n * @const\r\n * @type {boolean}\r\n */\r\nexport const WORKER_OFFSCREEN_CANVAS =\r\n  typeof WorkerGlobalScope !== 'undefined' &&\r\n  typeof OffscreenCanvas !== 'undefined' &&\r\n  self instanceof WorkerGlobalScope; //eslint-disable-line\r\n\r\n/**\r\n * Image.prototype.decode() is supported.\r\n * @type {boolean}\r\n */\r\nexport const IMAGE_DECODE =\r\n  typeof Image !== 'undefined' && Image.prototype.decode;\r\n\r\n/**\r\n * @type {boolean}\r\n */\r\nexport const PASSIVE_EVENT_LISTENERS = (function () {\r\n  let passive = false;\r\n  try {\r\n    const options = Object.defineProperty({}, 'passive', {\r\n      get: function () {\r\n        passive = true;\r\n      },\r\n    });\r\n\r\n    window.addEventListener('_', null, options);\r\n    window.removeEventListener('_', null, options);\r\n  } catch (error) {\r\n    // passive not supported\r\n  }\r\n  return passive;\r\n})();\r\n","/**\r\n * @module ol/transform\r\n */\r\nimport {WORKER_OFFSCREEN_CANVAS} from './has.js';\r\nimport {assert} from './asserts.js';\r\n\r\n/**\r\n * An array representing an affine 2d transformation for use with\r\n * {@link module:ol/transform} functions. The array has 6 elements.\r\n * @typedef {!Array<number>} Transform\r\n * @api\r\n */\r\n\r\n/**\r\n * Collection of affine 2d transformation functions. The functions work on an\r\n * array of 6 elements. The element order is compatible with the [SVGMatrix\r\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\r\n * a subset (elements a to f) of a 3×3 matrix:\r\n * ```\r\n * [ a c e ]\r\n * [ b d f ]\r\n * [ 0 0 1 ]\r\n * ```\r\n */\r\n\r\n/**\r\n * @private\r\n * @type {Transform}\r\n */\r\nconst tmp_ = new Array(6);\r\n\r\n/**\r\n * Create an identity transform.\r\n * @return {!Transform} Identity transform.\r\n */\r\nexport function create() {\r\n  return [1, 0, 0, 1, 0, 0];\r\n}\r\n\r\n/**\r\n * Resets the given transform to an identity transform.\r\n * @param {!Transform} transform Transform.\r\n * @return {!Transform} Transform.\r\n */\r\nexport function reset(transform) {\r\n  return set(transform, 1, 0, 0, 1, 0, 0);\r\n}\r\n\r\n/**\r\n * Multiply the underlying matrices of two transforms and return the result in\r\n * the first transform.\r\n * @param {!Transform} transform1 Transform parameters of matrix 1.\r\n * @param {!Transform} transform2 Transform parameters of matrix 2.\r\n * @return {!Transform} transform1 multiplied with transform2.\r\n */\r\nexport function multiply(transform1, transform2) {\r\n  const a1 = transform1[0];\r\n  const b1 = transform1[1];\r\n  const c1 = transform1[2];\r\n  const d1 = transform1[3];\r\n  const e1 = transform1[4];\r\n  const f1 = transform1[5];\r\n  const a2 = transform2[0];\r\n  const b2 = transform2[1];\r\n  const c2 = transform2[2];\r\n  const d2 = transform2[3];\r\n  const e2 = transform2[4];\r\n  const f2 = transform2[5];\r\n\r\n  transform1[0] = a1 * a2 + c1 * b2;\r\n  transform1[1] = b1 * a2 + d1 * b2;\r\n  transform1[2] = a1 * c2 + c1 * d2;\r\n  transform1[3] = b1 * c2 + d1 * d2;\r\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\r\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\r\n\r\n  return transform1;\r\n}\r\n\r\n/**\r\n * Set the transform components a-f on a given transform.\r\n * @param {!Transform} transform Transform.\r\n * @param {number} a The a component of the transform.\r\n * @param {number} b The b component of the transform.\r\n * @param {number} c The c component of the transform.\r\n * @param {number} d The d component of the transform.\r\n * @param {number} e The e component of the transform.\r\n * @param {number} f The f component of the transform.\r\n * @return {!Transform} Matrix with transform applied.\r\n */\r\nexport function set(transform, a, b, c, d, e, f) {\r\n  transform[0] = a;\r\n  transform[1] = b;\r\n  transform[2] = c;\r\n  transform[3] = d;\r\n  transform[4] = e;\r\n  transform[5] = f;\r\n  return transform;\r\n}\r\n\r\n/**\r\n * Set transform on one matrix from another matrix.\r\n * @param {!Transform} transform1 Matrix to set transform to.\r\n * @param {!Transform} transform2 Matrix to set transform from.\r\n * @return {!Transform} transform1 with transform from transform2 applied.\r\n */\r\nexport function setFromArray(transform1, transform2) {\r\n  transform1[0] = transform2[0];\r\n  transform1[1] = transform2[1];\r\n  transform1[2] = transform2[2];\r\n  transform1[3] = transform2[3];\r\n  transform1[4] = transform2[4];\r\n  transform1[5] = transform2[5];\r\n  return transform1;\r\n}\r\n\r\n/**\r\n * Transforms the given coordinate with the given transform returning the\r\n * resulting, transformed coordinate. The coordinate will be modified in-place.\r\n *\r\n * @param {Transform} transform The transformation.\r\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\r\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\r\n *     chained together.\r\n */\r\nexport function apply(transform, coordinate) {\r\n  const x = coordinate[0];\r\n  const y = coordinate[1];\r\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\r\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\r\n  return coordinate;\r\n}\r\n\r\n/**\r\n * Applies rotation to the given transform.\r\n * @param {!Transform} transform Transform.\r\n * @param {number} angle Angle in radians.\r\n * @return {!Transform} The rotated transform.\r\n */\r\nexport function rotate(transform, angle) {\r\n  const cos = Math.cos(angle);\r\n  const sin = Math.sin(angle);\r\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\r\n}\r\n\r\n/**\r\n * Applies scale to a given transform.\r\n * @param {!Transform} transform Transform.\r\n * @param {number} x Scale factor x.\r\n * @param {number} y Scale factor y.\r\n * @return {!Transform} The scaled transform.\r\n */\r\nexport function scale(transform, x, y) {\r\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\r\n}\r\n\r\n/**\r\n * Creates a scale transform.\r\n * @param {!Transform} target Transform to overwrite.\r\n * @param {number} x Scale factor x.\r\n * @param {number} y Scale factor y.\r\n * @return {!Transform} The scale transform.\r\n */\r\nexport function makeScale(target, x, y) {\r\n  return set(target, x, 0, 0, y, 0, 0);\r\n}\r\n\r\n/**\r\n * Applies translation to the given transform.\r\n * @param {!Transform} transform Transform.\r\n * @param {number} dx Translation x.\r\n * @param {number} dy Translation y.\r\n * @return {!Transform} The translated transform.\r\n */\r\nexport function translate(transform, dx, dy) {\r\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\r\n}\r\n\r\n/**\r\n * Creates a composite transform given an initial translation, scale, rotation, and\r\n * final translation (in that order only, not commutative).\r\n * @param {!Transform} transform The transform (will be modified in place).\r\n * @param {number} dx1 Initial translation x.\r\n * @param {number} dy1 Initial translation y.\r\n * @param {number} sx Scale factor x.\r\n * @param {number} sy Scale factor y.\r\n * @param {number} angle Rotation (in counter-clockwise radians).\r\n * @param {number} dx2 Final translation x.\r\n * @param {number} dy2 Final translation y.\r\n * @return {!Transform} The composite transform.\r\n */\r\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\r\n  const sin = Math.sin(angle);\r\n  const cos = Math.cos(angle);\r\n  transform[0] = sx * cos;\r\n  transform[1] = sy * sin;\r\n  transform[2] = -sx * sin;\r\n  transform[3] = sy * cos;\r\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\r\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\r\n  return transform;\r\n}\r\n\r\n/**\r\n * Creates a composite transform given an initial translation, scale, rotation, and\r\n * final translation (in that order only, not commutative). The resulting transform\r\n * string can be applied as `transform` property of an HTMLElement's style.\r\n * @param {number} dx1 Initial translation x.\r\n * @param {number} dy1 Initial translation y.\r\n * @param {number} sx Scale factor x.\r\n * @param {number} sy Scale factor y.\r\n * @param {number} angle Rotation (in counter-clockwise radians).\r\n * @param {number} dx2 Final translation x.\r\n * @param {number} dy2 Final translation y.\r\n * @return {string} The composite css transform.\r\n * @api\r\n */\r\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\r\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\r\n}\r\n\r\n/**\r\n * Invert the given transform.\r\n * @param {!Transform} source The source transform to invert.\r\n * @return {!Transform} The inverted (source) transform.\r\n */\r\nexport function invert(source) {\r\n  return makeInverse(source, source);\r\n}\r\n\r\n/**\r\n * Invert the given transform.\r\n * @param {!Transform} target Transform to be set as the inverse of\r\n *     the source transform.\r\n * @param {!Transform} source The source transform to invert.\r\n * @return {!Transform} The inverted (target) transform.\r\n */\r\nexport function makeInverse(target, source) {\r\n  const det = determinant(source);\r\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\r\n\r\n  const a = source[0];\r\n  const b = source[1];\r\n  const c = source[2];\r\n  const d = source[3];\r\n  const e = source[4];\r\n  const f = source[5];\r\n\r\n  target[0] = d / det;\r\n  target[1] = -b / det;\r\n  target[2] = -c / det;\r\n  target[3] = a / det;\r\n  target[4] = (c * f - d * e) / det;\r\n  target[5] = -(a * f - b * e) / det;\r\n\r\n  return target;\r\n}\r\n\r\n/**\r\n * Returns the determinant of the given matrix.\r\n * @param {!Transform} mat Matrix.\r\n * @return {number} Determinant.\r\n */\r\nexport function determinant(mat) {\r\n  return mat[0] * mat[3] - mat[1] * mat[2];\r\n}\r\n\r\n/**\r\n * @type {HTMLElement}\r\n * @private\r\n */\r\nlet transformStringDiv;\r\n\r\n/**\r\n * A rounded string version of the transform.  This can be used\r\n * for CSS transforms.\r\n * @param {!Transform} mat Matrix.\r\n * @return {string} The transform as a string.\r\n */\r\nexport function toString(mat) {\r\n  const transformString = 'matrix(' + mat.join(', ') + ')';\r\n  if (WORKER_OFFSCREEN_CANVAS) {\r\n    return transformString;\r\n  }\r\n  const node =\r\n    transformStringDiv || (transformStringDiv = document.createElement('div'));\r\n  node.style.transform = transformString;\r\n  return node.style.transform;\r\n}\r\n","/**\r\n * @module ol/extent/Relationship\r\n */\r\n\r\n/**\r\n * Relationship to an extent.\r\n * @enum {number}\r\n */\r\nexport default {\r\n  UNKNOWN: 0,\r\n  INTERSECTING: 1,\r\n  ABOVE: 2,\r\n  RIGHT: 4,\r\n  BELOW: 8,\r\n  LEFT: 16,\r\n};\r\n","/**\r\n * @module ol/extent\r\n */\r\nimport Relationship from './extent/Relationship.js';\r\nimport {assert} from './asserts.js';\r\n\r\n/**\r\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\r\n * @typedef {Array<number>} Extent\r\n * @api\r\n */\r\n\r\n/**\r\n * Extent corner.\r\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\r\n */\r\n\r\n/**\r\n * Build an extent that includes all given coordinates.\r\n *\r\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\r\n * @return {Extent} Bounding extent.\r\n * @api\r\n */\r\nexport function boundingExtent(coordinates) {\r\n  const extent = createEmpty();\r\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\r\n    extendCoordinate(extent, coordinates[i]);\r\n  }\r\n  return extent;\r\n}\r\n\r\n/**\r\n * @param {Array<number>} xs Xs.\r\n * @param {Array<number>} ys Ys.\r\n * @param {Extent} [dest] Destination extent.\r\n * @private\r\n * @return {Extent} Extent.\r\n */\r\nfunction _boundingExtentXYs(xs, ys, dest) {\r\n  const minX = Math.min.apply(null, xs);\r\n  const minY = Math.min.apply(null, ys);\r\n  const maxX = Math.max.apply(null, xs);\r\n  const maxY = Math.max.apply(null, ys);\r\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\r\n}\r\n\r\n/**\r\n * Return extent increased by the provided value.\r\n * @param {Extent} extent Extent.\r\n * @param {number} value The amount by which the extent should be buffered.\r\n * @param {Extent} [dest] Extent.\r\n * @return {Extent} Extent.\r\n * @api\r\n */\r\nexport function buffer(extent, value, dest) {\r\n  if (dest) {\r\n    dest[0] = extent[0] - value;\r\n    dest[1] = extent[1] - value;\r\n    dest[2] = extent[2] + value;\r\n    dest[3] = extent[3] + value;\r\n    return dest;\r\n  } else {\r\n    return [\r\n      extent[0] - value,\r\n      extent[1] - value,\r\n      extent[2] + value,\r\n      extent[3] + value,\r\n    ];\r\n  }\r\n}\r\n\r\n/**\r\n * Creates a clone of an extent.\r\n *\r\n * @param {Extent} extent Extent to clone.\r\n * @param {Extent} [dest] Extent.\r\n * @return {Extent} The clone.\r\n */\r\nexport function clone(extent, dest) {\r\n  if (dest) {\r\n    dest[0] = extent[0];\r\n    dest[1] = extent[1];\r\n    dest[2] = extent[2];\r\n    dest[3] = extent[3];\r\n    return dest;\r\n  } else {\r\n    return extent.slice();\r\n  }\r\n}\r\n\r\n/**\r\n * @param {Extent} extent Extent.\r\n * @param {number} x X.\r\n * @param {number} y Y.\r\n * @return {number} Closest squared distance.\r\n */\r\nexport function closestSquaredDistanceXY(extent, x, y) {\r\n  let dx, dy;\r\n  if (x < extent[0]) {\r\n    dx = extent[0] - x;\r\n  } else if (extent[2] < x) {\r\n    dx = x - extent[2];\r\n  } else {\r\n    dx = 0;\r\n  }\r\n  if (y < extent[1]) {\r\n    dy = extent[1] - y;\r\n  } else if (extent[3] < y) {\r\n    dy = y - extent[3];\r\n  } else {\r\n    dy = 0;\r\n  }\r\n  return dx * dx + dy * dy;\r\n}\r\n\r\n/**\r\n * Check if the passed coordinate is contained or on the edge of the extent.\r\n *\r\n * @param {Extent} extent Extent.\r\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\r\n * @return {boolean} The coordinate is contained in the extent.\r\n * @api\r\n */\r\nexport function containsCoordinate(extent, coordinate) {\r\n  return containsXY(extent, coordinate[0], coordinate[1]);\r\n}\r\n\r\n/**\r\n * Check if one extent contains another.\r\n *\r\n * An extent is deemed contained if it lies completely within the other extent,\r\n * including if they share one or more edges.\r\n *\r\n * @param {Extent} extent1 Extent 1.\r\n * @param {Extent} extent2 Extent 2.\r\n * @return {boolean} The second extent is contained by or on the edge of the\r\n *     first.\r\n * @api\r\n */\r\nexport function containsExtent(extent1, extent2) {\r\n  return (\r\n    extent1[0] <= extent2[0] &&\r\n    extent2[2] <= extent1[2] &&\r\n    extent1[1] <= extent2[1] &&\r\n    extent2[3] <= extent1[3]\r\n  );\r\n}\r\n\r\n/**\r\n * Check if the passed coordinate is contained or on the edge of the extent.\r\n *\r\n * @param {Extent} extent Extent.\r\n * @param {number} x X coordinate.\r\n * @param {number} y Y coordinate.\r\n * @return {boolean} The x, y values are contained in the extent.\r\n * @api\r\n */\r\nexport function containsXY(extent, x, y) {\r\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\r\n}\r\n\r\n/**\r\n * Get the relationship between a coordinate and extent.\r\n * @param {Extent} extent The extent.\r\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\r\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\r\n *     import(\"./extent/Relationship.js\").Relationship).\r\n */\r\nexport function coordinateRelationship(extent, coordinate) {\r\n  const minX = extent[0];\r\n  const minY = extent[1];\r\n  const maxX = extent[2];\r\n  const maxY = extent[3];\r\n  const x = coordinate[0];\r\n  const y = coordinate[1];\r\n  let relationship = Relationship.UNKNOWN;\r\n  if (x < minX) {\r\n    relationship = relationship | Relationship.LEFT;\r\n  } else if (x > maxX) {\r\n    relationship = relationship | Relationship.RIGHT;\r\n  }\r\n  if (y < minY) {\r\n    relationship = relationship | Relationship.BELOW;\r\n  } else if (y > maxY) {\r\n    relationship = relationship | Relationship.ABOVE;\r\n  }\r\n  if (relationship === Relationship.UNKNOWN) {\r\n    relationship = Relationship.INTERSECTING;\r\n  }\r\n  return relationship;\r\n}\r\n\r\n/**\r\n * Create an empty extent.\r\n * @return {Extent} Empty extent.\r\n * @api\r\n */\r\nexport function createEmpty() {\r\n  return [Infinity, Infinity, -Infinity, -Infinity];\r\n}\r\n\r\n/**\r\n * Create a new extent or update the provided extent.\r\n * @param {number} minX Minimum X.\r\n * @param {number} minY Minimum Y.\r\n * @param {number} maxX Maximum X.\r\n * @param {number} maxY Maximum Y.\r\n * @param {Extent} [dest] Destination extent.\r\n * @return {Extent} Extent.\r\n */\r\nexport function createOrUpdate(minX, minY, maxX, maxY, dest) {\r\n  if (dest) {\r\n    dest[0] = minX;\r\n    dest[1] = minY;\r\n    dest[2] = maxX;\r\n    dest[3] = maxY;\r\n    return dest;\r\n  } else {\r\n    return [minX, minY, maxX, maxY];\r\n  }\r\n}\r\n\r\n/**\r\n * Create a new empty extent or make the provided one empty.\r\n * @param {Extent} [dest] Extent.\r\n * @return {Extent} Extent.\r\n */\r\nexport function createOrUpdateEmpty(dest) {\r\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\r\n}\r\n\r\n/**\r\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\r\n * @param {Extent} [dest] Extent.\r\n * @return {Extent} Extent.\r\n */\r\nexport function createOrUpdateFromCoordinate(coordinate, dest) {\r\n  const x = coordinate[0];\r\n  const y = coordinate[1];\r\n  return createOrUpdate(x, y, x, y, dest);\r\n}\r\n\r\n/**\r\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\r\n * @param {Extent} [dest] Extent.\r\n * @return {Extent} Extent.\r\n */\r\nexport function createOrUpdateFromCoordinates(coordinates, dest) {\r\n  const extent = createOrUpdateEmpty(dest);\r\n  return extendCoordinates(extent, coordinates);\r\n}\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {number} end End.\r\n * @param {number} stride Stride.\r\n * @param {Extent} [dest] Extent.\r\n * @return {Extent} Extent.\r\n */\r\nexport function createOrUpdateFromFlatCoordinates(\r\n  flatCoordinates,\r\n  offset,\r\n  end,\r\n  stride,\r\n  dest\r\n) {\r\n  const extent = createOrUpdateEmpty(dest);\r\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\r\n}\r\n\r\n/**\r\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\r\n * @param {Extent} [dest] Extent.\r\n * @return {Extent} Extent.\r\n */\r\nexport function createOrUpdateFromRings(rings, dest) {\r\n  const extent = createOrUpdateEmpty(dest);\r\n  return extendRings(extent, rings);\r\n}\r\n\r\n/**\r\n * Determine if two extents are equivalent.\r\n * @param {Extent} extent1 Extent 1.\r\n * @param {Extent} extent2 Extent 2.\r\n * @return {boolean} The two extents are equivalent.\r\n * @api\r\n */\r\nexport function equals(extent1, extent2) {\r\n  return (\r\n    extent1[0] == extent2[0] &&\r\n    extent1[2] == extent2[2] &&\r\n    extent1[1] == extent2[1] &&\r\n    extent1[3] == extent2[3]\r\n  );\r\n}\r\n\r\n/**\r\n * Determine if two extents are approximately equivalent.\r\n * @param {Extent} extent1 Extent 1.\r\n * @param {Extent} extent2 Extent 2.\r\n * @param {number} tolerance Tolerance in extent coordinate units.\r\n * @return {boolean} The two extents differ by less than the tolerance.\r\n */\r\nexport function approximatelyEquals(extent1, extent2, tolerance) {\r\n  return (\r\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\r\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\r\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\r\n    Math.abs(extent1[3] - extent2[3]) < tolerance\r\n  );\r\n}\r\n\r\n/**\r\n * Modify an extent to include another extent.\r\n * @param {Extent} extent1 The extent to be modified.\r\n * @param {Extent} extent2 The extent that will be included in the first.\r\n * @return {Extent} A reference to the first (extended) extent.\r\n * @api\r\n */\r\nexport function extend(extent1, extent2) {\r\n  if (extent2[0] < extent1[0]) {\r\n    extent1[0] = extent2[0];\r\n  }\r\n  if (extent2[2] > extent1[2]) {\r\n    extent1[2] = extent2[2];\r\n  }\r\n  if (extent2[1] < extent1[1]) {\r\n    extent1[1] = extent2[1];\r\n  }\r\n  if (extent2[3] > extent1[3]) {\r\n    extent1[3] = extent2[3];\r\n  }\r\n  return extent1;\r\n}\r\n\r\n/**\r\n * @param {Extent} extent Extent.\r\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\r\n */\r\nexport function extendCoordinate(extent, coordinate) {\r\n  if (coordinate[0] < extent[0]) {\r\n    extent[0] = coordinate[0];\r\n  }\r\n  if (coordinate[0] > extent[2]) {\r\n    extent[2] = coordinate[0];\r\n  }\r\n  if (coordinate[1] < extent[1]) {\r\n    extent[1] = coordinate[1];\r\n  }\r\n  if (coordinate[1] > extent[3]) {\r\n    extent[3] = coordinate[1];\r\n  }\r\n}\r\n\r\n/**\r\n * @param {Extent} extent Extent.\r\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\r\n * @return {Extent} Extent.\r\n */\r\nexport function extendCoordinates(extent, coordinates) {\r\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\r\n    extendCoordinate(extent, coordinates[i]);\r\n  }\r\n  return extent;\r\n}\r\n\r\n/**\r\n * @param {Extent} extent Extent.\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {number} end End.\r\n * @param {number} stride Stride.\r\n * @return {Extent} Extent.\r\n */\r\nexport function extendFlatCoordinates(\r\n  extent,\r\n  flatCoordinates,\r\n  offset,\r\n  end,\r\n  stride\r\n) {\r\n  for (; offset < end; offset += stride) {\r\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\r\n  }\r\n  return extent;\r\n}\r\n\r\n/**\r\n * @param {Extent} extent Extent.\r\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\r\n * @return {Extent} Extent.\r\n */\r\nexport function extendRings(extent, rings) {\r\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\r\n    extendCoordinates(extent, rings[i]);\r\n  }\r\n  return extent;\r\n}\r\n\r\n/**\r\n * @param {Extent} extent Extent.\r\n * @param {number} x X.\r\n * @param {number} y Y.\r\n */\r\nexport function extendXY(extent, x, y) {\r\n  extent[0] = Math.min(extent[0], x);\r\n  extent[1] = Math.min(extent[1], y);\r\n  extent[2] = Math.max(extent[2], x);\r\n  extent[3] = Math.max(extent[3], y);\r\n}\r\n\r\n/**\r\n * This function calls `callback` for each corner of the extent. If the\r\n * callback returns a truthy value the function returns that value\r\n * immediately. Otherwise the function returns `false`.\r\n * @param {Extent} extent Extent.\r\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\r\n * @return {S|boolean} Value.\r\n * @template S\r\n */\r\nexport function forEachCorner(extent, callback) {\r\n  let val;\r\n  val = callback(getBottomLeft(extent));\r\n  if (val) {\r\n    return val;\r\n  }\r\n  val = callback(getBottomRight(extent));\r\n  if (val) {\r\n    return val;\r\n  }\r\n  val = callback(getTopRight(extent));\r\n  if (val) {\r\n    return val;\r\n  }\r\n  val = callback(getTopLeft(extent));\r\n  if (val) {\r\n    return val;\r\n  }\r\n  return false;\r\n}\r\n\r\n/**\r\n * Get the size of an extent.\r\n * @param {Extent} extent Extent.\r\n * @return {number} Area.\r\n * @api\r\n */\r\nexport function getArea(extent) {\r\n  let area = 0;\r\n  if (!isEmpty(extent)) {\r\n    area = getWidth(extent) * getHeight(extent);\r\n  }\r\n  return area;\r\n}\r\n\r\n/**\r\n * Get the bottom left coordinate of an extent.\r\n * @param {Extent} extent Extent.\r\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\r\n * @api\r\n */\r\nexport function getBottomLeft(extent) {\r\n  return [extent[0], extent[1]];\r\n}\r\n\r\n/**\r\n * Get the bottom right coordinate of an extent.\r\n * @param {Extent} extent Extent.\r\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\r\n * @api\r\n */\r\nexport function getBottomRight(extent) {\r\n  return [extent[2], extent[1]];\r\n}\r\n\r\n/**\r\n * Get the center coordinate of an extent.\r\n * @param {Extent} extent Extent.\r\n * @return {import(\"./coordinate.js\").Coordinate} Center.\r\n * @api\r\n */\r\nexport function getCenter(extent) {\r\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\r\n}\r\n\r\n/**\r\n * Get a corner coordinate of an extent.\r\n * @param {Extent} extent Extent.\r\n * @param {Corner} corner Corner.\r\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\r\n */\r\nexport function getCorner(extent, corner) {\r\n  let coordinate;\r\n  if (corner === 'bottom-left') {\r\n    coordinate = getBottomLeft(extent);\r\n  } else if (corner === 'bottom-right') {\r\n    coordinate = getBottomRight(extent);\r\n  } else if (corner === 'top-left') {\r\n    coordinate = getTopLeft(extent);\r\n  } else if (corner === 'top-right') {\r\n    coordinate = getTopRight(extent);\r\n  } else {\r\n    assert(false, 13); // Invalid corner\r\n  }\r\n  return coordinate;\r\n}\r\n\r\n/**\r\n * @param {Extent} extent1 Extent 1.\r\n * @param {Extent} extent2 Extent 2.\r\n * @return {number} Enlarged area.\r\n */\r\nexport function getEnlargedArea(extent1, extent2) {\r\n  const minX = Math.min(extent1[0], extent2[0]);\r\n  const minY = Math.min(extent1[1], extent2[1]);\r\n  const maxX = Math.max(extent1[2], extent2[2]);\r\n  const maxY = Math.max(extent1[3], extent2[3]);\r\n  return (maxX - minX) * (maxY - minY);\r\n}\r\n\r\n/**\r\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\r\n * @param {number} resolution Resolution.\r\n * @param {number} rotation Rotation.\r\n * @param {import(\"./size.js\").Size} size Size.\r\n * @param {Extent} [dest] Destination extent.\r\n * @return {Extent} Extent.\r\n */\r\nexport function getForViewAndSize(center, resolution, rotation, size, dest) {\r\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\r\n    center,\r\n    resolution,\r\n    rotation,\r\n    size\r\n  );\r\n  return createOrUpdate(\r\n    Math.min(x0, x1, x2, x3),\r\n    Math.min(y0, y1, y2, y3),\r\n    Math.max(x0, x1, x2, x3),\r\n    Math.max(y0, y1, y2, y3),\r\n    dest\r\n  );\r\n}\r\n\r\n/**\r\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\r\n * @param {number} resolution Resolution.\r\n * @param {number} rotation Rotation.\r\n * @param {import(\"./size.js\").Size} size Size.\r\n * @return {Array<number>} Linear ring representing the viewport.\r\n */\r\nexport function getRotatedViewport(center, resolution, rotation, size) {\r\n  const dx = (resolution * size[0]) / 2;\r\n  const dy = (resolution * size[1]) / 2;\r\n  const cosRotation = Math.cos(rotation);\r\n  const sinRotation = Math.sin(rotation);\r\n  const xCos = dx * cosRotation;\r\n  const xSin = dx * sinRotation;\r\n  const yCos = dy * cosRotation;\r\n  const ySin = dy * sinRotation;\r\n  const x = center[0];\r\n  const y = center[1];\r\n  return [\r\n    x - xCos + ySin,\r\n    y - xSin - yCos,\r\n    x - xCos - ySin,\r\n    y - xSin + yCos,\r\n    x + xCos - ySin,\r\n    y + xSin + yCos,\r\n    x + xCos + ySin,\r\n    y + xSin - yCos,\r\n    x - xCos + ySin,\r\n    y - xSin - yCos,\r\n  ];\r\n}\r\n\r\n/**\r\n * Get the height of an extent.\r\n * @param {Extent} extent Extent.\r\n * @return {number} Height.\r\n * @api\r\n */\r\nexport function getHeight(extent) {\r\n  return extent[3] - extent[1];\r\n}\r\n\r\n/**\r\n * @param {Extent} extent1 Extent 1.\r\n * @param {Extent} extent2 Extent 2.\r\n * @return {number} Intersection area.\r\n */\r\nexport function getIntersectionArea(extent1, extent2) {\r\n  const intersection = getIntersection(extent1, extent2);\r\n  return getArea(intersection);\r\n}\r\n\r\n/**\r\n * Get the intersection of two extents.\r\n * @param {Extent} extent1 Extent 1.\r\n * @param {Extent} extent2 Extent 2.\r\n * @param {Extent} [dest] Optional extent to populate with intersection.\r\n * @return {Extent} Intersecting extent.\r\n * @api\r\n */\r\nexport function getIntersection(extent1, extent2, dest) {\r\n  const intersection = dest ? dest : createEmpty();\r\n  if (intersects(extent1, extent2)) {\r\n    if (extent1[0] > extent2[0]) {\r\n      intersection[0] = extent1[0];\r\n    } else {\r\n      intersection[0] = extent2[0];\r\n    }\r\n    if (extent1[1] > extent2[1]) {\r\n      intersection[1] = extent1[1];\r\n    } else {\r\n      intersection[1] = extent2[1];\r\n    }\r\n    if (extent1[2] < extent2[2]) {\r\n      intersection[2] = extent1[2];\r\n    } else {\r\n      intersection[2] = extent2[2];\r\n    }\r\n    if (extent1[3] < extent2[3]) {\r\n      intersection[3] = extent1[3];\r\n    } else {\r\n      intersection[3] = extent2[3];\r\n    }\r\n  } else {\r\n    createOrUpdateEmpty(intersection);\r\n  }\r\n  return intersection;\r\n}\r\n\r\n/**\r\n * @param {Extent} extent Extent.\r\n * @return {number} Margin.\r\n */\r\nexport function getMargin(extent) {\r\n  return getWidth(extent) + getHeight(extent);\r\n}\r\n\r\n/**\r\n * Get the size (width, height) of an extent.\r\n * @param {Extent} extent The extent.\r\n * @return {import(\"./size.js\").Size} The extent size.\r\n * @api\r\n */\r\nexport function getSize(extent) {\r\n  return [extent[2] - extent[0], extent[3] - extent[1]];\r\n}\r\n\r\n/**\r\n * Get the top left coordinate of an extent.\r\n * @param {Extent} extent Extent.\r\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\r\n * @api\r\n */\r\nexport function getTopLeft(extent) {\r\n  return [extent[0], extent[3]];\r\n}\r\n\r\n/**\r\n * Get the top right coordinate of an extent.\r\n * @param {Extent} extent Extent.\r\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\r\n * @api\r\n */\r\nexport function getTopRight(extent) {\r\n  return [extent[2], extent[3]];\r\n}\r\n\r\n/**\r\n * Get the width of an extent.\r\n * @param {Extent} extent Extent.\r\n * @return {number} Width.\r\n * @api\r\n */\r\nexport function getWidth(extent) {\r\n  return extent[2] - extent[0];\r\n}\r\n\r\n/**\r\n * Determine if one extent intersects another.\r\n * @param {Extent} extent1 Extent 1.\r\n * @param {Extent} extent2 Extent.\r\n * @return {boolean} The two extents intersect.\r\n * @api\r\n */\r\nexport function intersects(extent1, extent2) {\r\n  return (\r\n    extent1[0] <= extent2[2] &&\r\n    extent1[2] >= extent2[0] &&\r\n    extent1[1] <= extent2[3] &&\r\n    extent1[3] >= extent2[1]\r\n  );\r\n}\r\n\r\n/**\r\n * Determine if an extent is empty.\r\n * @param {Extent} extent Extent.\r\n * @return {boolean} Is empty.\r\n * @api\r\n */\r\nexport function isEmpty(extent) {\r\n  return extent[2] < extent[0] || extent[3] < extent[1];\r\n}\r\n\r\n/**\r\n * @param {Extent} extent Extent.\r\n * @param {Extent} [dest] Extent.\r\n * @return {Extent} Extent.\r\n */\r\nexport function returnOrUpdate(extent, dest) {\r\n  if (dest) {\r\n    dest[0] = extent[0];\r\n    dest[1] = extent[1];\r\n    dest[2] = extent[2];\r\n    dest[3] = extent[3];\r\n    return dest;\r\n  } else {\r\n    return extent;\r\n  }\r\n}\r\n\r\n/**\r\n * @param {Extent} extent Extent.\r\n * @param {number} value Value.\r\n */\r\nexport function scaleFromCenter(extent, value) {\r\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\r\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\r\n  extent[0] -= deltaX;\r\n  extent[2] += deltaX;\r\n  extent[1] -= deltaY;\r\n  extent[3] += deltaY;\r\n}\r\n\r\n/**\r\n * Determine if the segment between two coordinates intersects (crosses,\r\n * touches, or is contained by) the provided extent.\r\n * @param {Extent} extent The extent.\r\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\r\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\r\n * @return {boolean} The segment intersects the extent.\r\n */\r\nexport function intersectsSegment(extent, start, end) {\r\n  let intersects = false;\r\n  const startRel = coordinateRelationship(extent, start);\r\n  const endRel = coordinateRelationship(extent, end);\r\n  if (\r\n    startRel === Relationship.INTERSECTING ||\r\n    endRel === Relationship.INTERSECTING\r\n  ) {\r\n    intersects = true;\r\n  } else {\r\n    const minX = extent[0];\r\n    const minY = extent[1];\r\n    const maxX = extent[2];\r\n    const maxY = extent[3];\r\n    const startX = start[0];\r\n    const startY = start[1];\r\n    const endX = end[0];\r\n    const endY = end[1];\r\n    const slope = (endY - startY) / (endX - startX);\r\n    let x, y;\r\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\r\n      // potentially intersects top\r\n      x = endX - (endY - maxY) / slope;\r\n      intersects = x >= minX && x <= maxX;\r\n    }\r\n    if (\r\n      !intersects &&\r\n      !!(endRel & Relationship.RIGHT) &&\r\n      !(startRel & Relationship.RIGHT)\r\n    ) {\r\n      // potentially intersects right\r\n      y = endY - (endX - maxX) * slope;\r\n      intersects = y >= minY && y <= maxY;\r\n    }\r\n    if (\r\n      !intersects &&\r\n      !!(endRel & Relationship.BELOW) &&\r\n      !(startRel & Relationship.BELOW)\r\n    ) {\r\n      // potentially intersects bottom\r\n      x = endX - (endY - minY) / slope;\r\n      intersects = x >= minX && x <= maxX;\r\n    }\r\n    if (\r\n      !intersects &&\r\n      !!(endRel & Relationship.LEFT) &&\r\n      !(startRel & Relationship.LEFT)\r\n    ) {\r\n      // potentially intersects left\r\n      y = endY - (endX - minX) * slope;\r\n      intersects = y >= minY && y <= maxY;\r\n    }\r\n  }\r\n  return intersects;\r\n}\r\n\r\n/**\r\n * Apply a transform function to the extent.\r\n * @param {Extent} extent Extent.\r\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\r\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\r\n * @param {Extent} [dest] Destination extent.\r\n * @param {number} [stops] Number of stops per side used for the transform.\r\n * By default only the corners are used.\r\n * @return {Extent} Extent.\r\n * @api\r\n */\r\nexport function applyTransform(extent, transformFn, dest, stops) {\r\n  let coordinates = [];\r\n  if (stops > 1) {\r\n    const width = extent[2] - extent[0];\r\n    const height = extent[3] - extent[1];\r\n    for (let i = 0; i < stops; ++i) {\r\n      coordinates.push(\r\n        extent[0] + (width * i) / stops,\r\n        extent[1],\r\n        extent[2],\r\n        extent[1] + (height * i) / stops,\r\n        extent[2] - (width * i) / stops,\r\n        extent[3],\r\n        extent[0],\r\n        extent[3] - (height * i) / stops\r\n      );\r\n    }\r\n  } else {\r\n    coordinates = [\r\n      extent[0],\r\n      extent[1],\r\n      extent[2],\r\n      extent[1],\r\n      extent[2],\r\n      extent[3],\r\n      extent[0],\r\n      extent[3],\r\n    ];\r\n  }\r\n  transformFn(coordinates, coordinates, 2);\r\n  const xs = [];\r\n  const ys = [];\r\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\r\n    xs.push(coordinates[i]);\r\n    ys.push(coordinates[i + 1]);\r\n  }\r\n  return _boundingExtentXYs(xs, ys, dest);\r\n}\r\n\r\n/**\r\n * Modifies the provided extent in-place to be within the real world\r\n * extent.\r\n *\r\n * @param {Extent} extent Extent.\r\n * @param {import(\"./proj/Projection.js\").default} projection Projection\r\n * @return {Extent} The extent within the real world extent.\r\n */\r\nexport function wrapX(extent, projection) {\r\n  const projectionExtent = projection.getExtent();\r\n  const center = getCenter(extent);\r\n  if (\r\n    projection.canWrapX() &&\r\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\r\n  ) {\r\n    const worldWidth = getWidth(projectionExtent);\r\n    const worldsAway = Math.floor(\r\n      (center[0] - projectionExtent[0]) / worldWidth\r\n    );\r\n    const offset = worldsAway * worldWidth;\r\n    extent[0] -= offset;\r\n    extent[2] -= offset;\r\n  }\r\n  return extent;\r\n}\r\n\r\n/**\r\n * Fits the extent to the real world\r\n *\r\n * If the extent does not cross the anti meridian, this will return the extent in an array\r\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\r\n * real world\r\n *\r\n *\r\n * @param {Extent} extent Extent.\r\n * @param {import(\"./proj/Projection.js\").default} projection Projection\r\n * @return {Array<Extent>} The extent within the real world extent.\r\n */\r\nexport function wrapAndSliceX(extent, projection) {\r\n  if (projection.canWrapX()) {\r\n    const projectionExtent = projection.getExtent();\r\n\r\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\r\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\r\n    }\r\n\r\n    wrapX(extent, projection);\r\n    const worldWidth = getWidth(projectionExtent);\r\n\r\n    if (getWidth(extent) > worldWidth) {\r\n      // the extent wraps around on itself\r\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\r\n    } else if (extent[0] < projectionExtent[0]) {\r\n      // the extent crosses the anti meridian, so it needs to be sliced\r\n      return [\r\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\r\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\r\n      ];\r\n    } else if (extent[2] > projectionExtent[2]) {\r\n      // the extent crosses the anti meridian, so it needs to be sliced\r\n      return [\r\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\r\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\r\n      ];\r\n    }\r\n  }\r\n\r\n  return [extent];\r\n}\r\n","/**\r\n * @module ol/math\r\n */\r\n\r\n/**\r\n * Takes a number and clamps it to within the provided bounds.\r\n * @param {number} value The input number.\r\n * @param {number} min The minimum value to return.\r\n * @param {number} max The maximum value to return.\r\n * @return {number} The input number if it is within bounds, or the nearest\r\n *     number within the bounds.\r\n */\r\nexport function clamp(value, min, max) {\r\n  return Math.min(Math.max(value, min), max);\r\n}\r\n\r\n/**\r\n * Returns the square of the closest distance between the point (x, y) and the\r\n * line segment (x1, y1) to (x2, y2).\r\n * @param {number} x X.\r\n * @param {number} y Y.\r\n * @param {number} x1 X1.\r\n * @param {number} y1 Y1.\r\n * @param {number} x2 X2.\r\n * @param {number} y2 Y2.\r\n * @return {number} Squared distance.\r\n */\r\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\r\n  const dx = x2 - x1;\r\n  const dy = y2 - y1;\r\n  if (dx !== 0 || dy !== 0) {\r\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\r\n    if (t > 1) {\r\n      x1 = x2;\r\n      y1 = y2;\r\n    } else if (t > 0) {\r\n      x1 += dx * t;\r\n      y1 += dy * t;\r\n    }\r\n  }\r\n  return squaredDistance(x, y, x1, y1);\r\n}\r\n\r\n/**\r\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\r\n * @param {number} x1 X1.\r\n * @param {number} y1 Y1.\r\n * @param {number} x2 X2.\r\n * @param {number} y2 Y2.\r\n * @return {number} Squared distance.\r\n */\r\nexport function squaredDistance(x1, y1, x2, y2) {\r\n  const dx = x2 - x1;\r\n  const dy = y2 - y1;\r\n  return dx * dx + dy * dy;\r\n}\r\n\r\n/**\r\n * Solves system of linear equations using Gaussian elimination method.\r\n *\r\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\r\n *                                     in row-major order.\r\n * @return {Array<number>} The resulting vector.\r\n */\r\nexport function solveLinearSystem(mat) {\r\n  const n = mat.length;\r\n\r\n  for (let i = 0; i < n; i++) {\r\n    // Find max in the i-th column (ignoring i - 1 first rows)\r\n    let maxRow = i;\r\n    let maxEl = Math.abs(mat[i][i]);\r\n    for (let r = i + 1; r < n; r++) {\r\n      const absValue = Math.abs(mat[r][i]);\r\n      if (absValue > maxEl) {\r\n        maxEl = absValue;\r\n        maxRow = r;\r\n      }\r\n    }\r\n\r\n    if (maxEl === 0) {\r\n      return null; // matrix is singular\r\n    }\r\n\r\n    // Swap max row with i-th (current) row\r\n    const tmp = mat[maxRow];\r\n    mat[maxRow] = mat[i];\r\n    mat[i] = tmp;\r\n\r\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\r\n    for (let j = i + 1; j < n; j++) {\r\n      const coef = -mat[j][i] / mat[i][i];\r\n      for (let k = i; k < n + 1; k++) {\r\n        if (i == k) {\r\n          mat[j][k] = 0;\r\n        } else {\r\n          mat[j][k] += coef * mat[i][k];\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // Solve Ax=b for upper triangular matrix A (mat)\r\n  const x = new Array(n);\r\n  for (let l = n - 1; l >= 0; l--) {\r\n    x[l] = mat[l][n] / mat[l][l];\r\n    for (let m = l - 1; m >= 0; m--) {\r\n      mat[m][n] -= mat[m][l] * x[l];\r\n    }\r\n  }\r\n  return x;\r\n}\r\n\r\n/**\r\n * Converts radians to to degrees.\r\n *\r\n * @param {number} angleInRadians Angle in radians.\r\n * @return {number} Angle in degrees.\r\n */\r\nexport function toDegrees(angleInRadians) {\r\n  return (angleInRadians * 180) / Math.PI;\r\n}\r\n\r\n/**\r\n * Converts degrees to radians.\r\n *\r\n * @param {number} angleInDegrees Angle in degrees.\r\n * @return {number} Angle in radians.\r\n */\r\nexport function toRadians(angleInDegrees) {\r\n  return (angleInDegrees * Math.PI) / 180;\r\n}\r\n\r\n/**\r\n * Returns the modulo of a / b, depending on the sign of b.\r\n *\r\n * @param {number} a Dividend.\r\n * @param {number} b Divisor.\r\n * @return {number} Modulo.\r\n */\r\nexport function modulo(a, b) {\r\n  const r = a % b;\r\n  return r * b < 0 ? r + b : r;\r\n}\r\n\r\n/**\r\n * Calculates the linearly interpolated value of x between a and b.\r\n *\r\n * @param {number} a Number\r\n * @param {number} b Number\r\n * @param {number} x Value to be interpolated.\r\n * @return {number} Interpolated value.\r\n */\r\nexport function lerp(a, b, x) {\r\n  return a + x * (b - a);\r\n}\r\n\r\n/**\r\n * Returns a number with a limited number of decimal digits.\r\n * @param {number} n The input number.\r\n * @param {number} decimals The maximum number of decimal digits.\r\n * @return {number} The input number with a limited number of decimal digits.\r\n */\r\nexport function toFixed(n, decimals) {\r\n  const factor = Math.pow(10, decimals);\r\n  return Math.round(n * factor) / factor;\r\n}\r\n\r\n/**\r\n * Rounds a number to the nearest integer value considering only the given number\r\n * of decimal digits (with rounding on the final digit).\r\n * @param {number} n The input number.\r\n * @param {number} decimals The maximum number of decimal digits.\r\n * @return {number} The nearest integer.\r\n */\r\nexport function round(n, decimals) {\r\n  return Math.round(toFixed(n, decimals));\r\n}\r\n\r\n/**\r\n * Rounds a number to the next smaller integer considering only the given number\r\n * of decimal digits (with rounding on the final digit).\r\n * @param {number} n The input number.\r\n * @param {number} decimals The maximum number of decimal digits.\r\n * @return {number} The next smaller integer.\r\n */\r\nexport function floor(n, decimals) {\r\n  return Math.floor(toFixed(n, decimals));\r\n}\r\n\r\n/**\r\n * Rounds a number to the next bigger integer considering only the given number\r\n * of decimal digits (with rounding on the final digit).\r\n * @param {number} n The input number.\r\n * @param {number} decimals The maximum number of decimal digits.\r\n * @return {number} The next bigger integer.\r\n */\r\nexport function ceil(n, decimals) {\r\n  return Math.ceil(toFixed(n, decimals));\r\n}\r\n","/**\r\n * @module ol/color\r\n */\r\nimport {assert} from './asserts.js';\r\nimport {clamp} from './math.js';\r\n\r\n/**\r\n * A color represented as a short array [red, green, blue, alpha].\r\n * red, green, and blue should be integers in the range 0..255 inclusive.\r\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\r\n * given then `1` will be used.\r\n * @typedef {Array<number>} Color\r\n * @api\r\n */\r\n\r\n/**\r\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\r\n * @const\r\n * @type {RegExp}\r\n * @private\r\n */\r\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\r\n\r\n/**\r\n * Regular expression for matching potential named color style strings.\r\n * @const\r\n * @type {RegExp}\r\n * @private\r\n */\r\nconst NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\r\n\r\n/**\r\n * Return the color as an rgba string.\r\n * @param {Color|string} color Color.\r\n * @return {string} Rgba string.\r\n * @api\r\n */\r\nexport function asString(color) {\r\n  if (typeof color === 'string') {\r\n    return color;\r\n  } else {\r\n    return toString(color);\r\n  }\r\n}\r\n\r\n/**\r\n * Return named color as an rgba string.\r\n * @param {string} color Named color.\r\n * @return {string} Rgb string.\r\n */\r\nfunction fromNamed(color) {\r\n  const el = document.createElement('div');\r\n  el.style.color = color;\r\n  if (el.style.color !== '') {\r\n    document.body.appendChild(el);\r\n    const rgb = getComputedStyle(el).color;\r\n    document.body.removeChild(el);\r\n    return rgb;\r\n  } else {\r\n    return '';\r\n  }\r\n}\r\n\r\n/**\r\n * @param {string} s String.\r\n * @return {Color} Color.\r\n */\r\nexport const fromString = (function () {\r\n  // We maintain a small cache of parsed strings.  To provide cheap LRU-like\r\n  // semantics, whenever the cache grows too large we simply delete an\r\n  // arbitrary 25% of the entries.\r\n\r\n  /**\r\n   * @const\r\n   * @type {number}\r\n   */\r\n  const MAX_CACHE_SIZE = 1024;\r\n\r\n  /**\r\n   * @type {Object<string, Color>}\r\n   */\r\n  const cache = {};\r\n\r\n  /**\r\n   * @type {number}\r\n   */\r\n  let cacheSize = 0;\r\n\r\n  return (\r\n    /**\r\n     * @param {string} s String.\r\n     * @return {Color} Color.\r\n     */\r\n    function (s) {\r\n      let color;\r\n      if (cache.hasOwnProperty(s)) {\r\n        color = cache[s];\r\n      } else {\r\n        if (cacheSize >= MAX_CACHE_SIZE) {\r\n          let i = 0;\r\n          for (const key in cache) {\r\n            if ((i++ & 3) === 0) {\r\n              delete cache[key];\r\n              --cacheSize;\r\n            }\r\n          }\r\n        }\r\n        color = fromStringInternal_(s);\r\n        cache[s] = color;\r\n        ++cacheSize;\r\n      }\r\n      return color;\r\n    }\r\n  );\r\n})();\r\n\r\n/**\r\n * Return the color as an array. This function maintains a cache of calculated\r\n * arrays which means the result should not be modified.\r\n * @param {Color|string} color Color.\r\n * @return {Color} Color.\r\n * @api\r\n */\r\nexport function asArray(color) {\r\n  if (Array.isArray(color)) {\r\n    return color;\r\n  } else {\r\n    return fromString(color);\r\n  }\r\n}\r\n\r\n/**\r\n * @param {string} s String.\r\n * @private\r\n * @return {Color} Color.\r\n */\r\nfunction fromStringInternal_(s) {\r\n  let r, g, b, a, color;\r\n\r\n  if (NAMED_COLOR_RE_.exec(s)) {\r\n    s = fromNamed(s);\r\n  }\r\n\r\n  if (HEX_COLOR_RE_.exec(s)) {\r\n    // hex\r\n    const n = s.length - 1; // number of hex digits\r\n    let d; // number of digits per channel\r\n    if (n <= 4) {\r\n      d = 1;\r\n    } else {\r\n      d = 2;\r\n    }\r\n    const hasAlpha = n === 4 || n === 8;\r\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\r\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\r\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\r\n    if (hasAlpha) {\r\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\r\n    } else {\r\n      a = 255;\r\n    }\r\n    if (d == 1) {\r\n      r = (r << 4) + r;\r\n      g = (g << 4) + g;\r\n      b = (b << 4) + b;\r\n      if (hasAlpha) {\r\n        a = (a << 4) + a;\r\n      }\r\n    }\r\n    color = [r, g, b, a / 255];\r\n  } else if (s.startsWith('rgba(')) {\r\n    // rgba()\r\n    color = s.slice(5, -1).split(',').map(Number);\r\n    normalize(color);\r\n  } else if (s.startsWith('rgb(')) {\r\n    // rgb()\r\n    color = s.slice(4, -1).split(',').map(Number);\r\n    color.push(1);\r\n    normalize(color);\r\n  } else {\r\n    assert(false, 14); // Invalid color\r\n  }\r\n  return color;\r\n}\r\n\r\n/**\r\n * TODO this function is only used in the test, we probably shouldn't export it\r\n * @param {Color} color Color.\r\n * @return {Color} Clamped color.\r\n */\r\nexport function normalize(color) {\r\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\r\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\r\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\r\n  color[3] = clamp(color[3], 0, 1);\r\n  return color;\r\n}\r\n\r\n/**\r\n * @param {Color} color Color.\r\n * @return {string} String.\r\n */\r\nexport function toString(color) {\r\n  let r = color[0];\r\n  if (r != (r | 0)) {\r\n    r = (r + 0.5) | 0;\r\n  }\r\n  let g = color[1];\r\n  if (g != (g | 0)) {\r\n    g = (g + 0.5) | 0;\r\n  }\r\n  let b = color[2];\r\n  if (b != (b | 0)) {\r\n    b = (b + 0.5) | 0;\r\n  }\r\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 100) / 100;\r\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\r\n}\r\n\r\n/**\r\n * @param {string} s String.\r\n * @return {boolean} Whether the string is actually a valid color\r\n */\r\nexport function isStringColor(s) {\r\n  if (NAMED_COLOR_RE_.test(s)) {\r\n    s = fromNamed(s);\r\n  }\r\n  return HEX_COLOR_RE_.test(s) || s.startsWith('rgba(') || s.startsWith('rgb(');\r\n}\r\n","/**\r\n * @module ol/style/IconImageCache\r\n */\r\nimport {asString} from '../color.js';\r\n\r\n/**\r\n * @classdesc\r\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\r\n */\r\nclass IconImageCache {\r\n  constructor() {\r\n    /**\r\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\r\n     * @private\r\n     */\r\n    this.cache_ = {};\r\n\r\n    /**\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.cacheSize_ = 0;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.maxCacheSize_ = 32;\r\n  }\r\n\r\n  /**\r\n   * FIXME empty description for jsdoc\r\n   */\r\n  clear() {\r\n    this.cache_ = {};\r\n    this.cacheSize_ = 0;\r\n  }\r\n\r\n  /**\r\n   * @return {boolean} Can expire cache.\r\n   */\r\n  canExpireCache() {\r\n    return this.cacheSize_ > this.maxCacheSize_;\r\n  }\r\n\r\n  /**\r\n   * FIXME empty description for jsdoc\r\n   */\r\n  expire() {\r\n    if (this.canExpireCache()) {\r\n      let i = 0;\r\n      for (const key in this.cache_) {\r\n        const iconImage = this.cache_[key];\r\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\r\n          delete this.cache_[key];\r\n          --this.cacheSize_;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {string} src Src.\r\n   * @param {?string} crossOrigin Cross origin.\r\n   * @param {import(\"../color.js\").Color} color Color.\r\n   * @return {import(\"./IconImage.js\").default} Icon image.\r\n   */\r\n  get(src, crossOrigin, color) {\r\n    const key = getKey(src, crossOrigin, color);\r\n    return key in this.cache_ ? this.cache_[key] : null;\r\n  }\r\n\r\n  /**\r\n   * @param {string} src Src.\r\n   * @param {?string} crossOrigin Cross origin.\r\n   * @param {import(\"../color.js\").Color} color Color.\r\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\r\n   */\r\n  set(src, crossOrigin, color, iconImage) {\r\n    const key = getKey(src, crossOrigin, color);\r\n    this.cache_[key] = iconImage;\r\n    ++this.cacheSize_;\r\n  }\r\n\r\n  /**\r\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\r\n   * your map uses more than 32 different icon images and you are not caching icon\r\n   * styles on the application level.\r\n   * @param {number} maxCacheSize Cache max size.\r\n   * @api\r\n   */\r\n  setSize(maxCacheSize) {\r\n    this.maxCacheSize_ = maxCacheSize;\r\n    this.expire();\r\n  }\r\n}\r\n\r\n/**\r\n * @param {string} src Src.\r\n * @param {?string} crossOrigin Cross origin.\r\n * @param {import(\"../color.js\").Color} color Color.\r\n * @return {string} Cache key.\r\n */\r\nfunction getKey(src, crossOrigin, color) {\r\n  const colorString = color ? asString(color) : 'null';\r\n  return crossOrigin + ':' + src + ':' + colorString;\r\n}\r\n\r\nexport default IconImageCache;\r\n\r\n/**\r\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\r\n * {@link module:ol/style/Icon~Icon} images.\r\n * @api\r\n */\r\nexport const shared = new IconImageCache();\r\n","/**\r\n * @module ol/layer/Property\r\n */\r\n\r\n/**\r\n * @enum {string}\r\n */\r\nexport default {\r\n  OPACITY: 'opacity',\r\n  VISIBLE: 'visible',\r\n  EXTENT: 'extent',\r\n  Z_INDEX: 'zIndex',\r\n  MAX_RESOLUTION: 'maxResolution',\r\n  MIN_RESOLUTION: 'minResolution',\r\n  MAX_ZOOM: 'maxZoom',\r\n  MIN_ZOOM: 'minZoom',\r\n  SOURCE: 'source',\r\n  MAP: 'map',\r\n};\r\n","/**\r\n * @module ol/layer/Base\r\n */\r\nimport BaseObject from '../Object.js';\r\nimport LayerProperty from './Property.js';\r\nimport {abstract} from '../util.js';\r\nimport {assert} from '../asserts.js';\r\nimport {clamp} from '../math.js';\r\n\r\n/**\r\n * A css color, or a function called with a view resolution returning a css color.\r\n *\r\n * @typedef {string|function(number):string} BackgroundColor\r\n * @api\r\n */\r\n\r\n/**\r\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\r\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\r\n */\r\n\r\n/***\r\n * @template Return\r\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\r\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\r\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\r\n */\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\r\n * @property {number} [opacity=1] Opacity (0, 1).\r\n * @property {boolean} [visible=true] Visibility.\r\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\r\n * rendered outside of this extent.\r\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\r\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\r\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\r\n * method was used.\r\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\r\n * visible.\r\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\r\n * be visible.\r\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\r\n * visible.\r\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\r\n * be visible.\r\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\r\n * will be rendered.\r\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Abstract base class; normally only used for creating subclasses and not\r\n * instantiated in apps.\r\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\r\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\r\n * is observable, and has get/set accessors.\r\n *\r\n * @api\r\n */\r\nclass BaseLayer extends BaseObject {\r\n  /**\r\n   * @param {Options} options Layer options.\r\n   */\r\n  constructor(options) {\r\n    super();\r\n\r\n    /***\r\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\r\n     */\r\n    this.on;\r\n\r\n    /***\r\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\r\n     */\r\n    this.once;\r\n\r\n    /***\r\n     * @type {BaseLayerOnSignature<void>}\r\n     */\r\n    this.un;\r\n\r\n    /**\r\n     * @type {BackgroundColor|false}\r\n     * @private\r\n     */\r\n    this.background_ = options.background;\r\n\r\n    /**\r\n     * @type {Object<string, *>}\r\n     */\r\n    const properties = Object.assign({}, options);\r\n    if (typeof options.properties === 'object') {\r\n      delete properties.properties;\r\n      Object.assign(properties, options.properties);\r\n    }\r\n\r\n    properties[LayerProperty.OPACITY] =\r\n      options.opacity !== undefined ? options.opacity : 1;\r\n    assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\r\n\r\n    properties[LayerProperty.VISIBLE] =\r\n      options.visible !== undefined ? options.visible : true;\r\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\r\n    properties[LayerProperty.MAX_RESOLUTION] =\r\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\r\n    properties[LayerProperty.MIN_RESOLUTION] =\r\n      options.minResolution !== undefined ? options.minResolution : 0;\r\n    properties[LayerProperty.MIN_ZOOM] =\r\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\r\n    properties[LayerProperty.MAX_ZOOM] =\r\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\r\n\r\n    /**\r\n     * @type {string}\r\n     * @private\r\n     */\r\n    this.className_ =\r\n      properties.className !== undefined ? properties.className : 'ol-layer';\r\n    delete properties.className;\r\n\r\n    this.setProperties(properties);\r\n\r\n    /**\r\n     * @type {import(\"./Layer.js\").State}\r\n     * @private\r\n     */\r\n    this.state_ = null;\r\n  }\r\n\r\n  /**\r\n   * Get the background for this layer.\r\n   * @return {BackgroundColor|false} Layer background.\r\n   */\r\n  getBackground() {\r\n    return this.background_;\r\n  }\r\n\r\n  /**\r\n   * @return {string} CSS class name.\r\n   */\r\n  getClassName() {\r\n    return this.className_;\r\n  }\r\n\r\n  /**\r\n   * This method is not meant to be called by layers or layer renderers because the state\r\n   * is incorrect if the layer is included in a layer group.\r\n   *\r\n   * @param {boolean} [managed] Layer is managed.\r\n   * @return {import(\"./Layer.js\").State} Layer state.\r\n   */\r\n  getLayerState(managed) {\r\n    /** @type {import(\"./Layer.js\").State} */\r\n    const state =\r\n      this.state_ ||\r\n      /** @type {?} */ ({\r\n        layer: this,\r\n        managed: managed === undefined ? true : managed,\r\n      });\r\n    const zIndex = this.getZIndex();\r\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\r\n    state.visible = this.getVisible();\r\n    state.extent = this.getExtent();\r\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\r\n    state.maxResolution = this.getMaxResolution();\r\n    state.minResolution = Math.max(this.getMinResolution(), 0);\r\n    state.minZoom = this.getMinZoom();\r\n    state.maxZoom = this.getMaxZoom();\r\n    this.state_ = state;\r\n\r\n    return state;\r\n  }\r\n\r\n  /**\r\n   * @abstract\r\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be\r\n   *     modified in place).\r\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\r\n   */\r\n  getLayersArray(array) {\r\n    return abstract();\r\n  }\r\n\r\n  /**\r\n   * @abstract\r\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer\r\n   *     states (to be modified in place).\r\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\r\n   */\r\n  getLayerStatesArray(states) {\r\n    return abstract();\r\n  }\r\n\r\n  /**\r\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\r\n   * will be visible regardless of extent.\r\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\r\n   * @observable\r\n   * @api\r\n   */\r\n  getExtent() {\r\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\r\n      this.get(LayerProperty.EXTENT)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Return the maximum resolution of the layer.\r\n   * @return {number} The maximum resolution of the layer.\r\n   * @observable\r\n   * @api\r\n   */\r\n  getMaxResolution() {\r\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\r\n  }\r\n\r\n  /**\r\n   * Return the minimum resolution of the layer.\r\n   * @return {number} The minimum resolution of the layer.\r\n   * @observable\r\n   * @api\r\n   */\r\n  getMinResolution() {\r\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\r\n  }\r\n\r\n  /**\r\n   * Return the minimum zoom level of the layer.\r\n   * @return {number} The minimum zoom level of the layer.\r\n   * @observable\r\n   * @api\r\n   */\r\n  getMinZoom() {\r\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\r\n  }\r\n\r\n  /**\r\n   * Return the maximum zoom level of the layer.\r\n   * @return {number} The maximum zoom level of the layer.\r\n   * @observable\r\n   * @api\r\n   */\r\n  getMaxZoom() {\r\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\r\n  }\r\n\r\n  /**\r\n   * Return the opacity of the layer (between 0 and 1).\r\n   * @return {number} The opacity of the layer.\r\n   * @observable\r\n   * @api\r\n   */\r\n  getOpacity() {\r\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\r\n  }\r\n\r\n  /**\r\n   * @abstract\r\n   * @return {import(\"../source/Source.js\").State} Source state.\r\n   */\r\n  getSourceState() {\r\n    return abstract();\r\n  }\r\n\r\n  /**\r\n   * Return the visibility of the layer (`true` or `false`).\r\n   * @return {boolean} The visibility of the layer.\r\n   * @observable\r\n   * @api\r\n   */\r\n  getVisible() {\r\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\r\n  }\r\n\r\n  /**\r\n   * Return the Z-index of the layer, which is used to order layers before\r\n   * rendering. The default Z-index is 0.\r\n   * @return {number} The Z-index of the layer.\r\n   * @observable\r\n   * @api\r\n   */\r\n  getZIndex() {\r\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\r\n  }\r\n\r\n  /**\r\n   * Sets the background color.\r\n   * @param {BackgroundColor} [background] Background color.\r\n   */\r\n  setBackground(background) {\r\n    this.background_ = background;\r\n    this.changed();\r\n  }\r\n\r\n  /**\r\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\r\n   * will be visible at all extents.\r\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\r\n   * @observable\r\n   * @api\r\n   */\r\n  setExtent(extent) {\r\n    this.set(LayerProperty.EXTENT, extent);\r\n  }\r\n\r\n  /**\r\n   * Set the maximum resolution at which the layer is visible.\r\n   * @param {number} maxResolution The maximum resolution of the layer.\r\n   * @observable\r\n   * @api\r\n   */\r\n  setMaxResolution(maxResolution) {\r\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\r\n  }\r\n\r\n  /**\r\n   * Set the minimum resolution at which the layer is visible.\r\n   * @param {number} minResolution The minimum resolution of the layer.\r\n   * @observable\r\n   * @api\r\n   */\r\n  setMinResolution(minResolution) {\r\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\r\n  }\r\n\r\n  /**\r\n   * Set the maximum zoom (exclusive) at which the layer is visible.\r\n   * Note that the zoom levels for layer visibility are based on the\r\n   * view zoom level, which may be different from a tile source zoom level.\r\n   * @param {number} maxZoom The maximum zoom of the layer.\r\n   * @observable\r\n   * @api\r\n   */\r\n  setMaxZoom(maxZoom) {\r\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\r\n  }\r\n\r\n  /**\r\n   * Set the minimum zoom (inclusive) at which the layer is visible.\r\n   * Note that the zoom levels for layer visibility are based on the\r\n   * view zoom level, which may be different from a tile source zoom level.\r\n   * @param {number} minZoom The minimum zoom of the layer.\r\n   * @observable\r\n   * @api\r\n   */\r\n  setMinZoom(minZoom) {\r\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\r\n  }\r\n\r\n  /**\r\n   * Set the opacity of the layer, allowed values range from 0 to 1.\r\n   * @param {number} opacity The opacity of the layer.\r\n   * @observable\r\n   * @api\r\n   */\r\n  setOpacity(opacity) {\r\n    assert(typeof opacity === 'number', 64); // Layer opacity must be a number\r\n    this.set(LayerProperty.OPACITY, opacity);\r\n  }\r\n\r\n  /**\r\n   * Set the visibility of the layer (`true` or `false`).\r\n   * @param {boolean} visible The visibility of the layer.\r\n   * @observable\r\n   * @api\r\n   */\r\n  setVisible(visible) {\r\n    this.set(LayerProperty.VISIBLE, visible);\r\n  }\r\n\r\n  /**\r\n   * Set Z-index of the layer, which is used to order layers before rendering.\r\n   * The default Z-index is 0.\r\n   * @param {number} zindex The z-index of the layer.\r\n   * @observable\r\n   * @api\r\n   */\r\n  setZIndex(zindex) {\r\n    this.set(LayerProperty.Z_INDEX, zindex);\r\n  }\r\n\r\n  /**\r\n   * Clean up.\r\n   */\r\n  disposeInternal() {\r\n    if (this.state_) {\r\n      this.state_.layer = null;\r\n      this.state_ = null;\r\n    }\r\n    super.disposeInternal();\r\n  }\r\n}\r\n\r\nexport default BaseLayer;\r\n","/**\r\n * @module ol/render/EventType\r\n */\r\n\r\n/**\r\n * @enum {string}\r\n */\r\nexport default {\r\n  /**\r\n   * Triggered before a layer is rendered.\r\n   * @event module:ol/render/Event~RenderEvent#prerender\r\n   * @api\r\n   */\r\n  PRERENDER: 'prerender',\r\n\r\n  /**\r\n   * Triggered after a layer is rendered.\r\n   * @event module:ol/render/Event~RenderEvent#postrender\r\n   * @api\r\n   */\r\n  POSTRENDER: 'postrender',\r\n\r\n  /**\r\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\r\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\r\n   * WebGL layers currently dispatch this event.\r\n   * @event module:ol/render/Event~RenderEvent#precompose\r\n   * @api\r\n   */\r\n  PRECOMPOSE: 'precompose',\r\n\r\n  /**\r\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\r\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\r\n   * WebGL layers currently dispatch this event.\r\n   * @event module:ol/render/Event~RenderEvent#postcompose\r\n   * @api\r\n   */\r\n  POSTCOMPOSE: 'postcompose',\r\n\r\n  /**\r\n   * Triggered when rendering is complete, i.e. all sources and tiles have\r\n   * finished loading for the current viewport, and all tiles are faded in.\r\n   * The event object will not have a `context` set.\r\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\r\n   * @api\r\n   */\r\n  RENDERCOMPLETE: 'rendercomplete',\r\n};\r\n\r\n/**\r\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\r\n */\r\n\r\n/**\r\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\r\n */\r\n","/**\r\n * @module ol/layer/Layer\r\n */\r\nimport BaseLayer from './Base.js';\r\nimport EventType from '../events/EventType.js';\r\nimport LayerProperty from './Property.js';\r\nimport RenderEventType from '../render/EventType.js';\r\nimport {assert} from '../asserts.js';\r\nimport {listen, unlistenByKey} from '../events.js';\r\n\r\n/**\r\n * @typedef {function(import(\"../Map.js\").FrameState):HTMLElement} RenderFunction\r\n */\r\n\r\n/***\r\n * @template Return\r\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\r\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\r\n *     'change:source', import(\"../Object\").ObjectEvent, Return> &\r\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\r\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:source'|\r\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\r\n */\r\n\r\n/**\r\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\r\n * @typedef {Object} Options\r\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\r\n * @property {number} [opacity=1] Opacity (0, 1).\r\n * @property {boolean} [visible=true] Visibility.\r\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\r\n * rendered outside of this extent.\r\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\r\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\r\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\r\n * method was used.\r\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\r\n * visible.\r\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\r\n * be visible.\r\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\r\n * visible.\r\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\r\n * be visible.\r\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\r\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\r\n * construction.\r\n * @property {import(\"../Map.js\").default|null} [map] Map.\r\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\r\n * HTML element. Will overwrite the default rendering for the layer.\r\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\r\n */\r\n\r\n/**\r\n * @typedef {Object} State\r\n * @property {import(\"./Layer.js\").default} layer Layer.\r\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\r\n * @property {boolean} visible Visible.\r\n * @property {boolean} managed Managed.\r\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\r\n * @property {number} zIndex ZIndex.\r\n * @property {number} maxResolution Maximum resolution.\r\n * @property {number} minResolution Minimum resolution.\r\n * @property {number} minZoom Minimum zoom.\r\n * @property {number} maxZoom Maximum zoom.\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Base class from which all layer types are derived. This should only be instantiated\r\n * in the case where a custom layer is added to the map with a custom `render` function.\r\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\r\n *\r\n * A visual representation of raster or vector map data.\r\n * Layers group together those properties that pertain to how the data is to be\r\n * displayed, irrespective of the source of that data.\r\n *\r\n * Layers are usually added to a map with [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\r\n * Components like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\r\n * internally. These unmanaged layers are associated with the map using\r\n * [layer.setMap()]{@link module:ol/layer/Layer~Layer#setMap} instead.\r\n *\r\n * A generic `change` event is fired when the state of the source changes.\r\n *\r\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\r\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\r\n *\r\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\r\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\r\n * @api\r\n */\r\nclass Layer extends BaseLayer {\r\n  /**\r\n   * @param {Options<SourceType>} options Layer options.\r\n   */\r\n  constructor(options) {\r\n    const baseOptions = Object.assign({}, options);\r\n    delete baseOptions.source;\r\n\r\n    super(baseOptions);\r\n\r\n    /***\r\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\r\n     */\r\n    this.on;\r\n\r\n    /***\r\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\r\n     */\r\n    this.once;\r\n\r\n    /***\r\n     * @type {LayerOnSignature<void>}\r\n     */\r\n    this.un;\r\n\r\n    /**\r\n     * @private\r\n     * @type {?import(\"../events.js\").EventsKey}\r\n     */\r\n    this.mapPrecomposeKey_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {?import(\"../events.js\").EventsKey}\r\n     */\r\n    this.mapRenderKey_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {?import(\"../events.js\").EventsKey}\r\n     */\r\n    this.sourceChangeKey_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {RendererType}\r\n     */\r\n    this.renderer_ = null;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {boolean}\r\n     */\r\n    this.rendered = false;\r\n\r\n    // Overwrite default render method with a custom one\r\n    if (options.render) {\r\n      this.render = options.render;\r\n    }\r\n\r\n    if (options.map) {\r\n      this.setMap(options.map);\r\n    }\r\n\r\n    this.addChangeListener(\r\n      LayerProperty.SOURCE,\r\n      this.handleSourcePropertyChange_\r\n    );\r\n\r\n    const source = options.source\r\n      ? /** @type {SourceType} */ (options.source)\r\n      : null;\r\n    this.setSource(source);\r\n  }\r\n\r\n  /**\r\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\r\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\r\n   */\r\n  getLayersArray(array) {\r\n    array = array ? array : [];\r\n    array.push(this);\r\n    return array;\r\n  }\r\n\r\n  /**\r\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer states (to be modified in place).\r\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\r\n   */\r\n  getLayerStatesArray(states) {\r\n    states = states ? states : [];\r\n    states.push(this.getLayerState());\r\n    return states;\r\n  }\r\n\r\n  /**\r\n   * Get the layer source.\r\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\r\n   * @observable\r\n   * @api\r\n   */\r\n  getSource() {\r\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\r\n  }\r\n\r\n  /**\r\n   * @return {SourceType|null} The source being rendered.\r\n   */\r\n  getRenderSource() {\r\n    return this.getSource();\r\n  }\r\n\r\n  /**\r\n   * @return {import(\"../source/Source.js\").State} Source state.\r\n   */\r\n  getSourceState() {\r\n    const source = this.getSource();\r\n    return !source ? 'undefined' : source.getState();\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  handleSourceChange_() {\r\n    this.changed();\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  handleSourcePropertyChange_() {\r\n    if (this.sourceChangeKey_) {\r\n      unlistenByKey(this.sourceChangeKey_);\r\n      this.sourceChangeKey_ = null;\r\n    }\r\n    const source = this.getSource();\r\n    if (source) {\r\n      this.sourceChangeKey_ = listen(\r\n        source,\r\n        EventType.CHANGE,\r\n        this.handleSourceChange_,\r\n        this\r\n      );\r\n    }\r\n    this.changed();\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\r\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\r\n   * an array of features.\r\n   */\r\n  getFeatures(pixel) {\r\n    if (!this.renderer_) {\r\n      return new Promise((resolve) => resolve([]));\r\n    }\r\n    return this.renderer_.getFeatures(pixel);\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\r\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\r\n   */\r\n  getData(pixel) {\r\n    if (!this.renderer_ || !this.rendered) {\r\n      return null;\r\n    }\r\n    return this.renderer_.getData(pixel);\r\n  }\r\n\r\n  /**\r\n   * In charge to manage the rendering of the layer. One layer type is\r\n   * bounded with one layer renderer.\r\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\r\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\r\n   * for rendering its content.\r\n   * @return {HTMLElement} The rendered element.\r\n   */\r\n  render(frameState, target) {\r\n    const layerRenderer = this.getRenderer();\r\n\r\n    if (layerRenderer.prepareFrame(frameState)) {\r\n      this.rendered = true;\r\n      return layerRenderer.renderFrame(frameState, target);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Called when a layer is not visible during a map render.\r\n   */\r\n  unrender() {\r\n    this.rendered = false;\r\n  }\r\n\r\n  /**\r\n   * For use inside the library only.\r\n   * @param {import(\"../Map.js\").default|null} map Map.\r\n   */\r\n  setMapInternal(map) {\r\n    if (!map) {\r\n      this.unrender();\r\n    }\r\n    this.set(LayerProperty.MAP, map);\r\n  }\r\n\r\n  /**\r\n   * For use inside the library only.\r\n   * @return {import(\"../Map.js\").default|null} Map.\r\n   */\r\n  getMapInternal() {\r\n    return this.get(LayerProperty.MAP);\r\n  }\r\n\r\n  /**\r\n   * Sets the layer to be rendered on top of other layers on a map. The map will\r\n   * not manage this layer in its layers collection. This\r\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\r\n   * use `#setMap(null)`.\r\n   *\r\n   * To add the layer to a map and have it managed by the map, use\r\n   * {@link module:ol/Map~Map#addLayer} instead.\r\n   * @param {import(\"../Map.js\").default|null} map Map.\r\n   * @api\r\n   */\r\n  setMap(map) {\r\n    if (this.mapPrecomposeKey_) {\r\n      unlistenByKey(this.mapPrecomposeKey_);\r\n      this.mapPrecomposeKey_ = null;\r\n    }\r\n    if (!map) {\r\n      this.changed();\r\n    }\r\n    if (this.mapRenderKey_) {\r\n      unlistenByKey(this.mapRenderKey_);\r\n      this.mapRenderKey_ = null;\r\n    }\r\n    if (map) {\r\n      this.mapPrecomposeKey_ = listen(\r\n        map,\r\n        RenderEventType.PRECOMPOSE,\r\n        function (evt) {\r\n          const renderEvent =\r\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\r\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\r\n          const layerState = this.getLayerState(false);\r\n          // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\r\n          assert(\r\n            !layerStatesArray.some(function (arrayLayerState) {\r\n              return arrayLayerState.layer === layerState.layer;\r\n            }),\r\n            67\r\n          );\r\n          layerStatesArray.push(layerState);\r\n        },\r\n        this\r\n      );\r\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\r\n      this.changed();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set the layer source.\r\n   * @param {SourceType|null} source The layer source.\r\n   * @observable\r\n   * @api\r\n   */\r\n  setSource(source) {\r\n    this.set(LayerProperty.SOURCE, source);\r\n  }\r\n\r\n  /**\r\n   * Get the renderer for this layer.\r\n   * @return {RendererType|null} The layer renderer.\r\n   */\r\n  getRenderer() {\r\n    if (!this.renderer_) {\r\n      this.renderer_ = this.createRenderer();\r\n    }\r\n    return this.renderer_;\r\n  }\r\n\r\n  /**\r\n   * @return {boolean} The layer has a renderer.\r\n   */\r\n  hasRenderer() {\r\n    return !!this.renderer_;\r\n  }\r\n\r\n  /**\r\n   * Create a renderer for this layer.\r\n   * @return {RendererType} A layer renderer.\r\n   * @protected\r\n   */\r\n  createRenderer() {\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Clean up.\r\n   */\r\n  disposeInternal() {\r\n    if (this.renderer_) {\r\n      this.renderer_.dispose();\r\n      delete this.renderer_;\r\n    }\r\n\r\n    this.setSource(null);\r\n    super.disposeInternal();\r\n  }\r\n}\r\n\r\n/**\r\n * Return `true` if the layer is visible and if the provided view state\r\n * has resolution and zoom levels that are in range of the layer's min/max.\r\n * @param {State} layerState Layer state.\r\n * @param {import(\"../View.js\").State} viewState View state.\r\n * @return {boolean} The layer is visible at the given view state.\r\n */\r\nexport function inView(layerState, viewState) {\r\n  if (!layerState.visible) {\r\n    return false;\r\n  }\r\n  const resolution = viewState.resolution;\r\n  if (\r\n    resolution < layerState.minResolution ||\r\n    resolution >= layerState.maxResolution\r\n  ) {\r\n    return false;\r\n  }\r\n  const zoom = viewState.zoom;\r\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\r\n}\r\n\r\nexport default Layer;\r\n","/**\r\n * @module ol/coordinate\r\n */\r\nimport {getWidth} from './extent.js';\r\nimport {modulo, toFixed} from './math.js';\r\nimport {padNumber} from './string.js';\r\n\r\n/**\r\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\r\n * @typedef {Array<number>} Coordinate\r\n * @api\r\n */\r\n\r\n/**\r\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\r\n * transforms it into a `{string}`.\r\n *\r\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\r\n * @api\r\n */\r\n\r\n/**\r\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\r\n * by the function.\r\n *\r\n * Example:\r\n *\r\n *     import {add} from 'ol/coordinate';\r\n *\r\n *     const coord = [7.85, 47.983333];\r\n *     add(coord, [-2, 4]);\r\n *     // coord is now [5.85, 51.983333]\r\n *\r\n * @param {Coordinate} coordinate Coordinate.\r\n * @param {Coordinate} delta Delta.\r\n * @return {Coordinate} The input coordinate adjusted by\r\n * the given delta.\r\n * @api\r\n */\r\nexport function add(coordinate, delta) {\r\n  coordinate[0] += +delta[0];\r\n  coordinate[1] += +delta[1];\r\n  return coordinate;\r\n}\r\n\r\n/**\r\n * Calculates the point closest to the passed coordinate on the passed circle.\r\n *\r\n * @param {Coordinate} coordinate The coordinate.\r\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\r\n * @return {Coordinate} Closest point on the circumference.\r\n */\r\nexport function closestOnCircle(coordinate, circle) {\r\n  const r = circle.getRadius();\r\n  const center = circle.getCenter();\r\n  const x0 = center[0];\r\n  const y0 = center[1];\r\n  const x1 = coordinate[0];\r\n  const y1 = coordinate[1];\r\n\r\n  let dx = x1 - x0;\r\n  const dy = y1 - y0;\r\n  if (dx === 0 && dy === 0) {\r\n    dx = 1;\r\n  }\r\n  const d = Math.sqrt(dx * dx + dy * dy);\r\n\r\n  const x = x0 + (r * dx) / d;\r\n  const y = y0 + (r * dy) / d;\r\n\r\n  return [x, y];\r\n}\r\n\r\n/**\r\n * Calculates the point closest to the passed coordinate on the passed segment.\r\n * This is the foot of the perpendicular of the coordinate to the segment when\r\n * the foot is on the segment, or the closest segment coordinate when the foot\r\n * is outside the segment.\r\n *\r\n * @param {Coordinate} coordinate The coordinate.\r\n * @param {Array<Coordinate>} segment The two coordinates\r\n * of the segment.\r\n * @return {Coordinate} The foot of the perpendicular of\r\n * the coordinate to the segment.\r\n */\r\nexport function closestOnSegment(coordinate, segment) {\r\n  const x0 = coordinate[0];\r\n  const y0 = coordinate[1];\r\n  const start = segment[0];\r\n  const end = segment[1];\r\n  const x1 = start[0];\r\n  const y1 = start[1];\r\n  const x2 = end[0];\r\n  const y2 = end[1];\r\n  const dx = x2 - x1;\r\n  const dy = y2 - y1;\r\n  const along =\r\n    dx === 0 && dy === 0\r\n      ? 0\r\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\r\n  let x, y;\r\n  if (along <= 0) {\r\n    x = x1;\r\n    y = y1;\r\n  } else if (along >= 1) {\r\n    x = x2;\r\n    y = y2;\r\n  } else {\r\n    x = x1 + along * dx;\r\n    y = y1 + along * dy;\r\n  }\r\n  return [x, y];\r\n}\r\n\r\n/**\r\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\r\n * used to format\r\n * a {Coordinate} to a string.\r\n *\r\n * Example without specifying the fractional digits:\r\n *\r\n *     import {createStringXY} from 'ol/coordinate';\r\n *\r\n *     const coord = [7.85, 47.983333];\r\n *     const stringifyFunc = createStringXY();\r\n *     const out = stringifyFunc(coord);\r\n *     // out is now '8, 48'\r\n *\r\n * Example with explicitly specifying 2 fractional digits:\r\n *\r\n *     import {createStringXY} from 'ol/coordinate';\r\n *\r\n *     const coord = [7.85, 47.983333];\r\n *     const stringifyFunc = createStringXY(2);\r\n *     const out = stringifyFunc(coord);\r\n *     // out is now '7.85, 47.98'\r\n *\r\n * @param {number} [fractionDigits] The number of digits to include\r\n *    after the decimal point. Default is `0`.\r\n * @return {CoordinateFormat} Coordinate format.\r\n * @api\r\n */\r\nexport function createStringXY(fractionDigits) {\r\n  return (\r\n    /**\r\n     * @param {Coordinate} coordinate Coordinate.\r\n     * @return {string} String XY.\r\n     */\r\n    function (coordinate) {\r\n      return toStringXY(coordinate, fractionDigits);\r\n    }\r\n  );\r\n}\r\n\r\n/**\r\n * @param {string} hemispheres Hemispheres.\r\n * @param {number} degrees Degrees.\r\n * @param {number} [fractionDigits] The number of digits to include\r\n *    after the decimal point. Default is `0`.\r\n * @return {string} String.\r\n */\r\nexport function degreesToStringHDMS(hemispheres, degrees, fractionDigits) {\r\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\r\n  const x = Math.abs(3600 * normalizedDegrees);\r\n  const decimals = fractionDigits || 0;\r\n\r\n  let deg = Math.floor(x / 3600);\r\n  let min = Math.floor((x - deg * 3600) / 60);\r\n  let sec = toFixed(x - deg * 3600 - min * 60, decimals);\r\n\r\n  if (sec >= 60) {\r\n    sec = 0;\r\n    min += 1;\r\n  }\r\n\r\n  if (min >= 60) {\r\n    min = 0;\r\n    deg += 1;\r\n  }\r\n\r\n  let hdms = deg + '\\u00b0';\r\n  if (min !== 0 || sec !== 0) {\r\n    hdms += ' ' + padNumber(min, 2) + '\\u2032';\r\n  }\r\n  if (sec !== 0) {\r\n    hdms += ' ' + padNumber(sec, 2, decimals) + '\\u2033';\r\n  }\r\n  if (normalizedDegrees !== 0) {\r\n    hdms += ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0);\r\n  }\r\n\r\n  return hdms;\r\n}\r\n\r\n/**\r\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\r\n * using the given string template. The strings `{x}` and `{y}` in the template\r\n * will be replaced with the first and second coordinate values respectively.\r\n *\r\n * Example without specifying the fractional digits:\r\n *\r\n *     import {format} from 'ol/coordinate';\r\n *\r\n *     const coord = [7.85, 47.983333];\r\n *     const template = 'Coordinate is ({x}|{y}).';\r\n *     const out = format(coord, template);\r\n *     // out is now 'Coordinate is (8|48).'\r\n *\r\n * Example explicitly specifying the fractional digits:\r\n *\r\n *     import {format} from 'ol/coordinate';\r\n *\r\n *     const coord = [7.85, 47.983333];\r\n *     const template = 'Coordinate is ({x}|{y}).';\r\n *     const out = format(coord, template, 2);\r\n *     // out is now 'Coordinate is (7.85|47.98).'\r\n *\r\n * @param {Coordinate} coordinate Coordinate.\r\n * @param {string} template A template string with `{x}` and `{y}` placeholders\r\n *     that will be replaced by first and second coordinate values.\r\n * @param {number} [fractionDigits] The number of digits to include\r\n *    after the decimal point. Default is `0`.\r\n * @return {string} Formatted coordinate.\r\n * @api\r\n */\r\nexport function format(coordinate, template, fractionDigits) {\r\n  if (coordinate) {\r\n    return template\r\n      .replace('{x}', coordinate[0].toFixed(fractionDigits))\r\n      .replace('{y}', coordinate[1].toFixed(fractionDigits));\r\n  } else {\r\n    return '';\r\n  }\r\n}\r\n\r\n/**\r\n * @param {Coordinate} coordinate1 First coordinate.\r\n * @param {Coordinate} coordinate2 Second coordinate.\r\n * @return {boolean} The two coordinates are equal.\r\n */\r\nexport function equals(coordinate1, coordinate2) {\r\n  let equals = true;\r\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\r\n    if (coordinate1[i] != coordinate2[i]) {\r\n      equals = false;\r\n      break;\r\n    }\r\n  }\r\n  return equals;\r\n}\r\n\r\n/**\r\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\r\n * returned by the function.\r\n *\r\n * Example:\r\n *\r\n *     import {rotate} from 'ol/coordinate';\r\n *\r\n *     const coord = [7.85, 47.983333];\r\n *     const rotateRadians = Math.PI / 2; // 90 degrees\r\n *     rotate(coord, rotateRadians);\r\n *     // coord is now [-47.983333, 7.85]\r\n *\r\n * @param {Coordinate} coordinate Coordinate.\r\n * @param {number} angle Angle in radian.\r\n * @return {Coordinate} Coordinate.\r\n * @api\r\n */\r\nexport function rotate(coordinate, angle) {\r\n  const cosAngle = Math.cos(angle);\r\n  const sinAngle = Math.sin(angle);\r\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\r\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\r\n  coordinate[0] = x;\r\n  coordinate[1] = y;\r\n  return coordinate;\r\n}\r\n\r\n/**\r\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\r\n * by the function.\r\n *\r\n * Example:\r\n *\r\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\r\n *\r\n *     const coord = [7.85, 47.983333];\r\n *     const scale = 1.2;\r\n *     scaleCoordinate(coord, scale);\r\n *     // coord is now [9.42, 57.5799996]\r\n *\r\n * @param {Coordinate} coordinate Coordinate.\r\n * @param {number} scale Scale factor.\r\n * @return {Coordinate} Coordinate.\r\n */\r\nexport function scale(coordinate, scale) {\r\n  coordinate[0] *= scale;\r\n  coordinate[1] *= scale;\r\n  return coordinate;\r\n}\r\n\r\n/**\r\n * @param {Coordinate} coord1 First coordinate.\r\n * @param {Coordinate} coord2 Second coordinate.\r\n * @return {number} Squared distance between coord1 and coord2.\r\n */\r\nexport function squaredDistance(coord1, coord2) {\r\n  const dx = coord1[0] - coord2[0];\r\n  const dy = coord1[1] - coord2[1];\r\n  return dx * dx + dy * dy;\r\n}\r\n\r\n/**\r\n * @param {Coordinate} coord1 First coordinate.\r\n * @param {Coordinate} coord2 Second coordinate.\r\n * @return {number} Distance between coord1 and coord2.\r\n */\r\nexport function distance(coord1, coord2) {\r\n  return Math.sqrt(squaredDistance(coord1, coord2));\r\n}\r\n\r\n/**\r\n * Calculate the squared distance from a coordinate to a line segment.\r\n *\r\n * @param {Coordinate} coordinate Coordinate of the point.\r\n * @param {Array<Coordinate>} segment Line segment (2\r\n * coordinates).\r\n * @return {number} Squared distance from the point to the line segment.\r\n */\r\nexport function squaredDistanceToSegment(coordinate, segment) {\r\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\r\n}\r\n\r\n/**\r\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\r\n * seconds.\r\n *\r\n * Example without specifying fractional digits:\r\n *\r\n *     import {toStringHDMS} from 'ol/coordinate';\r\n *\r\n *     const coord = [7.85, 47.983333];\r\n *     const out = toStringHDMS(coord);\r\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\r\n *\r\n * Example explicitly specifying 1 fractional digit:\r\n *\r\n *     import {toStringHDMS} from 'ol/coordinate';\r\n *\r\n *     const coord = [7.85, 47.983333];\r\n *     const out = toStringHDMS(coord, 1);\r\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\r\n *\r\n * @param {Coordinate} coordinate Coordinate.\r\n * @param {number} [fractionDigits] The number of digits to include\r\n *    after the decimal point. Default is `0`.\r\n * @return {string} Hemisphere, degrees, minutes and seconds.\r\n * @api\r\n */\r\nexport function toStringHDMS(coordinate, fractionDigits) {\r\n  if (coordinate) {\r\n    return (\r\n      degreesToStringHDMS('NS', coordinate[1], fractionDigits) +\r\n      ' ' +\r\n      degreesToStringHDMS('EW', coordinate[0], fractionDigits)\r\n    );\r\n  } else {\r\n    return '';\r\n  }\r\n}\r\n\r\n/**\r\n * Format a coordinate as a comma delimited string.\r\n *\r\n * Example without specifying fractional digits:\r\n *\r\n *     import {toStringXY} from 'ol/coordinate';\r\n *\r\n *     const coord = [7.85, 47.983333];\r\n *     const out = toStringXY(coord);\r\n *     // out is now '8, 48'\r\n *\r\n * Example explicitly specifying 1 fractional digit:\r\n *\r\n *     import {toStringXY} from 'ol/coordinate';\r\n *\r\n *     const coord = [7.85, 47.983333];\r\n *     const out = toStringXY(coord, 1);\r\n *     // out is now '7.8, 48.0'\r\n *\r\n * @param {Coordinate} coordinate Coordinate.\r\n * @param {number} [fractionDigits] The number of digits to include\r\n *    after the decimal point. Default is `0`.\r\n * @return {string} XY.\r\n * @api\r\n */\r\nexport function toStringXY(coordinate, fractionDigits) {\r\n  return format(coordinate, '{x}, {y}', fractionDigits);\r\n}\r\n\r\n/**\r\n * Modifies the provided coordinate in-place to be within the real world\r\n * extent. The lower projection extent boundary is inclusive, the upper one\r\n * exclusive.\r\n *\r\n * @param {Coordinate} coordinate Coordinate.\r\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\r\n * @return {Coordinate} The coordinate within the real world extent.\r\n */\r\nexport function wrapX(coordinate, projection) {\r\n  if (projection.canWrapX()) {\r\n    const worldWidth = getWidth(projection.getExtent());\r\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\r\n    if (worldsAway) {\r\n      coordinate[0] -= worldsAway * worldWidth;\r\n    }\r\n  }\r\n  return coordinate;\r\n}\r\n/**\r\n * @param {Coordinate} coordinate Coordinate.\r\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\r\n * @param {number} [sourceExtentWidth] Width of the source extent.\r\n * @return {number} Offset in world widths.\r\n */\r\nexport function getWorldsAway(coordinate, projection, sourceExtentWidth) {\r\n  const projectionExtent = projection.getExtent();\r\n  let worldsAway = 0;\r\n  if (\r\n    projection.canWrapX() &&\r\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\r\n  ) {\r\n    sourceExtentWidth = sourceExtentWidth || getWidth(projectionExtent);\r\n    worldsAway = Math.floor(\r\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\r\n    );\r\n  }\r\n  return worldsAway;\r\n}\r\n","/**\r\n * @module ol/renderer/Map\r\n */\r\nimport Disposable from '../Disposable.js';\r\nimport {TRUE} from '../functions.js';\r\nimport {abstract} from '../util.js';\r\nimport {compose as composeTransform, makeInverse} from '../transform.js';\r\nimport {getWidth} from '../extent.js';\r\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\r\nimport {inView} from '../layer/Layer.js';\r\nimport {wrapX} from '../coordinate.js';\r\n\r\n/**\r\n * @typedef HitMatch\r\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\r\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\r\n * @property {number} distanceSq Squared distance.\r\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\r\n * @template T\r\n */\r\n\r\n/**\r\n * @abstract\r\n */\r\nclass MapRenderer extends Disposable {\r\n  /**\r\n   * @param {import(\"../Map.js\").default} map Map.\r\n   */\r\n  constructor(map) {\r\n    super();\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../Map.js\").default}\r\n     */\r\n    this.map_ = map;\r\n  }\r\n\r\n  /**\r\n   * @abstract\r\n   * @param {import(\"../render/EventType.js\").default} type Event type.\r\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\r\n   */\r\n  dispatchRenderEvent(type, frameState) {\r\n    abstract();\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\r\n   * @protected\r\n   */\r\n  calculateMatrices2D(frameState) {\r\n    const viewState = frameState.viewState;\r\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\r\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\r\n\r\n    composeTransform(\r\n      coordinateToPixelTransform,\r\n      frameState.size[0] / 2,\r\n      frameState.size[1] / 2,\r\n      1 / viewState.resolution,\r\n      -1 / viewState.resolution,\r\n      -viewState.rotation,\r\n      -viewState.center[0],\r\n      -viewState.center[1]\r\n    );\r\n\r\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\r\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\r\n   * @param {number} hitTolerance Hit tolerance in pixels.\r\n   * @param {boolean} checkWrapped Check for wrapped geometries.\r\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\r\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\r\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\r\n   *     function, only layers which are visible and for which this function\r\n   *     returns `true` will be tested for features.  By default, all visible\r\n   *     layers will be tested.\r\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\r\n   * @return {T|undefined} Callback result.\r\n   * @template S,T,U\r\n   */\r\n  forEachFeatureAtCoordinate(\r\n    coordinate,\r\n    frameState,\r\n    hitTolerance,\r\n    checkWrapped,\r\n    callback,\r\n    thisArg,\r\n    layerFilter,\r\n    thisArg2\r\n  ) {\r\n    let result;\r\n    const viewState = frameState.viewState;\r\n\r\n    /**\r\n     * @param {boolean} managed Managed layer.\r\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\r\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\r\n     * @return {T|undefined} Callback result.\r\n     */\r\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\r\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\r\n    }\r\n\r\n    const projection = viewState.projection;\r\n\r\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\r\n    const offsets = [[0, 0]];\r\n    if (projection.canWrapX() && checkWrapped) {\r\n      const projectionExtent = projection.getExtent();\r\n      const worldWidth = getWidth(projectionExtent);\r\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\r\n    }\r\n\r\n    const layerStates = frameState.layerStatesArray;\r\n    const numLayers = layerStates.length;\r\n\r\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\r\n    const tmpCoord = [];\r\n    for (let i = 0; i < offsets.length; i++) {\r\n      for (let j = numLayers - 1; j >= 0; --j) {\r\n        const layerState = layerStates[j];\r\n        const layer = layerState.layer;\r\n        if (\r\n          layer.hasRenderer() &&\r\n          inView(layerState, viewState) &&\r\n          layerFilter.call(thisArg2, layer)\r\n        ) {\r\n          const layerRenderer = layer.getRenderer();\r\n          const source = layer.getSource();\r\n          if (layerRenderer && source) {\r\n            const coordinates = source.getWrapX()\r\n              ? translatedCoordinate\r\n              : coordinate;\r\n            const callback = forEachFeatureAtCoordinate.bind(\r\n              null,\r\n              layerState.managed\r\n            );\r\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\r\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\r\n            result = layerRenderer.forEachFeatureAtCoordinate(\r\n              tmpCoord,\r\n              frameState,\r\n              hitTolerance,\r\n              callback,\r\n              matches\r\n            );\r\n          }\r\n          if (result) {\r\n            return result;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (matches.length === 0) {\r\n      return undefined;\r\n    }\r\n    const order = 1 / matches.length;\r\n    matches.forEach((m, i) => (m.distanceSq += i * order));\r\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\r\n    matches.some((m) => {\r\n      return (result = m.callback(m.feature, m.layer, m.geometry));\r\n    });\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\r\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\r\n   * @param {number} hitTolerance Hit tolerance in pixels.\r\n   * @param {boolean} checkWrapped Check for wrapped geometries.\r\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\r\n   *     function, only layers which are visible and for which this function\r\n   *     returns `true` will be tested for features.  By default, all visible\r\n   *     layers will be tested.\r\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\r\n   * @return {boolean} Is there a feature at the given coordinate?\r\n   * @template U\r\n   */\r\n  hasFeatureAtCoordinate(\r\n    coordinate,\r\n    frameState,\r\n    hitTolerance,\r\n    checkWrapped,\r\n    layerFilter,\r\n    thisArg\r\n  ) {\r\n    const hasFeature = this.forEachFeatureAtCoordinate(\r\n      coordinate,\r\n      frameState,\r\n      hitTolerance,\r\n      checkWrapped,\r\n      TRUE,\r\n      this,\r\n      layerFilter,\r\n      thisArg\r\n    );\r\n\r\n    return hasFeature !== undefined;\r\n  }\r\n\r\n  /**\r\n   * @return {import(\"../Map.js\").default} Map.\r\n   */\r\n  getMap() {\r\n    return this.map_;\r\n  }\r\n\r\n  /**\r\n   * Render.\r\n   * @abstract\r\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\r\n   */\r\n  renderFrame(frameState) {\r\n    abstract();\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\r\n   * @protected\r\n   */\r\n  scheduleExpireIconCache(frameState) {\r\n    if (iconImageCache.canExpireCache()) {\r\n      frameState.postRenderFunctions.push(expireIconCache);\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * @param {import(\"../Map.js\").default} map Map.\r\n * @param {import(\"../Map.js\").FrameState} frameState Frame state.\r\n */\r\nfunction expireIconCache(map, frameState) {\r\n  iconImageCache.expire();\r\n}\r\n\r\nexport default MapRenderer;\r\n","/**\r\n * @module ol/render/Event\r\n */\r\n\r\nimport Event from '../events/Event.js';\r\n\r\nclass RenderEvent extends Event {\r\n  /**\r\n   * @param {import(\"./EventType.js\").default} type Type.\r\n   * @param {import(\"../transform.js\").Transform} [inversePixelTransform] Transform for\r\n   *     CSS pixels to rendered pixels.\r\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\r\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [context] Context.\r\n   */\r\n  constructor(type, inversePixelTransform, frameState, context) {\r\n    super(type);\r\n\r\n    /**\r\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\r\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\r\n     * @type {import(\"../transform.js\").Transform|undefined}\r\n     * @api\r\n     */\r\n    this.inversePixelTransform = inversePixelTransform;\r\n\r\n    /**\r\n     * An object representing the current render frame state.\r\n     * @type {import(\"../Map.js\").FrameState|undefined}\r\n     * @api\r\n     */\r\n    this.frameState = frameState;\r\n\r\n    /**\r\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\r\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\r\n     * context.\r\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\r\n     * @api\r\n     */\r\n    this.context = context;\r\n  }\r\n}\r\n\r\nexport default RenderEvent;\r\n","/**\r\n * @module ol/css\r\n */\r\n\r\n/**\r\n * @typedef {Object} FontParameters\r\n * @property {string} style Style.\r\n * @property {string} variant Variant.\r\n * @property {string} weight Weight.\r\n * @property {string} size Size.\r\n * @property {string} lineHeight LineHeight.\r\n * @property {string} family Family.\r\n * @property {Array<string>} families Families.\r\n */\r\n\r\n/**\r\n * The CSS class for hidden feature.\r\n *\r\n * @const\r\n * @type {string}\r\n */\r\nexport const CLASS_HIDDEN = 'ol-hidden';\r\n\r\n/**\r\n * The CSS class that we'll give the DOM elements to have them selectable.\r\n *\r\n * @const\r\n * @type {string}\r\n */\r\nexport const CLASS_SELECTABLE = 'ol-selectable';\r\n\r\n/**\r\n * The CSS class that we'll give the DOM elements to have them unselectable.\r\n *\r\n * @const\r\n * @type {string}\r\n */\r\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\r\n\r\n/**\r\n * The CSS class for unsupported feature.\r\n *\r\n * @const\r\n * @type {string}\r\n */\r\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\r\n\r\n/**\r\n * The CSS class for controls.\r\n *\r\n * @const\r\n * @type {string}\r\n */\r\nexport const CLASS_CONTROL = 'ol-control';\r\n\r\n/**\r\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\r\n * to those elements which usually can be expanded.\r\n *\r\n * @const\r\n * @type {string}\r\n */\r\nexport const CLASS_COLLAPSED = 'ol-collapsed';\r\n\r\n/**\r\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\r\n * @type {RegExp}\r\n */\r\nconst fontRegEx = new RegExp(\r\n  [\r\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\r\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\r\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\r\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\r\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\r\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\r\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\r\n  ].join(''),\r\n  'i'\r\n);\r\nconst fontRegExMatchIndex = [\r\n  'style',\r\n  'variant',\r\n  'weight',\r\n  'size',\r\n  'lineHeight',\r\n  'family',\r\n];\r\n\r\n/**\r\n * Get the list of font families from a font spec.  Note that this doesn't work\r\n * for font families that have commas in them.\r\n * @param {string} fontSpec The CSS font property.\r\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\r\n */\r\nexport const getFontParameters = function (fontSpec) {\r\n  const match = fontSpec.match(fontRegEx);\r\n  if (!match) {\r\n    return null;\r\n  }\r\n  const style = /** @type {FontParameters} */ ({\r\n    lineHeight: 'normal',\r\n    size: '1.2em',\r\n    style: 'normal',\r\n    weight: 'normal',\r\n    variant: 'normal',\r\n  });\r\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\r\n    const value = match[i + 1];\r\n    if (value !== undefined) {\r\n      style[fontRegExMatchIndex[i]] = value;\r\n    }\r\n  }\r\n  style.families = style.family.split(/,\\s?/);\r\n  return style;\r\n};\r\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\r\n\r\n/**\r\n * @module ol/dom\r\n */\r\n\r\n//FIXME Move this function to the canvas module\r\n/**\r\n * Create an html canvas element and returns its 2d context.\r\n * @param {number} [width] Canvas width.\r\n * @param {number} [height] Canvas height.\r\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\r\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\r\n * @return {CanvasRenderingContext2D} The context.\r\n */\r\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\r\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\r\n  let canvas;\r\n  if (canvasPool && canvasPool.length) {\r\n    canvas = canvasPool.shift();\r\n  } else if (WORKER_OFFSCREEN_CANVAS) {\r\n    canvas = new OffscreenCanvas(width || 300, height || 300);\r\n  } else {\r\n    canvas = document.createElement('canvas');\r\n  }\r\n  if (width) {\r\n    canvas.width = width;\r\n  }\r\n  if (height) {\r\n    canvas.height = height;\r\n  }\r\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\r\n  return /** @type {CanvasRenderingContext2D} */ (\r\n    canvas.getContext('2d', settings)\r\n  );\r\n}\r\n\r\n/**\r\n * Releases canvas memory to avoid exceeding memory limits in Safari.\r\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\r\n * @param {CanvasRenderingContext2D} context Context.\r\n */\r\nexport function releaseCanvas(context) {\r\n  const canvas = context.canvas;\r\n  canvas.width = 1;\r\n  canvas.height = 1;\r\n  context.clearRect(0, 0, 1, 1);\r\n}\r\n\r\n/**\r\n * Get the current computed width for the given element including margin,\r\n * padding and border.\r\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\r\n * @param {!HTMLElement} element Element.\r\n * @return {number} The width.\r\n */\r\nexport function outerWidth(element) {\r\n  let width = element.offsetWidth;\r\n  const style = getComputedStyle(element);\r\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\r\n\r\n  return width;\r\n}\r\n\r\n/**\r\n * Get the current computed height for the given element including margin,\r\n * padding and border.\r\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\r\n * @param {!HTMLElement} element Element.\r\n * @return {number} The height.\r\n */\r\nexport function outerHeight(element) {\r\n  let height = element.offsetHeight;\r\n  const style = getComputedStyle(element);\r\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\r\n\r\n  return height;\r\n}\r\n\r\n/**\r\n * @param {Node} newNode Node to replace old node\r\n * @param {Node} oldNode The node to be replaced\r\n */\r\nexport function replaceNode(newNode, oldNode) {\r\n  const parent = oldNode.parentNode;\r\n  if (parent) {\r\n    parent.replaceChild(newNode, oldNode);\r\n  }\r\n}\r\n\r\n/**\r\n * @param {Node} node The node to remove.\r\n * @return {Node|null} The node that was removed or null.\r\n */\r\nexport function removeNode(node) {\r\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\r\n}\r\n\r\n/**\r\n * @param {Node} node The node to remove the children from.\r\n */\r\nexport function removeChildren(node) {\r\n  while (node.lastChild) {\r\n    node.removeChild(node.lastChild);\r\n  }\r\n}\r\n\r\n/**\r\n * Transform the children of a parent node so they match the\r\n * provided list of children.  This function aims to efficiently\r\n * remove, add, and reorder child nodes while maintaining a simple\r\n * implementation (it is not guaranteed to minimize DOM operations).\r\n * @param {Node} node The parent node whose children need reworking.\r\n * @param {Array<Node>} children The desired children.\r\n */\r\nexport function replaceChildren(node, children) {\r\n  const oldChildren = node.childNodes;\r\n\r\n  for (let i = 0; true; ++i) {\r\n    const oldChild = oldChildren[i];\r\n    const newChild = children[i];\r\n\r\n    // check if our work is done\r\n    if (!oldChild && !newChild) {\r\n      break;\r\n    }\r\n\r\n    // check if children match\r\n    if (oldChild === newChild) {\r\n      continue;\r\n    }\r\n\r\n    // check if a new child needs to be added\r\n    if (!oldChild) {\r\n      node.appendChild(newChild);\r\n      continue;\r\n    }\r\n\r\n    // check if an old child needs to be removed\r\n    if (!newChild) {\r\n      node.removeChild(oldChild);\r\n      --i;\r\n      continue;\r\n    }\r\n\r\n    // reorder\r\n    node.insertBefore(newChild, oldChild);\r\n  }\r\n}\r\n","/**\r\n * @module ol/render/canvas\r\n */\r\nimport BaseObject from '../Object.js';\r\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\r\nimport {clear} from '../obj.js';\r\nimport {createCanvasContext2D} from '../dom.js';\r\nimport {getFontParameters} from '../css.js';\r\n\r\n/**\r\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\r\n */\r\n\r\n/**\r\n * @typedef {Object} FillState\r\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\r\n */\r\n\r\n/**\r\n * @typedef Label\r\n * @property {number} width Width.\r\n * @property {number} height Height.\r\n * @property {Array<string|number>} contextInstructions ContextInstructions.\r\n */\r\n\r\n/**\r\n * @typedef {Object} FillStrokeState\r\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\r\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\r\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\r\n * @property {Array<number>} currentLineDash Current LineDash.\r\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\r\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\r\n * @property {number} [currentLineWidth] Current LineWidth.\r\n * @property {number} [currentMiterLimit] Current MiterLimit.\r\n * @property {number} [lastStroke] Last stroke.\r\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\r\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\r\n * @property {CanvasLineCap} [lineCap] LineCap.\r\n * @property {Array<number>} lineDash LineDash.\r\n * @property {number} [lineDashOffset] LineDashOffset.\r\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\r\n * @property {number} [lineWidth] LineWidth.\r\n * @property {number} [miterLimit] MiterLimit.\r\n */\r\n\r\n/**\r\n * @typedef {Object} StrokeState\r\n * @property {CanvasLineCap} lineCap LineCap.\r\n * @property {Array<number>} lineDash LineDash.\r\n * @property {number} lineDashOffset LineDashOffset.\r\n * @property {CanvasLineJoin} lineJoin LineJoin.\r\n * @property {number} lineWidth LineWidth.\r\n * @property {number} miterLimit MiterLimit.\r\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\r\n */\r\n\r\n/**\r\n * @typedef {Object} TextState\r\n * @property {string} font Font.\r\n * @property {CanvasTextAlign} [textAlign] TextAlign.\r\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\r\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\r\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\r\n * @property {number} [maxAngle] MaxAngle.\r\n * @property {boolean} [overflow] Overflow.\r\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\r\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\r\n * @property {import(\"../size.js\").Size} [scale] Scale.\r\n * @property {Array<number>} [padding] Padding.\r\n */\r\n\r\n/**\r\n * @typedef {Object} SerializableInstructions\r\n * @property {Array<*>} instructions The rendering instructions.\r\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\r\n * @property {Array<number>} coordinates The array of all coordinates.\r\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\r\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\r\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\r\n */\r\n\r\n/**\r\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\r\n */\r\n\r\n/**\r\n * @const\r\n * @type {string}\r\n */\r\nexport const defaultFont = '10px sans-serif';\r\n\r\n/**\r\n * @const\r\n * @type {import(\"../colorlike.js\").ColorLike}\r\n */\r\nexport const defaultFillStyle = '#000';\r\n\r\n/**\r\n * @const\r\n * @type {CanvasLineCap}\r\n */\r\nexport const defaultLineCap = 'round';\r\n\r\n/**\r\n * @const\r\n * @type {Array<number>}\r\n */\r\nexport const defaultLineDash = [];\r\n\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport const defaultLineDashOffset = 0;\r\n\r\n/**\r\n * @const\r\n * @type {CanvasLineJoin}\r\n */\r\nexport const defaultLineJoin = 'round';\r\n\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport const defaultMiterLimit = 10;\r\n\r\n/**\r\n * @const\r\n * @type {import(\"../colorlike.js\").ColorLike}\r\n */\r\nexport const defaultStrokeStyle = '#000';\r\n\r\n/**\r\n * @const\r\n * @type {CanvasTextAlign}\r\n */\r\nexport const defaultTextAlign = 'center';\r\n\r\n/**\r\n * @const\r\n * @type {CanvasTextBaseline}\r\n */\r\nexport const defaultTextBaseline = 'middle';\r\n\r\n/**\r\n * @const\r\n * @type {Array<number>}\r\n */\r\nexport const defaultPadding = [0, 0, 0, 0];\r\n\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport const defaultLineWidth = 1;\r\n\r\n/**\r\n * @type {BaseObject}\r\n */\r\nexport const checkedFonts = new BaseObject();\r\n\r\n/**\r\n * @type {CanvasRenderingContext2D}\r\n */\r\nlet measureContext = null;\r\n\r\n/**\r\n * @type {string}\r\n */\r\nlet measureFont;\r\n\r\n/**\r\n * @type {!Object<string, number>}\r\n */\r\nexport const textHeights = {};\r\n\r\n/**\r\n * Clears the label cache when a font becomes available.\r\n * @param {string} fontSpec CSS font spec.\r\n */\r\nexport const registerFont = (function () {\r\n  const retries = 100;\r\n  const size = '32px ';\r\n  const referenceFonts = ['monospace', 'serif'];\r\n  const len = referenceFonts.length;\r\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\r\n  let interval, referenceWidth;\r\n\r\n  /**\r\n   * @param {string} fontStyle Css font-style\r\n   * @param {string} fontWeight Css font-weight\r\n   * @param {*} fontFamily Css font-family\r\n   * @return {boolean} Font with style and weight is available\r\n   */\r\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\r\n    let available = true;\r\n    for (let i = 0; i < len; ++i) {\r\n      const referenceFont = referenceFonts[i];\r\n      referenceWidth = measureTextWidth(\r\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\r\n        text\r\n      );\r\n      if (fontFamily != referenceFont) {\r\n        const width = measureTextWidth(\r\n          fontStyle +\r\n            ' ' +\r\n            fontWeight +\r\n            ' ' +\r\n            size +\r\n            fontFamily +\r\n            ',' +\r\n            referenceFont,\r\n          text\r\n        );\r\n        // If width and referenceWidth are the same, then the fallback was used\r\n        // instead of the font we wanted, so the font is not available.\r\n        available = available && width != referenceWidth;\r\n      }\r\n    }\r\n    if (available) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  function check() {\r\n    let done = true;\r\n    const fonts = checkedFonts.getKeys();\r\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\r\n      const font = fonts[i];\r\n      if (checkedFonts.get(font) < retries) {\r\n        if (isAvailable.apply(this, font.split('\\n'))) {\r\n          clear(textHeights);\r\n          // Make sure that loaded fonts are picked up by Safari\r\n          measureContext = null;\r\n          measureFont = undefined;\r\n          checkedFonts.set(font, retries);\r\n        } else {\r\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\r\n          done = false;\r\n        }\r\n      }\r\n    }\r\n    if (done) {\r\n      clearInterval(interval);\r\n      interval = undefined;\r\n    }\r\n  }\r\n\r\n  return function (fontSpec) {\r\n    const font = getFontParameters(fontSpec);\r\n    if (!font) {\r\n      return;\r\n    }\r\n    const families = font.families;\r\n    for (let i = 0, ii = families.length; i < ii; ++i) {\r\n      const family = families[i];\r\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\r\n      if (checkedFonts.get(key) === undefined) {\r\n        checkedFonts.set(key, retries, true);\r\n        if (!isAvailable(font.style, font.weight, family)) {\r\n          checkedFonts.set(key, 0, true);\r\n          if (interval === undefined) {\r\n            interval = setInterval(check, 32);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n})();\r\n\r\n/**\r\n * @param {string} font Font to use for measuring.\r\n * @return {import(\"../size.js\").Size} Measurement.\r\n */\r\nexport const measureTextHeight = (function () {\r\n  /**\r\n   * @type {HTMLDivElement}\r\n   */\r\n  let measureElement;\r\n  return function (fontSpec) {\r\n    let height = textHeights[fontSpec];\r\n    if (height == undefined) {\r\n      if (WORKER_OFFSCREEN_CANVAS) {\r\n        const font = getFontParameters(fontSpec);\r\n        const metrics = measureText(fontSpec, 'Žg');\r\n        const lineHeight = isNaN(Number(font.lineHeight))\r\n          ? 1.2\r\n          : Number(font.lineHeight);\r\n        height =\r\n          lineHeight *\r\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\r\n      } else {\r\n        if (!measureElement) {\r\n          measureElement = document.createElement('div');\r\n          measureElement.innerHTML = 'M';\r\n          measureElement.style.minHeight = '0';\r\n          measureElement.style.maxHeight = 'none';\r\n          measureElement.style.height = 'auto';\r\n          measureElement.style.padding = '0';\r\n          measureElement.style.border = 'none';\r\n          measureElement.style.position = 'absolute';\r\n          measureElement.style.display = 'block';\r\n          measureElement.style.left = '-99999px';\r\n        }\r\n        measureElement.style.font = fontSpec;\r\n        document.body.appendChild(measureElement);\r\n        height = measureElement.offsetHeight;\r\n        document.body.removeChild(measureElement);\r\n      }\r\n      textHeights[fontSpec] = height;\r\n    }\r\n    return height;\r\n  };\r\n})();\r\n\r\n/**\r\n * @param {string} font Font.\r\n * @param {string} text Text.\r\n * @return {TextMetrics} Text metrics.\r\n */\r\nfunction measureText(font, text) {\r\n  if (!measureContext) {\r\n    measureContext = createCanvasContext2D(1, 1);\r\n  }\r\n  if (font != measureFont) {\r\n    measureContext.font = font;\r\n    measureFont = measureContext.font;\r\n  }\r\n  return measureContext.measureText(text);\r\n}\r\n\r\n/**\r\n * @param {string} font Font.\r\n * @param {string} text Text.\r\n * @return {number} Width.\r\n */\r\nexport function measureTextWidth(font, text) {\r\n  return measureText(font, text).width;\r\n}\r\n\r\n/**\r\n * Measure text width using a cache.\r\n * @param {string} font The font.\r\n * @param {string} text The text to measure.\r\n * @param {Object<string, number>} cache A lookup of cached widths by text.\r\n * @return {number} The text width.\r\n */\r\nexport function measureAndCacheTextWidth(font, text, cache) {\r\n  if (text in cache) {\r\n    return cache[text];\r\n  }\r\n  const width = text\r\n    .split('\\n')\r\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\r\n  cache[text] = width;\r\n  return width;\r\n}\r\n\r\n/**\r\n * @param {TextState} baseStyle Base style.\r\n * @param {Array<string>} chunks Text chunks to measure.\r\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\r\n */\r\nexport function getTextDimensions(baseStyle, chunks) {\r\n  const widths = [];\r\n  const heights = [];\r\n  const lineWidths = [];\r\n  let width = 0;\r\n  let lineWidth = 0;\r\n  let height = 0;\r\n  let lineHeight = 0;\r\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\r\n    const text = chunks[i];\r\n    if (text === '\\n' || i === ii) {\r\n      width = Math.max(width, lineWidth);\r\n      lineWidths.push(lineWidth);\r\n      lineWidth = 0;\r\n      height += lineHeight;\r\n      continue;\r\n    }\r\n    const font = chunks[i + 1] || baseStyle.font;\r\n    const currentWidth = measureTextWidth(font, text);\r\n    widths.push(currentWidth);\r\n    lineWidth += currentWidth;\r\n    const currentHeight = measureTextHeight(font);\r\n    heights.push(currentHeight);\r\n    lineHeight = Math.max(lineHeight, currentHeight);\r\n  }\r\n  return {width, height, widths, heights, lineWidths};\r\n}\r\n\r\n/**\r\n * @param {CanvasRenderingContext2D} context Context.\r\n * @param {number} rotation Rotation.\r\n * @param {number} offsetX X offset.\r\n * @param {number} offsetY Y offset.\r\n */\r\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\r\n  if (rotation !== 0) {\r\n    context.translate(offsetX, offsetY);\r\n    context.rotate(rotation);\r\n    context.translate(-offsetX, -offsetY);\r\n  }\r\n}\r\n\r\n/**\r\n * @param {CanvasRenderingContext2D} context Context.\r\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\r\n * @param {number} opacity Opacity.\r\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\r\n * @param {number} originX Origin X.\r\n * @param {number} originY Origin Y.\r\n * @param {number} w Width.\r\n * @param {number} h Height.\r\n * @param {number} x X.\r\n * @param {number} y Y.\r\n * @param {import(\"../size.js\").Size} scale Scale.\r\n */\r\nexport function drawImageOrLabel(\r\n  context,\r\n  transform,\r\n  opacity,\r\n  labelOrImage,\r\n  originX,\r\n  originY,\r\n  w,\r\n  h,\r\n  x,\r\n  y,\r\n  scale\r\n) {\r\n  context.save();\r\n\r\n  if (opacity !== 1) {\r\n    context.globalAlpha *= opacity;\r\n  }\r\n  if (transform) {\r\n    context.setTransform.apply(context, transform);\r\n  }\r\n\r\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\r\n    // label\r\n    context.translate(x, y);\r\n    context.scale(scale[0], scale[1]);\r\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\r\n  } else if (scale[0] < 0 || scale[1] < 0) {\r\n    // flipped image\r\n    context.translate(x, y);\r\n    context.scale(scale[0], scale[1]);\r\n    context.drawImage(\r\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\r\n        labelOrImage\r\n      ),\r\n      originX,\r\n      originY,\r\n      w,\r\n      h,\r\n      0,\r\n      0,\r\n      w,\r\n      h\r\n    );\r\n  } else {\r\n    // if image not flipped translate and scale can be avoided\r\n    context.drawImage(\r\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\r\n        labelOrImage\r\n      ),\r\n      originX,\r\n      originY,\r\n      w,\r\n      h,\r\n      x,\r\n      y,\r\n      w * scale[0],\r\n      h * scale[1]\r\n    );\r\n  }\r\n\r\n  context.restore();\r\n}\r\n\r\n/**\r\n * @param {Label} label Label.\r\n * @param {CanvasRenderingContext2D} context Context.\r\n */\r\nfunction executeLabelInstructions(label, context) {\r\n  const contextInstructions = label.contextInstructions;\r\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\r\n    if (Array.isArray(contextInstructions[i + 1])) {\r\n      context[contextInstructions[i]].apply(\r\n        context,\r\n        contextInstructions[i + 1]\r\n      );\r\n    } else {\r\n      context[contextInstructions[i]] = contextInstructions[i + 1];\r\n    }\r\n  }\r\n}\r\n","/**\r\n * @module ol/renderer/Composite\r\n */\r\nimport MapRenderer from './Map.js';\r\nimport ObjectEventType from '../ObjectEventType.js';\r\nimport RenderEvent from '../render/Event.js';\r\nimport RenderEventType from '../render/EventType.js';\r\nimport {CLASS_UNSELECTABLE} from '../css.js';\r\nimport {checkedFonts} from '../render/canvas.js';\r\nimport {inView} from '../layer/Layer.js';\r\nimport {listen, unlistenByKey} from '../events.js';\r\nimport {replaceChildren} from '../dom.js';\r\n\r\n/**\r\n * @classdesc\r\n * Canvas map renderer.\r\n * @api\r\n */\r\nclass CompositeMapRenderer extends MapRenderer {\r\n  /**\r\n   * @param {import(\"../Map.js\").default} map Map.\r\n   */\r\n  constructor(map) {\r\n    super(map);\r\n\r\n    /**\r\n     * @type {import(\"../events.js\").EventsKey}\r\n     */\r\n    this.fontChangeListenerKey_ = listen(\r\n      checkedFonts,\r\n      ObjectEventType.PROPERTYCHANGE,\r\n      map.redrawText.bind(map)\r\n    );\r\n\r\n    /**\r\n     * @private\r\n     * @type {HTMLDivElement}\r\n     */\r\n    this.element_ = document.createElement('div');\r\n    const style = this.element_.style;\r\n    style.position = 'absolute';\r\n    style.width = '100%';\r\n    style.height = '100%';\r\n    style.zIndex = '0';\r\n\r\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\r\n\r\n    const container = map.getViewport();\r\n    container.insertBefore(this.element_, container.firstChild || null);\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<HTMLElement>}\r\n     */\r\n    this.children_ = [];\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.renderedVisible_ = true;\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../render/EventType.js\").default} type Event type.\r\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\r\n   */\r\n  dispatchRenderEvent(type, frameState) {\r\n    const map = this.getMap();\r\n    if (map.hasListener(type)) {\r\n      const event = new RenderEvent(type, undefined, frameState);\r\n      map.dispatchEvent(event);\r\n    }\r\n  }\r\n\r\n  disposeInternal() {\r\n    unlistenByKey(this.fontChangeListenerKey_);\r\n    this.element_.parentNode.removeChild(this.element_);\r\n    super.disposeInternal();\r\n  }\r\n\r\n  /**\r\n   * Render.\r\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\r\n   */\r\n  renderFrame(frameState) {\r\n    if (!frameState) {\r\n      if (this.renderedVisible_) {\r\n        this.element_.style.display = 'none';\r\n        this.renderedVisible_ = false;\r\n      }\r\n      return;\r\n    }\r\n\r\n    this.calculateMatrices2D(frameState);\r\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\r\n\r\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\r\n      return a.zIndex - b.zIndex;\r\n    });\r\n    const viewState = frameState.viewState;\r\n\r\n    this.children_.length = 0;\r\n    /**\r\n     * @type {Array<import(\"../layer/BaseVector.js\").default>}\r\n     */\r\n    const declutterLayers = [];\r\n    let previousElement = null;\r\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\r\n      const layerState = layerStatesArray[i];\r\n      frameState.layerIndex = i;\r\n\r\n      const layer = layerState.layer;\r\n      const sourceState = layer.getSourceState();\r\n      if (\r\n        !inView(layerState, viewState) ||\r\n        (sourceState != 'ready' && sourceState != 'undefined')\r\n      ) {\r\n        layer.unrender();\r\n        continue;\r\n      }\r\n\r\n      const element = layer.render(frameState, previousElement);\r\n      if (!element) {\r\n        continue;\r\n      }\r\n      if (element !== previousElement) {\r\n        this.children_.push(element);\r\n        previousElement = element;\r\n      }\r\n      if ('getDeclutter' in layer) {\r\n        declutterLayers.push(\r\n          /** @type {import(\"../layer/BaseVector.js\").default} */ (layer)\r\n        );\r\n      }\r\n    }\r\n    for (let i = declutterLayers.length - 1; i >= 0; --i) {\r\n      declutterLayers[i].renderDeclutter(frameState);\r\n    }\r\n\r\n    replaceChildren(this.element_, this.children_);\r\n\r\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\r\n\r\n    if (!this.renderedVisible_) {\r\n      this.element_.style.display = '';\r\n      this.renderedVisible_ = true;\r\n    }\r\n\r\n    this.scheduleExpireIconCache(frameState);\r\n  }\r\n}\r\n\r\nexport default CompositeMapRenderer;\r\n","/**\r\n * @module ol/layer/Group\r\n */\r\nimport BaseLayer from './Base.js';\r\nimport Collection from '../Collection.js';\r\nimport CollectionEventType from '../CollectionEventType.js';\r\nimport Event from '../events/Event.js';\r\nimport EventType from '../events/EventType.js';\r\nimport ObjectEventType from '../ObjectEventType.js';\r\nimport {assert} from '../asserts.js';\r\nimport {clear} from '../obj.js';\r\nimport {getIntersection} from '../extent.js';\r\nimport {getUid} from '../util.js';\r\nimport {listen, unlistenByKey} from '../events.js';\r\n\r\n/**\r\n * @typedef {'addlayer'|'removelayer'} EventType\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\r\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\r\n * a single event will be triggered (instead of one per layer in the group added or removed).\r\n */\r\nexport class GroupEvent extends Event {\r\n  /**\r\n   * @param {EventType} type The event type.\r\n   * @param {BaseLayer} layer The layer.\r\n   */\r\n  constructor(type, layer) {\r\n    super(type);\r\n\r\n    /**\r\n     * The added or removed layer.\r\n     * @type {BaseLayer}\r\n     * @api\r\n     */\r\n    this.layer = layer;\r\n  }\r\n}\r\n\r\n/***\r\n * @template Return\r\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\r\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\r\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\r\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\r\n */\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {number} [opacity=1] Opacity (0, 1).\r\n * @property {boolean} [visible=true] Visibility.\r\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\r\n * rendered outside of this extent.\r\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\r\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\r\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\r\n * method was used.\r\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\r\n * visible.\r\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\r\n * be visible.\r\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\r\n * visible.\r\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\r\n * be visible.\r\n * @property {Array<import(\"./Base.js\").default>|Collection<import(\"./Base.js\").default>} [layers] Child layers.\r\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\r\n */\r\n\r\n/**\r\n * @enum {string}\r\n * @private\r\n */\r\nconst Property = {\r\n  LAYERS: 'layers',\r\n};\r\n\r\n/**\r\n * @classdesc\r\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\r\n *\r\n * A generic `change` event is triggered when the group/Collection changes.\r\n *\r\n * @api\r\n */\r\nclass LayerGroup extends BaseLayer {\r\n  /**\r\n   * @param {Options} [options] Layer options.\r\n   */\r\n  constructor(options) {\r\n    options = options || {};\r\n    const baseOptions = /** @type {Options} */ (Object.assign({}, options));\r\n    delete baseOptions.layers;\r\n\r\n    let layers = options.layers;\r\n\r\n    super(baseOptions);\r\n\r\n    /***\r\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\r\n     */\r\n    this.on;\r\n\r\n    /***\r\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\r\n     */\r\n    this.once;\r\n\r\n    /***\r\n     * @type {GroupOnSignature<void>}\r\n     */\r\n    this.un;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<import(\"../events.js\").EventsKey>}\r\n     */\r\n    this.layersListenerKeys_ = [];\r\n\r\n    /**\r\n     * @private\r\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\r\n     */\r\n    this.listenerKeys_ = {};\r\n\r\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\r\n\r\n    if (layers) {\r\n      if (Array.isArray(layers)) {\r\n        layers = new Collection(layers.slice(), {unique: true});\r\n      } else {\r\n        assert(typeof (/** @type {?} */ (layers).getArray) === 'function', 43); // Expected `layers` to be an array or a `Collection`\r\n      }\r\n    } else {\r\n      layers = new Collection(undefined, {unique: true});\r\n    }\r\n\r\n    this.setLayers(layers);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  handleLayerChange_() {\r\n    this.changed();\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  handleLayersChanged_() {\r\n    this.layersListenerKeys_.forEach(unlistenByKey);\r\n    this.layersListenerKeys_.length = 0;\r\n\r\n    const layers = this.getLayers();\r\n    this.layersListenerKeys_.push(\r\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\r\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\r\n    );\r\n\r\n    for (const id in this.listenerKeys_) {\r\n      this.listenerKeys_[id].forEach(unlistenByKey);\r\n    }\r\n    clear(this.listenerKeys_);\r\n\r\n    const layersArray = layers.getArray();\r\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\r\n      const layer = layersArray[i];\r\n      this.registerLayerListeners_(layer);\r\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\r\n    }\r\n    this.changed();\r\n  }\r\n\r\n  /**\r\n   * @param {BaseLayer} layer The layer.\r\n   */\r\n  registerLayerListeners_(layer) {\r\n    const listenerKeys = [\r\n      listen(\r\n        layer,\r\n        ObjectEventType.PROPERTYCHANGE,\r\n        this.handleLayerChange_,\r\n        this\r\n      ),\r\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\r\n    ];\r\n\r\n    if (layer instanceof LayerGroup) {\r\n      listenerKeys.push(\r\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\r\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this)\r\n      );\r\n    }\r\n\r\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\r\n  }\r\n\r\n  /**\r\n   * @param {GroupEvent} event The layer group event.\r\n   */\r\n  handleLayerGroupAdd_(event) {\r\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\r\n  }\r\n\r\n  /**\r\n   * @param {GroupEvent} event The layer group event.\r\n   */\r\n  handleLayerGroupRemove_(event) {\r\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\r\n   * @private\r\n   */\r\n  handleLayersAdd_(collectionEvent) {\r\n    const layer = collectionEvent.element;\r\n    this.registerLayerListeners_(layer);\r\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\r\n    this.changed();\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\r\n   * @private\r\n   */\r\n  handleLayersRemove_(collectionEvent) {\r\n    const layer = collectionEvent.element;\r\n    const key = getUid(layer);\r\n    this.listenerKeys_[key].forEach(unlistenByKey);\r\n    delete this.listenerKeys_[key];\r\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\r\n    this.changed();\r\n  }\r\n\r\n  /**\r\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\r\n   * in this group.\r\n   * @return {!Collection<import(\"./Base.js\").default>} Collection of\r\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\r\n   * @observable\r\n   * @api\r\n   */\r\n  getLayers() {\r\n    return /** @type {!Collection<import(\"./Base.js\").default>} */ (\r\n      this.get(Property.LAYERS)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\r\n   * in this group.\r\n   * @param {!Collection<import(\"./Base.js\").default>} layers Collection of\r\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\r\n   * @observable\r\n   * @api\r\n   */\r\n  setLayers(layers) {\r\n    const collection = this.getLayers();\r\n    if (collection) {\r\n      const currentLayers = collection.getArray();\r\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\r\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\r\n      }\r\n    }\r\n\r\n    this.set(Property.LAYERS, layers);\r\n  }\r\n\r\n  /**\r\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\r\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\r\n   */\r\n  getLayersArray(array) {\r\n    array = array !== undefined ? array : [];\r\n    this.getLayers().forEach(function (layer) {\r\n      layer.getLayersArray(array);\r\n    });\r\n    return array;\r\n  }\r\n\r\n  /**\r\n   * Get the layer states list and use this groups z-index as the default\r\n   * for all layers in this and nested groups, if it is unset at this point.\r\n   * If dest is not provided and this group's z-index is undefined\r\n   * 0 is used a the default z-index.\r\n   * @param {Array<import(\"./Layer.js\").State>} [dest] Optional list\r\n   * of layer states (to be modified in place).\r\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\r\n   */\r\n  getLayerStatesArray(dest) {\r\n    const states = dest !== undefined ? dest : [];\r\n    const pos = states.length;\r\n\r\n    this.getLayers().forEach(function (layer) {\r\n      layer.getLayerStatesArray(states);\r\n    });\r\n\r\n    const ownLayerState = this.getLayerState();\r\n    let defaultZIndex = ownLayerState.zIndex;\r\n    if (!dest && ownLayerState.zIndex === undefined) {\r\n      defaultZIndex = 0;\r\n    }\r\n    for (let i = pos, ii = states.length; i < ii; i++) {\r\n      const layerState = states[i];\r\n      layerState.opacity *= ownLayerState.opacity;\r\n      layerState.visible = layerState.visible && ownLayerState.visible;\r\n      layerState.maxResolution = Math.min(\r\n        layerState.maxResolution,\r\n        ownLayerState.maxResolution\r\n      );\r\n      layerState.minResolution = Math.max(\r\n        layerState.minResolution,\r\n        ownLayerState.minResolution\r\n      );\r\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\r\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\r\n      if (ownLayerState.extent !== undefined) {\r\n        if (layerState.extent !== undefined) {\r\n          layerState.extent = getIntersection(\r\n            layerState.extent,\r\n            ownLayerState.extent\r\n          );\r\n        } else {\r\n          layerState.extent = ownLayerState.extent;\r\n        }\r\n      }\r\n      if (layerState.zIndex === undefined) {\r\n        layerState.zIndex = defaultZIndex;\r\n      }\r\n    }\r\n\r\n    return states;\r\n  }\r\n\r\n  /**\r\n   * @return {import(\"../source/Source.js\").State} Source state.\r\n   */\r\n  getSourceState() {\r\n    return 'ready';\r\n  }\r\n}\r\n\r\nexport default LayerGroup;\r\n","/**\r\n * @module ol/MapEvent\r\n */\r\nimport Event from './events/Event.js';\r\n\r\n/**\r\n * @classdesc\r\n * Events emitted as map events are instances of this type.\r\n * See {@link module:ol/Map~Map} for which events trigger a map event.\r\n */\r\nclass MapEvent extends Event {\r\n  /**\r\n   * @param {string} type Event type.\r\n   * @param {import(\"./Map.js\").default} map Map.\r\n   * @param {?import(\"./Map.js\").FrameState} [frameState] Frame state.\r\n   */\r\n  constructor(type, map, frameState) {\r\n    super(type);\r\n\r\n    /**\r\n     * The map where the event occurred.\r\n     * @type {import(\"./Map.js\").default}\r\n     * @api\r\n     */\r\n    this.map = map;\r\n\r\n    /**\r\n     * The frame state at the time of the event.\r\n     * @type {?import(\"./Map.js\").FrameState}\r\n     * @api\r\n     */\r\n    this.frameState = frameState !== undefined ? frameState : null;\r\n  }\r\n}\r\n\r\nexport default MapEvent;\r\n","/**\r\n * @module ol/MapBrowserEvent\r\n */\r\nimport MapEvent from './MapEvent.js';\r\n\r\n/**\r\n * @classdesc\r\n * Events emitted as map browser events are instances of this type.\r\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\r\n * @template {UIEvent} EVENT\r\n */\r\nclass MapBrowserEvent extends MapEvent {\r\n  /**\r\n   * @param {string} type Event type.\r\n   * @param {import(\"./Map.js\").default} map Map.\r\n   * @param {EVENT} originalEvent Original event.\r\n   * @param {boolean} [dragging] Is the map currently being dragged?\r\n   * @param {import(\"./Map.js\").FrameState} [frameState] Frame state.\r\n   * @param {Array<PointerEvent>} [activePointers] Active pointers.\r\n   */\r\n  constructor(type, map, originalEvent, dragging, frameState, activePointers) {\r\n    super(type, map, frameState);\r\n\r\n    /**\r\n     * The original browser event.\r\n     * @const\r\n     * @type {EVENT}\r\n     * @api\r\n     */\r\n    this.originalEvent = originalEvent;\r\n\r\n    /**\r\n     * The map pixel relative to the viewport corresponding to the original browser event.\r\n     * @type {?import(\"./pixel.js\").Pixel}\r\n     */\r\n    this.pixel_ = null;\r\n\r\n    /**\r\n     * The coordinate in the user projection corresponding to the original browser event.\r\n     * @type {?import(\"./coordinate.js\").Coordinate}\r\n     */\r\n    this.coordinate_ = null;\r\n\r\n    /**\r\n     * Indicates if the map is currently being dragged. Only set for\r\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\r\n     *\r\n     * @type {boolean}\r\n     * @api\r\n     */\r\n    this.dragging = dragging !== undefined ? dragging : false;\r\n\r\n    /**\r\n     * @type {Array<PointerEvent>|undefined}\r\n     */\r\n    this.activePointers = activePointers;\r\n  }\r\n\r\n  /**\r\n   * The map pixel relative to the viewport corresponding to the original event.\r\n   * @type {import(\"./pixel.js\").Pixel}\r\n   * @api\r\n   */\r\n  get pixel() {\r\n    if (!this.pixel_) {\r\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\r\n    }\r\n    return this.pixel_;\r\n  }\r\n  set pixel(pixel) {\r\n    this.pixel_ = pixel;\r\n  }\r\n\r\n  /**\r\n   * The coordinate corresponding to the original browser event.  This will be in the user\r\n   * projection if one is set.  Otherwise it will be in the view projection.\r\n   * @type {import(\"./coordinate.js\").Coordinate}\r\n   * @api\r\n   */\r\n  get coordinate() {\r\n    if (!this.coordinate_) {\r\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\r\n    }\r\n    return this.coordinate_;\r\n  }\r\n  set coordinate(coordinate) {\r\n    this.coordinate_ = coordinate;\r\n  }\r\n\r\n  /**\r\n   * Prevents the default browser action.\r\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\r\n   * @api\r\n   */\r\n  preventDefault() {\r\n    super.preventDefault();\r\n    if ('preventDefault' in this.originalEvent) {\r\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Prevents further propagation of the current event.\r\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\r\n   * @api\r\n   */\r\n  stopPropagation() {\r\n    super.stopPropagation();\r\n    if ('stopPropagation' in this.originalEvent) {\r\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\r\n    }\r\n  }\r\n}\r\n\r\nexport default MapBrowserEvent;\r\n","/**\r\n * @module ol/MapBrowserEventType\r\n */\r\nimport EventType from './events/EventType.js';\r\n\r\n/**\r\n * Constants for event names.\r\n * @enum {string}\r\n */\r\nexport default {\r\n  /**\r\n   * A true single click with no dragging and no double click. Note that this\r\n   * event is delayed by 250 ms to ensure that it is not a double click.\r\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\r\n   * @api\r\n   */\r\n  SINGLECLICK: 'singleclick',\r\n\r\n  /**\r\n   * A click with no dragging. A double click will fire two of this.\r\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\r\n   * @api\r\n   */\r\n  CLICK: EventType.CLICK,\r\n\r\n  /**\r\n   * A true double click, with no dragging.\r\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\r\n   * @api\r\n   */\r\n  DBLCLICK: EventType.DBLCLICK,\r\n\r\n  /**\r\n   * Triggered when a pointer is dragged.\r\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\r\n   * @api\r\n   */\r\n  POINTERDRAG: 'pointerdrag',\r\n\r\n  /**\r\n   * Triggered when a pointer is moved. Note that on touch devices this is\r\n   * triggered when the map is panned, so is not the same as mousemove.\r\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\r\n   * @api\r\n   */\r\n  POINTERMOVE: 'pointermove',\r\n\r\n  POINTERDOWN: 'pointerdown',\r\n  POINTERUP: 'pointerup',\r\n  POINTEROVER: 'pointerover',\r\n  POINTEROUT: 'pointerout',\r\n  POINTERENTER: 'pointerenter',\r\n  POINTERLEAVE: 'pointerleave',\r\n  POINTERCANCEL: 'pointercancel',\r\n};\r\n\r\n/***\r\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\r\n */\r\n","/**\r\n * @module ol/pointer/EventType\r\n */\r\n\r\n/**\r\n * Constants for event names.\r\n * @enum {string}\r\n */\r\nexport default {\r\n  POINTERMOVE: 'pointermove',\r\n  POINTERDOWN: 'pointerdown',\r\n  POINTERUP: 'pointerup',\r\n  POINTEROVER: 'pointerover',\r\n  POINTEROUT: 'pointerout',\r\n  POINTERENTER: 'pointerenter',\r\n  POINTERLEAVE: 'pointerleave',\r\n  POINTERCANCEL: 'pointercancel',\r\n};\r\n","/**\r\n * @module ol/MapBrowserEventHandler\r\n */\r\n\r\nimport EventType from './events/EventType.js';\r\nimport MapBrowserEvent from './MapBrowserEvent.js';\r\nimport MapBrowserEventType from './MapBrowserEventType.js';\r\nimport PointerEventType from './pointer/EventType.js';\r\nimport Target from './events/Target.js';\r\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\r\nimport {VOID} from './functions.js';\r\nimport {listen, unlistenByKey} from './events.js';\r\n\r\nclass MapBrowserEventHandler extends Target {\r\n  /**\r\n   * @param {import(\"./Map.js\").default} map The map with the viewport to listen to events on.\r\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\r\n   */\r\n  constructor(map, moveTolerance) {\r\n    super(map);\r\n\r\n    /**\r\n     * This is the element that we will listen to the real events on.\r\n     * @type {import(\"./Map.js\").default}\r\n     * @private\r\n     */\r\n    this.map_ = map;\r\n\r\n    /**\r\n     * @type {any}\r\n     * @private\r\n     */\r\n    this.clickTimeoutId_;\r\n\r\n    /**\r\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\r\n     * @type {boolean}\r\n     */\r\n    this.emulateClicks_ = false;\r\n\r\n    /**\r\n     * @type {boolean}\r\n     * @private\r\n     */\r\n    this.dragging_ = false;\r\n\r\n    /**\r\n     * @type {!Array<import(\"./events.js\").EventsKey>}\r\n     * @private\r\n     */\r\n    this.dragListenerKeys_ = [];\r\n\r\n    /**\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\r\n\r\n    /**\r\n     * The most recent \"down\" type event (or null if none have occurred).\r\n     * Set on pointerdown.\r\n     * @type {PointerEvent|null}\r\n     * @private\r\n     */\r\n    this.down_ = null;\r\n\r\n    const element = this.map_.getViewport();\r\n\r\n    /**\r\n     * @type {Array<PointerEvent>}\r\n     * @private\r\n     */\r\n    this.activePointers_ = [];\r\n\r\n    /**\r\n     * @type {!Object<number, Event>}\r\n     * @private\r\n     */\r\n    this.trackedTouches_ = {};\r\n\r\n    this.element_ = element;\r\n\r\n    /**\r\n     * @type {?import(\"./events.js\").EventsKey}\r\n     * @private\r\n     */\r\n    this.pointerdownListenerKey_ = listen(\r\n      element,\r\n      PointerEventType.POINTERDOWN,\r\n      this.handlePointerDown_,\r\n      this\r\n    );\r\n\r\n    /**\r\n     * @type {PointerEvent}\r\n     * @private\r\n     */\r\n    this.originalPointerMoveEvent_;\r\n\r\n    /**\r\n     * @type {?import(\"./events.js\").EventsKey}\r\n     * @private\r\n     */\r\n    this.relayedListenerKey_ = listen(\r\n      element,\r\n      PointerEventType.POINTERMOVE,\r\n      this.relayMoveEvent_,\r\n      this\r\n    );\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\r\n\r\n    this.element_.addEventListener(\r\n      EventType.TOUCHMOVE,\r\n      this.boundHandleTouchMove_,\r\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @param {PointerEvent} pointerEvent Pointer\r\n   * event.\r\n   * @private\r\n   */\r\n  emulateClick_(pointerEvent) {\r\n    let newEvent = new MapBrowserEvent(\r\n      MapBrowserEventType.CLICK,\r\n      this.map_,\r\n      pointerEvent\r\n    );\r\n    this.dispatchEvent(newEvent);\r\n    if (this.clickTimeoutId_ !== undefined) {\r\n      // double-click\r\n      clearTimeout(this.clickTimeoutId_);\r\n      this.clickTimeoutId_ = undefined;\r\n      newEvent = new MapBrowserEvent(\r\n        MapBrowserEventType.DBLCLICK,\r\n        this.map_,\r\n        pointerEvent\r\n      );\r\n      this.dispatchEvent(newEvent);\r\n    } else {\r\n      // click\r\n      this.clickTimeoutId_ = setTimeout(\r\n        /** @this {MapBrowserEventHandler} */\r\n        function () {\r\n          this.clickTimeoutId_ = undefined;\r\n          const newEvent = new MapBrowserEvent(\r\n            MapBrowserEventType.SINGLECLICK,\r\n            this.map_,\r\n            pointerEvent\r\n          );\r\n          this.dispatchEvent(newEvent);\r\n        }.bind(this),\r\n        250\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Keeps track on how many pointers are currently active.\r\n   *\r\n   * @param {PointerEvent} pointerEvent Pointer\r\n   * event.\r\n   * @private\r\n   */\r\n  updateActivePointers_(pointerEvent) {\r\n    const event = pointerEvent;\r\n    const id = event.pointerId;\r\n\r\n    if (\r\n      event.type == MapBrowserEventType.POINTERUP ||\r\n      event.type == MapBrowserEventType.POINTERCANCEL\r\n    ) {\r\n      delete this.trackedTouches_[id];\r\n      for (const pointerId in this.trackedTouches_) {\r\n        if (this.trackedTouches_[pointerId].target !== event.target) {\r\n          // Some platforms assign a new pointerId when the target changes.\r\n          // If this happens, delete one tracked pointer. If there is more\r\n          // than one tracked pointer for the old target, it will be cleared\r\n          // by subsequent POINTERUP events from other pointers.\r\n          delete this.trackedTouches_[pointerId];\r\n          break;\r\n        }\r\n      }\r\n    } else if (\r\n      event.type == MapBrowserEventType.POINTERDOWN ||\r\n      event.type == MapBrowserEventType.POINTERMOVE\r\n    ) {\r\n      this.trackedTouches_[id] = event;\r\n    }\r\n    this.activePointers_ = Object.values(this.trackedTouches_);\r\n  }\r\n\r\n  /**\r\n   * @param {PointerEvent} pointerEvent Pointer\r\n   * event.\r\n   * @private\r\n   */\r\n  handlePointerUp_(pointerEvent) {\r\n    this.updateActivePointers_(pointerEvent);\r\n    const newEvent = new MapBrowserEvent(\r\n      MapBrowserEventType.POINTERUP,\r\n      this.map_,\r\n      pointerEvent,\r\n      undefined,\r\n      undefined,\r\n      this.activePointers_\r\n    );\r\n    this.dispatchEvent(newEvent);\r\n\r\n    // We emulate click events on left mouse button click, touch contact, and pen\r\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\r\n    // to 0).\r\n    // See http://www.w3.org/TR/pointerevents/#button-states\r\n    // We only fire click, singleclick, and doubleclick if nobody has called\r\n    // event.preventDefault().\r\n    if (\r\n      this.emulateClicks_ &&\r\n      !newEvent.defaultPrevented &&\r\n      !this.dragging_ &&\r\n      this.isMouseActionButton_(pointerEvent)\r\n    ) {\r\n      this.emulateClick_(this.down_);\r\n    }\r\n\r\n    if (this.activePointers_.length === 0) {\r\n      this.dragListenerKeys_.forEach(unlistenByKey);\r\n      this.dragListenerKeys_.length = 0;\r\n      this.dragging_ = false;\r\n      this.down_ = null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {PointerEvent} pointerEvent Pointer\r\n   * event.\r\n   * @return {boolean} If the left mouse button was pressed.\r\n   * @private\r\n   */\r\n  isMouseActionButton_(pointerEvent) {\r\n    return pointerEvent.button === 0;\r\n  }\r\n\r\n  /**\r\n   * @param {PointerEvent} pointerEvent Pointer\r\n   * event.\r\n   * @private\r\n   */\r\n  handlePointerDown_(pointerEvent) {\r\n    this.emulateClicks_ = this.activePointers_.length === 0;\r\n    this.updateActivePointers_(pointerEvent);\r\n    const newEvent = new MapBrowserEvent(\r\n      MapBrowserEventType.POINTERDOWN,\r\n      this.map_,\r\n      pointerEvent,\r\n      undefined,\r\n      undefined,\r\n      this.activePointers_\r\n    );\r\n    this.dispatchEvent(newEvent);\r\n\r\n    // Store a copy of the down event\r\n    this.down_ = /** @type {PointerEvent} */ ({});\r\n    for (const property in pointerEvent) {\r\n      const value = pointerEvent[property];\r\n      this.down_[property] = typeof value === 'function' ? VOID : value;\r\n    }\r\n\r\n    if (this.dragListenerKeys_.length === 0) {\r\n      const doc = this.map_.getOwnerDocument();\r\n      this.dragListenerKeys_.push(\r\n        listen(\r\n          doc,\r\n          MapBrowserEventType.POINTERMOVE,\r\n          this.handlePointerMove_,\r\n          this\r\n        ),\r\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\r\n        /* Note that the listener for `pointercancel is set up on\r\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\r\n         * the `pointerup` and `pointermove` listeners.\r\n         *\r\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\r\n         * issues `pointercancel` events, when there was no `touchend` for a\r\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\r\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\r\n         * But `documentPointerEventHandler_` doesn't know about the first\r\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\r\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\r\n         * only registered there.\r\n         */\r\n        listen(\r\n          this.element_,\r\n          MapBrowserEventType.POINTERCANCEL,\r\n          this.handlePointerUp_,\r\n          this\r\n        )\r\n      );\r\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\r\n        this.dragListenerKeys_.push(\r\n          listen(\r\n            this.element_.getRootNode(),\r\n            MapBrowserEventType.POINTERUP,\r\n            this.handlePointerUp_,\r\n            this\r\n          )\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {PointerEvent} pointerEvent Pointer\r\n   * event.\r\n   * @private\r\n   */\r\n  handlePointerMove_(pointerEvent) {\r\n    // Between pointerdown and pointerup, pointermove events are triggered.\r\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\r\n    // moved a significant distance.\r\n    if (this.isMoving_(pointerEvent)) {\r\n      this.updateActivePointers_(pointerEvent);\r\n      this.dragging_ = true;\r\n      const newEvent = new MapBrowserEvent(\r\n        MapBrowserEventType.POINTERDRAG,\r\n        this.map_,\r\n        pointerEvent,\r\n        this.dragging_,\r\n        undefined,\r\n        this.activePointers_\r\n      );\r\n      this.dispatchEvent(newEvent);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Wrap and relay a pointermove event.\r\n   * @param {PointerEvent} pointerEvent Pointer\r\n   * event.\r\n   * @private\r\n   */\r\n  relayMoveEvent_(pointerEvent) {\r\n    this.originalPointerMoveEvent_ = pointerEvent;\r\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\r\n    this.dispatchEvent(\r\n      new MapBrowserEvent(\r\n        MapBrowserEventType.POINTERMOVE,\r\n        this.map_,\r\n        pointerEvent,\r\n        dragging\r\n      )\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\r\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\r\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\r\n   * when an interaction (currently `DragPan` handles the event.\r\n   * @param {TouchEvent} event Event.\r\n   * @private\r\n   */\r\n  handleTouchMove_(event) {\r\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\r\n    // may not be initialized yet when we get here on a platform without native pointer events.\r\n    const originalEvent = this.originalPointerMoveEvent_;\r\n    if (\r\n      (!originalEvent || originalEvent.defaultPrevented) &&\r\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\r\n    ) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {PointerEvent} pointerEvent Pointer\r\n   * event.\r\n   * @return {boolean} Is moving.\r\n   * @private\r\n   */\r\n  isMoving_(pointerEvent) {\r\n    return (\r\n      this.dragging_ ||\r\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\r\n        this.moveTolerance_ ||\r\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Clean up.\r\n   */\r\n  disposeInternal() {\r\n    if (this.relayedListenerKey_) {\r\n      unlistenByKey(this.relayedListenerKey_);\r\n      this.relayedListenerKey_ = null;\r\n    }\r\n    this.element_.removeEventListener(\r\n      EventType.TOUCHMOVE,\r\n      this.boundHandleTouchMove_\r\n    );\r\n\r\n    if (this.pointerdownListenerKey_) {\r\n      unlistenByKey(this.pointerdownListenerKey_);\r\n      this.pointerdownListenerKey_ = null;\r\n    }\r\n\r\n    this.dragListenerKeys_.forEach(unlistenByKey);\r\n    this.dragListenerKeys_.length = 0;\r\n\r\n    this.element_ = null;\r\n    super.disposeInternal();\r\n  }\r\n}\r\n\r\nexport default MapBrowserEventHandler;\r\n","/**\r\n * @module ol/MapEventType\r\n */\r\n\r\n/**\r\n * @enum {string}\r\n */\r\nexport default {\r\n  /**\r\n   * Triggered after a map frame is rendered.\r\n   * @event module:ol/MapEvent~MapEvent#postrender\r\n   * @api\r\n   */\r\n  POSTRENDER: 'postrender',\r\n\r\n  /**\r\n   * Triggered when the map starts moving.\r\n   * @event module:ol/MapEvent~MapEvent#movestart\r\n   * @api\r\n   */\r\n  MOVESTART: 'movestart',\r\n\r\n  /**\r\n   * Triggered after the map is moved.\r\n   * @event module:ol/MapEvent~MapEvent#moveend\r\n   * @api\r\n   */\r\n  MOVEEND: 'moveend',\r\n\r\n  /**\r\n   * Triggered when loading of additional map data (tiles, images, features) starts.\r\n   * @event module:ol/MapEvent~MapEvent#loadstart\r\n   * @api\r\n   */\r\n  LOADSTART: 'loadstart',\r\n\r\n  /**\r\n   * Triggered when loading of additional map data has completed.\r\n   * @event module:ol/MapEvent~MapEvent#loadend\r\n   * @api\r\n   */\r\n  LOADEND: 'loadend',\r\n};\r\n\r\n/***\r\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\r\n */\r\n","/**\r\n * @module ol/MapProperty\r\n */\r\n\r\n/**\r\n * @enum {string}\r\n */\r\nexport default {\r\n  LAYERGROUP: 'layergroup',\r\n  SIZE: 'size',\r\n  TARGET: 'target',\r\n  VIEW: 'view',\r\n};\r\n","/**\r\n * @module ol/structs/PriorityQueue\r\n */\r\nimport {assert} from '../asserts.js';\r\nimport {clear} from '../obj.js';\r\n\r\n/**\r\n * @type {number}\r\n */\r\nexport const DROP = Infinity;\r\n\r\n/**\r\n * @classdesc\r\n * Priority queue.\r\n *\r\n * The implementation is inspired from the Closure Library's Heap class and\r\n * Python's heapq module.\r\n *\r\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\r\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\r\n *\r\n * @template T\r\n */\r\nclass PriorityQueue {\r\n  /**\r\n   * @param {function(T): number} priorityFunction Priority function.\r\n   * @param {function(T): string} keyFunction Key function.\r\n   */\r\n  constructor(priorityFunction, keyFunction) {\r\n    /**\r\n     * @type {function(T): number}\r\n     * @private\r\n     */\r\n    this.priorityFunction_ = priorityFunction;\r\n\r\n    /**\r\n     * @type {function(T): string}\r\n     * @private\r\n     */\r\n    this.keyFunction_ = keyFunction;\r\n\r\n    /**\r\n     * @type {Array<T>}\r\n     * @private\r\n     */\r\n    this.elements_ = [];\r\n\r\n    /**\r\n     * @type {Array<number>}\r\n     * @private\r\n     */\r\n    this.priorities_ = [];\r\n\r\n    /**\r\n     * @type {!Object<string, boolean>}\r\n     * @private\r\n     */\r\n    this.queuedElements_ = {};\r\n  }\r\n\r\n  /**\r\n   * FIXME empty description for jsdoc\r\n   */\r\n  clear() {\r\n    this.elements_.length = 0;\r\n    this.priorities_.length = 0;\r\n    clear(this.queuedElements_);\r\n  }\r\n\r\n  /**\r\n   * Remove and return the highest-priority element. O(log N).\r\n   * @return {T} Element.\r\n   */\r\n  dequeue() {\r\n    const elements = this.elements_;\r\n    const priorities = this.priorities_;\r\n    const element = elements[0];\r\n    if (elements.length == 1) {\r\n      elements.length = 0;\r\n      priorities.length = 0;\r\n    } else {\r\n      elements[0] = elements.pop();\r\n      priorities[0] = priorities.pop();\r\n      this.siftUp_(0);\r\n    }\r\n    const elementKey = this.keyFunction_(element);\r\n    delete this.queuedElements_[elementKey];\r\n    return element;\r\n  }\r\n\r\n  /**\r\n   * Enqueue an element. O(log N).\r\n   * @param {T} element Element.\r\n   * @return {boolean} The element was added to the queue.\r\n   */\r\n  enqueue(element) {\r\n    assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\r\n    const priority = this.priorityFunction_(element);\r\n    if (priority != DROP) {\r\n      this.elements_.push(element);\r\n      this.priorities_.push(priority);\r\n      this.queuedElements_[this.keyFunction_(element)] = true;\r\n      this.siftDown_(0, this.elements_.length - 1);\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * @return {number} Count.\r\n   */\r\n  getCount() {\r\n    return this.elements_.length;\r\n  }\r\n\r\n  /**\r\n   * Gets the index of the left child of the node at the given index.\r\n   * @param {number} index The index of the node to get the left child for.\r\n   * @return {number} The index of the left child.\r\n   * @private\r\n   */\r\n  getLeftChildIndex_(index) {\r\n    return index * 2 + 1;\r\n  }\r\n\r\n  /**\r\n   * Gets the index of the right child of the node at the given index.\r\n   * @param {number} index The index of the node to get the right child for.\r\n   * @return {number} The index of the right child.\r\n   * @private\r\n   */\r\n  getRightChildIndex_(index) {\r\n    return index * 2 + 2;\r\n  }\r\n\r\n  /**\r\n   * Gets the index of the parent of the node at the given index.\r\n   * @param {number} index The index of the node to get the parent for.\r\n   * @return {number} The index of the parent.\r\n   * @private\r\n   */\r\n  getParentIndex_(index) {\r\n    return (index - 1) >> 1;\r\n  }\r\n\r\n  /**\r\n   * Make this a heap. O(N).\r\n   * @private\r\n   */\r\n  heapify_() {\r\n    let i;\r\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\r\n      this.siftUp_(i);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @return {boolean} Is empty.\r\n   */\r\n  isEmpty() {\r\n    return this.elements_.length === 0;\r\n  }\r\n\r\n  /**\r\n   * @param {string} key Key.\r\n   * @return {boolean} Is key queued.\r\n   */\r\n  isKeyQueued(key) {\r\n    return key in this.queuedElements_;\r\n  }\r\n\r\n  /**\r\n   * @param {T} element Element.\r\n   * @return {boolean} Is queued.\r\n   */\r\n  isQueued(element) {\r\n    return this.isKeyQueued(this.keyFunction_(element));\r\n  }\r\n\r\n  /**\r\n   * @param {number} index The index of the node to move down.\r\n   * @private\r\n   */\r\n  siftUp_(index) {\r\n    const elements = this.elements_;\r\n    const priorities = this.priorities_;\r\n    const count = elements.length;\r\n    const element = elements[index];\r\n    const priority = priorities[index];\r\n    const startIndex = index;\r\n\r\n    while (index < count >> 1) {\r\n      const lIndex = this.getLeftChildIndex_(index);\r\n      const rIndex = this.getRightChildIndex_(index);\r\n\r\n      const smallerChildIndex =\r\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\r\n          ? rIndex\r\n          : lIndex;\r\n\r\n      elements[index] = elements[smallerChildIndex];\r\n      priorities[index] = priorities[smallerChildIndex];\r\n      index = smallerChildIndex;\r\n    }\r\n\r\n    elements[index] = element;\r\n    priorities[index] = priority;\r\n    this.siftDown_(startIndex, index);\r\n  }\r\n\r\n  /**\r\n   * @param {number} startIndex The index of the root.\r\n   * @param {number} index The index of the node to move up.\r\n   * @private\r\n   */\r\n  siftDown_(startIndex, index) {\r\n    const elements = this.elements_;\r\n    const priorities = this.priorities_;\r\n    const element = elements[index];\r\n    const priority = priorities[index];\r\n\r\n    while (index > startIndex) {\r\n      const parentIndex = this.getParentIndex_(index);\r\n      if (priorities[parentIndex] > priority) {\r\n        elements[index] = elements[parentIndex];\r\n        priorities[index] = priorities[parentIndex];\r\n        index = parentIndex;\r\n      } else {\r\n        break;\r\n      }\r\n    }\r\n    elements[index] = element;\r\n    priorities[index] = priority;\r\n  }\r\n\r\n  /**\r\n   * FIXME empty description for jsdoc\r\n   */\r\n  reprioritize() {\r\n    const priorityFunction = this.priorityFunction_;\r\n    const elements = this.elements_;\r\n    const priorities = this.priorities_;\r\n    let index = 0;\r\n    const n = elements.length;\r\n    let element, i, priority;\r\n    for (i = 0; i < n; ++i) {\r\n      element = elements[i];\r\n      priority = priorityFunction(element);\r\n      if (priority == DROP) {\r\n        delete this.queuedElements_[this.keyFunction_(element)];\r\n      } else {\r\n        priorities[index] = priority;\r\n        elements[index++] = element;\r\n      }\r\n    }\r\n    elements.length = index;\r\n    priorities.length = index;\r\n    this.heapify_();\r\n  }\r\n}\r\n\r\nexport default PriorityQueue;\r\n","/**\r\n * @module ol/TileState\r\n */\r\n\r\n/**\r\n * @enum {number}\r\n */\r\nexport default {\r\n  IDLE: 0,\r\n  LOADING: 1,\r\n  LOADED: 2,\r\n  /**\r\n   * Indicates that tile loading failed\r\n   * @type {number}\r\n   */\r\n  ERROR: 3,\r\n  EMPTY: 4,\r\n};\r\n","/**\r\n * @module ol/TileQueue\r\n */\r\nimport EventType from './events/EventType.js';\r\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\r\nimport TileState from './TileState.js';\r\n\r\n/**\r\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\r\n */\r\n\r\nclass TileQueue extends PriorityQueue {\r\n  /**\r\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\r\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\r\n   */\r\n  constructor(tilePriorityFunction, tileChangeCallback) {\r\n    super(\r\n      /**\r\n       * @param {Array} element Element.\r\n       * @return {number} Priority.\r\n       */\r\n      function (element) {\r\n        return tilePriorityFunction.apply(null, element);\r\n      },\r\n      /**\r\n       * @param {Array} element Element.\r\n       * @return {string} Key.\r\n       */\r\n      function (element) {\r\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\r\n      }\r\n    );\r\n\r\n    /** @private */\r\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\r\n\r\n    /**\r\n     * @private\r\n     * @type {function(): ?}\r\n     */\r\n    this.tileChangeCallback_ = tileChangeCallback;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.tilesLoading_ = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {!Object<string,boolean>}\r\n     */\r\n    this.tilesLoadingKeys_ = {};\r\n  }\r\n\r\n  /**\r\n   * @param {Array} element Element.\r\n   * @return {boolean} The element was added to the queue.\r\n   */\r\n  enqueue(element) {\r\n    const added = super.enqueue(element);\r\n    if (added) {\r\n      const tile = element[0];\r\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\r\n    }\r\n    return added;\r\n  }\r\n\r\n  /**\r\n   * @return {number} Number of tiles loading.\r\n   */\r\n  getTilesLoading() {\r\n    return this.tilesLoading_;\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"./events/Event.js\").default} event Event.\r\n   * @protected\r\n   */\r\n  handleTileChange(event) {\r\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\r\n    const state = tile.getState();\r\n    if (\r\n      state === TileState.LOADED ||\r\n      state === TileState.ERROR ||\r\n      state === TileState.EMPTY\r\n    ) {\r\n      if (state !== TileState.ERROR) {\r\n        tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\r\n      }\r\n      const tileKey = tile.getKey();\r\n      if (tileKey in this.tilesLoadingKeys_) {\r\n        delete this.tilesLoadingKeys_[tileKey];\r\n        --this.tilesLoading_;\r\n      }\r\n      this.tileChangeCallback_();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\r\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\r\n   */\r\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\r\n    let newLoads = 0;\r\n    let state, tile, tileKey;\r\n    while (\r\n      this.tilesLoading_ < maxTotalLoading &&\r\n      newLoads < maxNewLoads &&\r\n      this.getCount() > 0\r\n    ) {\r\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\r\n      tileKey = tile.getKey();\r\n      state = tile.getState();\r\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\r\n        this.tilesLoadingKeys_[tileKey] = true;\r\n        ++this.tilesLoading_;\r\n        ++newLoads;\r\n        tile.load();\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default TileQueue;\r\n\r\n/**\r\n * @param {import('./Map.js').FrameState} frameState Frame state.\r\n * @param {import(\"./Tile.js\").default} tile Tile.\r\n * @param {string} tileSourceKey Tile source key.\r\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\r\n * @param {number} tileResolution Tile resolution.\r\n * @return {number} Tile priority.\r\n */\r\nexport function getTilePriority(\r\n  frameState,\r\n  tile,\r\n  tileSourceKey,\r\n  tileCenter,\r\n  tileResolution\r\n) {\r\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\r\n  // are outside the visible extent.\r\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\r\n    return DROP;\r\n  }\r\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\r\n    return DROP;\r\n  }\r\n  // Prioritize the highest zoom level tiles closest to the focus.\r\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\r\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\r\n  // the center of the tile and the center of the viewport.  The factor of 65536\r\n  // means that the prioritization should behave as desired for tiles up to\r\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\r\n  const center = frameState.viewState.center;\r\n  const deltaX = tileCenter[0] - center[0];\r\n  const deltaY = tileCenter[1] - center[1];\r\n  return (\r\n    65536 * Math.log(tileResolution) +\r\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\r\n  );\r\n}\r\n","/**\r\n * @module ol/ViewHint\r\n */\r\n\r\n/**\r\n * @enum {number}\r\n */\r\nexport default {\r\n  ANIMATING: 0,\r\n  INTERACTING: 1,\r\n};\r\n","/**\r\n * @module ol/ViewProperty\r\n */\r\n\r\n/**\r\n * @enum {string}\r\n */\r\nexport default {\r\n  CENTER: 'center',\r\n  RESOLUTION: 'resolution',\r\n  ROTATION: 'rotation',\r\n};\r\n","/**\r\n * @module ol/tilegrid/common\r\n */\r\n\r\n/**\r\n * Default maximum zoom for default tile grids.\r\n * @type {number}\r\n */\r\nexport const DEFAULT_MAX_ZOOM = 42;\r\n\r\n/**\r\n * Default tile size.\r\n * @type {number}\r\n */\r\nexport const DEFAULT_TILE_SIZE = 256;\r\n","/**\r\n * @module ol/proj/Units\r\n */\r\n\r\n/**\r\n * @typedef {'radians' | 'degrees' | 'ft' | 'm' | 'pixels' | 'tile-pixels' | 'us-ft'} Units\r\n * Projection units.\r\n */\r\n\r\n/**\r\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\r\n * @type {Object<number, Units>}\r\n */\r\nconst unitByCode = {\r\n  '9001': 'm',\r\n  '9002': 'ft',\r\n  '9003': 'us-ft',\r\n  '9101': 'radians',\r\n  '9102': 'degrees',\r\n};\r\n\r\n/**\r\n * @param {number} code Unit code.\r\n * @return {Units} Units.\r\n */\r\nexport function fromCode(code) {\r\n  return unitByCode[code];\r\n}\r\n\r\n/**\r\n * @typedef {Object} MetersPerUnitLookup\r\n * @property {number} radians Radians\r\n * @property {number} degrees Degrees\r\n * @property {number} ft  Feet\r\n * @property {number} m Meters\r\n * @property {number} us-ft US feet\r\n */\r\n\r\n/**\r\n * Meters per unit lookup table.\r\n * @const\r\n * @type {MetersPerUnitLookup}\r\n * @api\r\n */\r\nexport const METERS_PER_UNIT = {\r\n  // use the radius of the Normal sphere\r\n  'radians': 6370997 / (2 * Math.PI),\r\n  'degrees': (2 * Math.PI * 6370997) / 360,\r\n  'ft': 0.3048,\r\n  'm': 1,\r\n  'us-ft': 1200 / 3937,\r\n};\r\n","/**\r\n * @module ol/proj/Projection\r\n */\r\nimport {METERS_PER_UNIT} from './Units.js';\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\r\n * @property {import(\"./Units.js\").Units} [units] Units. Required unless a\r\n * proj4 projection is defined for `code`.\r\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\r\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\r\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\r\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\r\n * If not provided, the `units` are used to get the meters per unit from the {@link METERS_PER_UNIT}\r\n * lookup table.\r\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\r\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\r\n * Function to determine resolution at a point. The function is called with a\r\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate} as arguments, and returns\r\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\r\n * the default {@link module:ol/proj.getPointResolution} function will be used.\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Projection definition class. One of these is created for each projection\r\n * supported in the application and stored in the {@link module:ol/proj} namespace.\r\n * You can use these in applications, but this is not required, as API params\r\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\r\n * code will suffice.\r\n *\r\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\r\n * projection.\r\n *\r\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\r\n * with the following aliases:\r\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\r\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\r\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\r\n *     urn:x-ogc:def:crs:EPSG:4326\r\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\r\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\r\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\r\n *\r\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\r\n * be added using `proj4.defs()`. After all required projection definitions are\r\n * added, call the {@link module:ol/proj/proj4.register} function.\r\n *\r\n * @api\r\n */\r\nclass Projection {\r\n  /**\r\n   * @param {Options} options Projection options.\r\n   */\r\n  constructor(options) {\r\n    /**\r\n     * @private\r\n     * @type {string}\r\n     */\r\n    this.code_ = options.code;\r\n\r\n    /**\r\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\r\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\r\n     * tile.\r\n     * @private\r\n     * @type {import(\"./Units.js\").Units}\r\n     */\r\n    this.units_ = /** @type {import(\"./Units.js\").Units} */ (options.units);\r\n\r\n    /**\r\n     * Validity extent of the projection in projected coordinates. For projections\r\n     * with `TILE_PIXELS` units, this is the extent of the tile in\r\n     * tile pixel space.\r\n     * @private\r\n     * @type {import(\"../extent.js\").Extent}\r\n     */\r\n    this.extent_ = options.extent !== undefined ? options.extent : null;\r\n\r\n    /**\r\n     * Extent of the world in EPSG:4326. For projections with\r\n     * `TILE_PIXELS` units, this is the extent of the tile in\r\n     * projected coordinate space.\r\n     * @private\r\n     * @type {import(\"../extent.js\").Extent}\r\n     */\r\n    this.worldExtent_ =\r\n      options.worldExtent !== undefined ? options.worldExtent : null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {string}\r\n     */\r\n    this.axisOrientation_ =\r\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.global_ = options.global !== undefined ? options.global : false;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.canWrapX_ = !!(this.global_ && this.extent_);\r\n\r\n    /**\r\n     * @private\r\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\r\n     */\r\n    this.getPointResolutionFunc_ = options.getPointResolution;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\r\n     */\r\n    this.defaultTileGrid_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.metersPerUnit_ = options.metersPerUnit;\r\n  }\r\n\r\n  /**\r\n   * @return {boolean} The projection is suitable for wrapping the x-axis\r\n   */\r\n  canWrapX() {\r\n    return this.canWrapX_;\r\n  }\r\n\r\n  /**\r\n   * Get the code for this projection, e.g. 'EPSG:4326'.\r\n   * @return {string} Code.\r\n   * @api\r\n   */\r\n  getCode() {\r\n    return this.code_;\r\n  }\r\n\r\n  /**\r\n   * Get the validity extent for this projection.\r\n   * @return {import(\"../extent.js\").Extent} Extent.\r\n   * @api\r\n   */\r\n  getExtent() {\r\n    return this.extent_;\r\n  }\r\n\r\n  /**\r\n   * Get the units of this projection.\r\n   * @return {import(\"./Units.js\").Units} Units.\r\n   * @api\r\n   */\r\n  getUnits() {\r\n    return this.units_;\r\n  }\r\n\r\n  /**\r\n   * Get the amount of meters per unit of this projection.  If the projection is\r\n   * not configured with `metersPerUnit` or a units identifier, the return is\r\n   * `undefined`.\r\n   * @return {number|undefined} Meters.\r\n   * @api\r\n   */\r\n  getMetersPerUnit() {\r\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\r\n  }\r\n\r\n  /**\r\n   * Get the world extent for this projection.\r\n   * @return {import(\"../extent.js\").Extent} Extent.\r\n   * @api\r\n   */\r\n  getWorldExtent() {\r\n    return this.worldExtent_;\r\n  }\r\n\r\n  /**\r\n   * Get the axis orientation of this projection.\r\n   * Example values are:\r\n   * enu - the default easting, northing, elevation.\r\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\r\n   *     or south orientated transverse mercator.\r\n   * wnu - westing, northing, up - some planetary coordinate systems have\r\n   *     \"west positive\" coordinate systems\r\n   * @return {string} Axis orientation.\r\n   * @api\r\n   */\r\n  getAxisOrientation() {\r\n    return this.axisOrientation_;\r\n  }\r\n\r\n  /**\r\n   * Is this projection a global projection which spans the whole world?\r\n   * @return {boolean} Whether the projection is global.\r\n   * @api\r\n   */\r\n  isGlobal() {\r\n    return this.global_;\r\n  }\r\n\r\n  /**\r\n   * Set if the projection is a global projection which spans the whole world\r\n   * @param {boolean} global Whether the projection is global.\r\n   * @api\r\n   */\r\n  setGlobal(global) {\r\n    this.global_ = global;\r\n    this.canWrapX_ = !!(global && this.extent_);\r\n  }\r\n\r\n  /**\r\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\r\n   */\r\n  getDefaultTileGrid() {\r\n    return this.defaultTileGrid_;\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\r\n   */\r\n  setDefaultTileGrid(tileGrid) {\r\n    this.defaultTileGrid_ = tileGrid;\r\n  }\r\n\r\n  /**\r\n   * Set the validity extent for this projection.\r\n   * @param {import(\"../extent.js\").Extent} extent Extent.\r\n   * @api\r\n   */\r\n  setExtent(extent) {\r\n    this.extent_ = extent;\r\n    this.canWrapX_ = !!(this.global_ && extent);\r\n  }\r\n\r\n  /**\r\n   * Set the world extent for this projection.\r\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\r\n   *     [minlon, minlat, maxlon, maxlat].\r\n   * @api\r\n   */\r\n  setWorldExtent(worldExtent) {\r\n    this.worldExtent_ = worldExtent;\r\n  }\r\n\r\n  /**\r\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\r\n   * for this projection.\r\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\r\n   * @api\r\n   */\r\n  setGetPointResolution(func) {\r\n    this.getPointResolutionFunc_ = func;\r\n  }\r\n\r\n  /**\r\n   * Get the custom point resolution function for this projection (if set).\r\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\r\n   * resolution function (if set).\r\n   */\r\n  getPointResolutionFunc() {\r\n    return this.getPointResolutionFunc_;\r\n  }\r\n}\r\n\r\nexport default Projection;\r\n","/**\r\n * @module ol/proj/epsg3857\r\n */\r\nimport Projection from './Projection.js';\r\n\r\n/**\r\n * Radius of WGS84 sphere\r\n *\r\n * @const\r\n * @type {number}\r\n */\r\nexport const RADIUS = 6378137;\r\n\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport const HALF_SIZE = Math.PI * RADIUS;\r\n\r\n/**\r\n * @const\r\n * @type {import(\"../extent.js\").Extent}\r\n */\r\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\r\n\r\n/**\r\n * @const\r\n * @type {import(\"../extent.js\").Extent}\r\n */\r\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\r\n\r\n/**\r\n * Maximum safe value in y direction\r\n * @const\r\n * @type {number}\r\n */\r\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\r\n\r\n/**\r\n * @classdesc\r\n * Projection object for web/spherical Mercator (EPSG:3857).\r\n */\r\nclass EPSG3857Projection extends Projection {\r\n  /**\r\n   * @param {string} code Code.\r\n   */\r\n  constructor(code) {\r\n    super({\r\n      code: code,\r\n      units: 'm',\r\n      extent: EXTENT,\r\n      global: true,\r\n      worldExtent: WORLD_EXTENT,\r\n      getPointResolution: function (resolution, point) {\r\n        return resolution / Math.cosh(point[1] / RADIUS);\r\n      },\r\n    });\r\n  }\r\n}\r\n\r\n/**\r\n * Projections equal to EPSG:3857.\r\n *\r\n * @const\r\n * @type {Array<import(\"./Projection.js\").default>}\r\n */\r\nexport const PROJECTIONS = [\r\n  new EPSG3857Projection('EPSG:3857'),\r\n  new EPSG3857Projection('EPSG:102100'),\r\n  new EPSG3857Projection('EPSG:102113'),\r\n  new EPSG3857Projection('EPSG:900913'),\r\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\r\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\r\n];\r\n\r\n/**\r\n * Transformation from EPSG:4326 to EPSG:3857.\r\n *\r\n * @param {Array<number>} input Input array of coordinate values.\r\n * @param {Array<number>} [output] Output array of coordinate values.\r\n * @param {number} [dimension] Dimension (default is `2`).\r\n * @return {Array<number>} Output array of coordinate values.\r\n */\r\nexport function fromEPSG4326(input, output, dimension) {\r\n  const length = input.length;\r\n  dimension = dimension > 1 ? dimension : 2;\r\n  if (output === undefined) {\r\n    if (dimension > 2) {\r\n      // preserve values beyond second dimension\r\n      output = input.slice();\r\n    } else {\r\n      output = new Array(length);\r\n    }\r\n  }\r\n  for (let i = 0; i < length; i += dimension) {\r\n    output[i] = (HALF_SIZE * input[i]) / 180;\r\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\r\n    if (y > MAX_SAFE_Y) {\r\n      y = MAX_SAFE_Y;\r\n    } else if (y < -MAX_SAFE_Y) {\r\n      y = -MAX_SAFE_Y;\r\n    }\r\n    output[i + 1] = y;\r\n  }\r\n  return output;\r\n}\r\n\r\n/**\r\n * Transformation from EPSG:3857 to EPSG:4326.\r\n *\r\n * @param {Array<number>} input Input array of coordinate values.\r\n * @param {Array<number>} [output] Output array of coordinate values.\r\n * @param {number} [dimension] Dimension (default is `2`).\r\n * @return {Array<number>} Output array of coordinate values.\r\n */\r\nexport function toEPSG4326(input, output, dimension) {\r\n  const length = input.length;\r\n  dimension = dimension > 1 ? dimension : 2;\r\n  if (output === undefined) {\r\n    if (dimension > 2) {\r\n      // preserve values beyond second dimension\r\n      output = input.slice();\r\n    } else {\r\n      output = new Array(length);\r\n    }\r\n  }\r\n  for (let i = 0; i < length; i += dimension) {\r\n    output[i] = (180 * input[i]) / HALF_SIZE;\r\n    output[i + 1] =\r\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\r\n  }\r\n  return output;\r\n}\r\n","/**\r\n * @module ol/proj/epsg4326\r\n */\r\nimport Projection from './Projection.js';\r\n\r\n/**\r\n * Semi-major radius of the WGS84 ellipsoid.\r\n *\r\n * @const\r\n * @type {number}\r\n */\r\nexport const RADIUS = 6378137;\r\n\r\n/**\r\n * Extent of the EPSG:4326 projection which is the whole world.\r\n *\r\n * @const\r\n * @type {import(\"../extent.js\").Extent}\r\n */\r\nexport const EXTENT = [-180, -90, 180, 90];\r\n\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\r\n\r\n/**\r\n * @classdesc\r\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\r\n *\r\n * Note that OpenLayers does not strictly comply with the EPSG definition.\r\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\r\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\r\n */\r\nclass EPSG4326Projection extends Projection {\r\n  /**\r\n   * @param {string} code Code.\r\n   * @param {string} [axisOrientation] Axis orientation.\r\n   */\r\n  constructor(code, axisOrientation) {\r\n    super({\r\n      code: code,\r\n      units: 'degrees',\r\n      extent: EXTENT,\r\n      axisOrientation: axisOrientation,\r\n      global: true,\r\n      metersPerUnit: METERS_PER_UNIT,\r\n      worldExtent: EXTENT,\r\n    });\r\n  }\r\n}\r\n\r\n/**\r\n * Projections equal to EPSG:4326.\r\n *\r\n * @const\r\n * @type {Array<import(\"./Projection.js\").default>}\r\n */\r\nexport const PROJECTIONS = [\r\n  new EPSG4326Projection('CRS:84'),\r\n  new EPSG4326Projection('EPSG:4326', 'neu'),\r\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\r\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\r\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\r\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\r\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\r\n];\r\n","/**\r\n * @module ol/proj/projections\r\n */\r\n\r\n/**\r\n * @type {Object<string, import(\"./Projection.js\").default>}\r\n */\r\nlet cache = {};\r\n\r\n/**\r\n * Clear the projections cache.\r\n */\r\nexport function clear() {\r\n  cache = {};\r\n}\r\n\r\n/**\r\n * Get a cached projection by code.\r\n * @param {string} code The code for the projection.\r\n * @return {import(\"./Projection.js\").default} The projection (if cached).\r\n */\r\nexport function get(code) {\r\n  return (\r\n    cache[code] ||\r\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\r\n    null\r\n  );\r\n}\r\n\r\n/**\r\n * Add a projection to the cache.\r\n * @param {string} code The projection code.\r\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\r\n */\r\nexport function add(code, projection) {\r\n  cache[code] = projection;\r\n}\r\n","/**\r\n * @module ol/proj/transforms\r\n */\r\nimport {isEmpty} from '../obj.js';\r\n\r\n/**\r\n * @private\r\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\r\n */\r\nlet transforms = {};\r\n\r\n/**\r\n * Clear the transform cache.\r\n */\r\nexport function clear() {\r\n  transforms = {};\r\n}\r\n\r\n/**\r\n * Registers a conversion function to convert coordinates from the source\r\n * projection to the destination projection.\r\n *\r\n * @param {import(\"./Projection.js\").default} source Source.\r\n * @param {import(\"./Projection.js\").default} destination Destination.\r\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\r\n */\r\nexport function add(source, destination, transformFn) {\r\n  const sourceCode = source.getCode();\r\n  const destinationCode = destination.getCode();\r\n  if (!(sourceCode in transforms)) {\r\n    transforms[sourceCode] = {};\r\n  }\r\n  transforms[sourceCode][destinationCode] = transformFn;\r\n}\r\n\r\n/**\r\n * Unregisters the conversion function to convert coordinates from the source\r\n * projection to the destination projection.  This method is used to clean up\r\n * cached transforms during testing.\r\n *\r\n * @param {import(\"./Projection.js\").default} source Source projection.\r\n * @param {import(\"./Projection.js\").default} destination Destination projection.\r\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\r\n */\r\nexport function remove(source, destination) {\r\n  const sourceCode = source.getCode();\r\n  const destinationCode = destination.getCode();\r\n  const transform = transforms[sourceCode][destinationCode];\r\n  delete transforms[sourceCode][destinationCode];\r\n  if (isEmpty(transforms[sourceCode])) {\r\n    delete transforms[sourceCode];\r\n  }\r\n  return transform;\r\n}\r\n\r\n/**\r\n * Get a transform given a source code and a destination code.\r\n * @param {string} sourceCode The code for the source projection.\r\n * @param {string} destinationCode The code for the destination projection.\r\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\r\n */\r\nexport function get(sourceCode, destinationCode) {\r\n  let transform;\r\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\r\n    transform = transforms[sourceCode][destinationCode];\r\n  }\r\n  return transform;\r\n}\r\n","/**\r\n * @module ol/sphere\r\n */\r\nimport {toDegrees, toRadians} from './math.js';\r\n\r\n/**\r\n * Object literal with options for the {@link getLength} or {@link getArea}\r\n * functions.\r\n * @typedef {Object} SphereMetricOptions\r\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\r\n * Projection of the  geometry.  By default, the geometry is assumed to be in\r\n * Web Mercator.\r\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\r\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\r\n * for the WGS84 ellipsoid is used.\r\n */\r\n\r\n/**\r\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\r\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\r\n * @type {number}\r\n */\r\nexport const DEFAULT_RADIUS = 6371008.8;\r\n\r\n/**\r\n * Get the great circle distance (in meters) between two geographic coordinates.\r\n * @param {Array} c1 Starting coordinate.\r\n * @param {Array} c2 Ending coordinate.\r\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\r\n *     mean radius using the WGS84 ellipsoid.\r\n * @return {number} The great circle distance between the points (in meters).\r\n * @api\r\n */\r\nexport function getDistance(c1, c2, radius) {\r\n  radius = radius || DEFAULT_RADIUS;\r\n  const lat1 = toRadians(c1[1]);\r\n  const lat2 = toRadians(c2[1]);\r\n  const deltaLatBy2 = (lat2 - lat1) / 2;\r\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\r\n  const a =\r\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\r\n    Math.sin(deltaLonBy2) *\r\n      Math.sin(deltaLonBy2) *\r\n      Math.cos(lat1) *\r\n      Math.cos(lat2);\r\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\r\n}\r\n\r\n/**\r\n * Get the cumulative great circle length of linestring coordinates (geographic).\r\n * @param {Array} coordinates Linestring coordinates.\r\n * @param {number} radius The sphere radius to use.\r\n * @return {number} The length (in meters).\r\n */\r\nfunction getLengthInternal(coordinates, radius) {\r\n  let length = 0;\r\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\r\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\r\n  }\r\n  return length;\r\n}\r\n\r\n/**\r\n * Get the spherical length of a geometry.  This length is the sum of the\r\n * great circle distances between coordinates.  For polygons, the length is\r\n * the sum of all rings.  For points, the length is zero.  For multi-part\r\n * geometries, the length is the sum of the length of each part.\r\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\r\n * @param {SphereMetricOptions} [options] Options for the\r\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\r\n * You can change this by providing a `projection` option.\r\n * @return {number} The spherical length (in meters).\r\n * @api\r\n */\r\nexport function getLength(geometry, options) {\r\n  options = options || {};\r\n  const radius = options.radius || DEFAULT_RADIUS;\r\n  const projection = options.projection || 'EPSG:3857';\r\n  const type = geometry.getType();\r\n  if (type !== 'GeometryCollection') {\r\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\r\n  }\r\n  let length = 0;\r\n  let coordinates, coords, i, ii, j, jj;\r\n  switch (type) {\r\n    case 'Point':\r\n    case 'MultiPoint': {\r\n      break;\r\n    }\r\n    case 'LineString':\r\n    case 'LinearRing': {\r\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\r\n        geometry\r\n      ).getCoordinates();\r\n      length = getLengthInternal(coordinates, radius);\r\n      break;\r\n    }\r\n    case 'MultiLineString':\r\n    case 'Polygon': {\r\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\r\n        geometry\r\n      ).getCoordinates();\r\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\r\n        length += getLengthInternal(coordinates[i], radius);\r\n      }\r\n      break;\r\n    }\r\n    case 'MultiPolygon': {\r\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\r\n        geometry\r\n      ).getCoordinates();\r\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\r\n        coords = coordinates[i];\r\n        for (j = 0, jj = coords.length; j < jj; ++j) {\r\n          length += getLengthInternal(coords[j], radius);\r\n        }\r\n      }\r\n      break;\r\n    }\r\n    case 'GeometryCollection': {\r\n      const geometries =\r\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\r\n          geometry\r\n        ).getGeometries();\r\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\r\n        length += getLength(geometries[i], options);\r\n      }\r\n      break;\r\n    }\r\n    default: {\r\n      throw new Error('Unsupported geometry type: ' + type);\r\n    }\r\n  }\r\n  return length;\r\n}\r\n\r\n/**\r\n * Returns the spherical area for a list of coordinates.\r\n *\r\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\r\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\r\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\r\n * Laboratory, Pasadena, CA, June 2007\r\n *\r\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\r\n * ring. If the ring is oriented clockwise, the area will be positive,\r\n * otherwise it will be negative.\r\n * @param {number} radius The sphere radius.\r\n * @return {number} Area (in square meters).\r\n */\r\nfunction getAreaInternal(coordinates, radius) {\r\n  let area = 0;\r\n  const len = coordinates.length;\r\n  let x1 = coordinates[len - 1][0];\r\n  let y1 = coordinates[len - 1][1];\r\n  for (let i = 0; i < len; i++) {\r\n    const x2 = coordinates[i][0];\r\n    const y2 = coordinates[i][1];\r\n    area +=\r\n      toRadians(x2 - x1) *\r\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\r\n    x1 = x2;\r\n    y1 = y2;\r\n  }\r\n  return (area * radius * radius) / 2.0;\r\n}\r\n\r\n/**\r\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\r\n * that polygon edges are segments of great circles on a sphere.\r\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\r\n * @param {SphereMetricOptions} [options] Options for the area\r\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\r\n *     You can change this by providing a `projection` option.\r\n * @return {number} The spherical area (in square meters).\r\n * @api\r\n */\r\nexport function getArea(geometry, options) {\r\n  options = options || {};\r\n  const radius = options.radius || DEFAULT_RADIUS;\r\n  const projection = options.projection || 'EPSG:3857';\r\n  const type = geometry.getType();\r\n  if (type !== 'GeometryCollection') {\r\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\r\n  }\r\n  let area = 0;\r\n  let coordinates, coords, i, ii, j, jj;\r\n  switch (type) {\r\n    case 'Point':\r\n    case 'MultiPoint':\r\n    case 'LineString':\r\n    case 'MultiLineString':\r\n    case 'LinearRing': {\r\n      break;\r\n    }\r\n    case 'Polygon': {\r\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\r\n        geometry\r\n      ).getCoordinates();\r\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\r\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\r\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\r\n      }\r\n      break;\r\n    }\r\n    case 'MultiPolygon': {\r\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\r\n        geometry\r\n      ).getCoordinates();\r\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\r\n        coords = coordinates[i];\r\n        area += Math.abs(getAreaInternal(coords[0], radius));\r\n        for (j = 1, jj = coords.length; j < jj; ++j) {\r\n          area -= Math.abs(getAreaInternal(coords[j], radius));\r\n        }\r\n      }\r\n      break;\r\n    }\r\n    case 'GeometryCollection': {\r\n      const geometries =\r\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\r\n          geometry\r\n        ).getGeometries();\r\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\r\n        area += getArea(geometries[i], options);\r\n      }\r\n      break;\r\n    }\r\n    default: {\r\n      throw new Error('Unsupported geometry type: ' + type);\r\n    }\r\n  }\r\n  return area;\r\n}\r\n\r\n/**\r\n * Returns the coordinate at the given distance and bearing from `c1`.\r\n *\r\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\r\n * @param {number} distance The great-circle distance between the origin\r\n *     point and the target point.\r\n * @param {number} bearing The bearing (in radians).\r\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\r\n *     mean radius using the WGS84 ellipsoid.\r\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\r\n */\r\nexport function offset(c1, distance, bearing, radius) {\r\n  radius = radius || DEFAULT_RADIUS;\r\n  const lat1 = toRadians(c1[1]);\r\n  const lon1 = toRadians(c1[0]);\r\n  const dByR = distance / radius;\r\n  const lat = Math.asin(\r\n    Math.sin(lat1) * Math.cos(dByR) +\r\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\r\n  );\r\n  const lon =\r\n    lon1 +\r\n    Math.atan2(\r\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\r\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\r\n    );\r\n  return [toDegrees(lon), toDegrees(lat)];\r\n}\r\n","/**\r\n * @module ol/proj\r\n */\r\n\r\n/**\r\n * The ol/proj module stores:\r\n * * a list of {@link module:ol/proj/Projection~Projection}\r\n * objects, one for each projection supported by the application\r\n * * a list of transform functions needed to convert coordinates in one projection\r\n * into another.\r\n *\r\n * The static functions are the methods used to maintain these.\r\n * Each transform function can handle not only simple coordinate pairs, but also\r\n * large arrays of coordinates such as vector geometries.\r\n *\r\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\r\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\r\n * for example by Bing Maps or OpenStreetMap), together with the relevant\r\n * transform functions.\r\n *\r\n * Additional transforms may be added by using the http://proj4js.org/\r\n * library (version 2.2 or later). You can use the full build supplied by\r\n * Proj4js, or create a custom build to support those projections you need; see\r\n * the Proj4js website for how to do this. You also need the Proj4js definitions\r\n * for the required projections. These definitions can be obtained from\r\n * https://epsg.io/, and are a JS function, so can be loaded in a script\r\n * tag (as in the examples) or pasted into your application.\r\n *\r\n * After all required projection definitions are added to proj4's registry (by\r\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\r\n * package. Existing transforms are not changed by this function. See\r\n * examples/wms-image-custom-proj for an example of this.\r\n *\r\n * Additional projection definitions can be registered with `proj4.defs()` any\r\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\r\n * know in advance what projections are needed, you can initially load minimal\r\n * support and then load whichever are requested.\r\n *\r\n * Note that Proj4js does not support projection extents. If you want to add\r\n * one for creating default tile grids, you can add it after the Projection\r\n * object has been created with `setExtent`, for example,\r\n * `get('EPSG:1234').setExtent(extent)`.\r\n *\r\n * In addition to Proj4js support, any transform functions can be added with\r\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\r\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\r\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\r\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\r\n * examples/wms-custom-proj for an example of this.\r\n *\r\n * Note that if no transforms are needed and you only need to define the\r\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\r\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\r\n * this.\r\n */\r\nimport Projection from './proj/Projection.js';\r\nimport {\r\n  PROJECTIONS as EPSG3857_PROJECTIONS,\r\n  fromEPSG4326,\r\n  toEPSG4326,\r\n} from './proj/epsg3857.js';\r\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\r\nimport {METERS_PER_UNIT} from './proj/Units.js';\r\nimport {\r\n  add as addProj,\r\n  clear as clearProj,\r\n  get as getProj,\r\n} from './proj/projections.js';\r\nimport {\r\n  add as addTransformFunc,\r\n  clear as clearTransformFuncs,\r\n  get as getTransformFunc,\r\n} from './proj/transforms.js';\r\nimport {applyTransform, getWidth} from './extent.js';\r\nimport {clamp, modulo} from './math.js';\r\nimport {equals, getWorldsAway} from './coordinate.js';\r\nimport {getDistance} from './sphere.js';\r\n\r\n/**\r\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\r\n * string or undefined.\r\n * @typedef {Projection|string|undefined} ProjectionLike\r\n * @api\r\n */\r\n\r\n/**\r\n * A transform function accepts an array of input coordinate values, an optional\r\n * output array, and an optional dimension (default should be 2).  The function\r\n * transforms the input coordinate values, populates the output array, and\r\n * returns the output array.\r\n *\r\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\r\n * @api\r\n */\r\n\r\nexport {METERS_PER_UNIT};\r\n\r\nexport {Projection};\r\n\r\nlet showCoordinateWarning = true;\r\n\r\n/**\r\n * @param {boolean} [disable = true] Disable console info about `useGeographic()`\r\n */\r\nexport function disableCoordinateWarning(disable) {\r\n  const hide = disable === undefined ? true : disable;\r\n  showCoordinateWarning = !hide;\r\n}\r\n\r\n/**\r\n * @param {Array<number>} input Input coordinate array.\r\n * @param {Array<number>} [output] Output array of coordinate values.\r\n * @param {number} [dimension] Dimension.\r\n * @return {Array<number>} Output coordinate array (new array, same coordinate\r\n *     values).\r\n */\r\nexport function cloneTransform(input, output, dimension) {\r\n  if (output !== undefined) {\r\n    for (let i = 0, ii = input.length; i < ii; ++i) {\r\n      output[i] = input[i];\r\n    }\r\n    output = output;\r\n  } else {\r\n    output = input.slice();\r\n  }\r\n  return output;\r\n}\r\n\r\n/**\r\n * @param {Array<number>} input Input coordinate array.\r\n * @param {Array<number>} [output] Output array of coordinate values.\r\n * @param {number} [dimension] Dimension.\r\n * @return {Array<number>} Input coordinate array (same array as input).\r\n */\r\nexport function identityTransform(input, output, dimension) {\r\n  if (output !== undefined && input !== output) {\r\n    for (let i = 0, ii = input.length; i < ii; ++i) {\r\n      output[i] = input[i];\r\n    }\r\n    input = output;\r\n  }\r\n  return input;\r\n}\r\n\r\n/**\r\n * Add a Projection object to the list of supported projections that can be\r\n * looked up by their code.\r\n *\r\n * @param {Projection} projection Projection instance.\r\n * @api\r\n */\r\nexport function addProjection(projection) {\r\n  addProj(projection.getCode(), projection);\r\n  addTransformFunc(projection, projection, cloneTransform);\r\n}\r\n\r\n/**\r\n * @param {Array<Projection>} projections Projections.\r\n */\r\nexport function addProjections(projections) {\r\n  projections.forEach(addProjection);\r\n}\r\n\r\n/**\r\n * Fetches a Projection object for the code specified.\r\n *\r\n * @param {ProjectionLike} projectionLike Either a code string which is\r\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\r\n *     existing projection object, or undefined.\r\n * @return {Projection|null} Projection object, or null if not in list.\r\n * @api\r\n */\r\nexport function get(projectionLike) {\r\n  return typeof projectionLike === 'string'\r\n    ? getProj(/** @type {string} */ (projectionLike))\r\n    : /** @type {Projection} */ (projectionLike) || null;\r\n}\r\n\r\n/**\r\n * Get the resolution of the point in degrees or distance units.\r\n * For projections with degrees as the unit this will simply return the\r\n * provided resolution. For other projections the point resolution is\r\n * by default estimated by transforming the `point` pixel to EPSG:4326,\r\n * measuring its width and height on the normal sphere,\r\n * and taking the average of the width and height.\r\n * A custom function can be provided for a specific projection, either\r\n * by setting the `getPointResolution` option in the\r\n * {@link module:ol/proj/Projection~Projection} constructor or by using\r\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\r\n * projection object.\r\n * @param {ProjectionLike} projection The projection.\r\n * @param {number} resolution Nominal resolution in projection units.\r\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\r\n * @param {import(\"./proj/Units.js\").Units} [units] Units to get the point resolution in.\r\n * Default is the projection's units.\r\n * @return {number} Point resolution.\r\n * @api\r\n */\r\nexport function getPointResolution(projection, resolution, point, units) {\r\n  projection = get(projection);\r\n  let pointResolution;\r\n  const getter = projection.getPointResolutionFunc();\r\n  if (getter) {\r\n    pointResolution = getter(resolution, point);\r\n    if (units && units !== projection.getUnits()) {\r\n      const metersPerUnit = projection.getMetersPerUnit();\r\n      if (metersPerUnit) {\r\n        pointResolution =\r\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[units];\r\n      }\r\n    }\r\n  } else {\r\n    const projUnits = projection.getUnits();\r\n    if ((projUnits == 'degrees' && !units) || units == 'degrees') {\r\n      pointResolution = resolution;\r\n    } else {\r\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\r\n      // measuring its width and height on the normal sphere, and taking the\r\n      // average of the width and height.\r\n      const toEPSG4326 = getTransformFromProjections(\r\n        projection,\r\n        get('EPSG:4326')\r\n      );\r\n      if (toEPSG4326 === identityTransform && projUnits !== 'degrees') {\r\n        // no transform is available\r\n        pointResolution = resolution * projection.getMetersPerUnit();\r\n      } else {\r\n        let vertices = [\r\n          point[0] - resolution / 2,\r\n          point[1],\r\n          point[0] + resolution / 2,\r\n          point[1],\r\n          point[0],\r\n          point[1] - resolution / 2,\r\n          point[0],\r\n          point[1] + resolution / 2,\r\n        ];\r\n        vertices = toEPSG4326(vertices, vertices, 2);\r\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\r\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\r\n        pointResolution = (width + height) / 2;\r\n      }\r\n      const metersPerUnit = units\r\n        ? METERS_PER_UNIT[units]\r\n        : projection.getMetersPerUnit();\r\n      if (metersPerUnit !== undefined) {\r\n        pointResolution /= metersPerUnit;\r\n      }\r\n    }\r\n  }\r\n  return pointResolution;\r\n}\r\n\r\n/**\r\n * Registers transformation functions that don't alter coordinates. Those allow\r\n * to transform between projections with equal meaning.\r\n *\r\n * @param {Array<Projection>} projections Projections.\r\n * @api\r\n */\r\nexport function addEquivalentProjections(projections) {\r\n  addProjections(projections);\r\n  projections.forEach(function (source) {\r\n    projections.forEach(function (destination) {\r\n      if (source !== destination) {\r\n        addTransformFunc(source, destination, cloneTransform);\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\n/**\r\n * Registers transformation functions to convert coordinates in any projection\r\n * in projection1 to any projection in projection2.\r\n *\r\n * @param {Array<Projection>} projections1 Projections with equal\r\n *     meaning.\r\n * @param {Array<Projection>} projections2 Projections with equal\r\n *     meaning.\r\n * @param {TransformFunction} forwardTransform Transformation from any\r\n *   projection in projection1 to any projection in projection2.\r\n * @param {TransformFunction} inverseTransform Transform from any projection\r\n *   in projection2 to any projection in projection1..\r\n */\r\nexport function addEquivalentTransforms(\r\n  projections1,\r\n  projections2,\r\n  forwardTransform,\r\n  inverseTransform\r\n) {\r\n  projections1.forEach(function (projection1) {\r\n    projections2.forEach(function (projection2) {\r\n      addTransformFunc(projection1, projection2, forwardTransform);\r\n      addTransformFunc(projection2, projection1, inverseTransform);\r\n    });\r\n  });\r\n}\r\n\r\n/**\r\n * Clear all cached projections and transforms.\r\n */\r\nexport function clearAllProjections() {\r\n  clearProj();\r\n  clearTransformFuncs();\r\n}\r\n\r\n/**\r\n * @param {Projection|string|undefined} projection Projection.\r\n * @param {string} defaultCode Default code.\r\n * @return {Projection} Projection.\r\n */\r\nexport function createProjection(projection, defaultCode) {\r\n  if (!projection) {\r\n    return get(defaultCode);\r\n  } else if (typeof projection === 'string') {\r\n    return get(projection);\r\n  } else {\r\n    return /** @type {Projection} */ (projection);\r\n  }\r\n}\r\n\r\n/**\r\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\r\n * function.\r\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\r\n *     transform.\r\n * @return {TransformFunction} Transform function.\r\n */\r\nexport function createTransformFromCoordinateTransform(coordTransform) {\r\n  return (\r\n    /**\r\n     * @param {Array<number>} input Input.\r\n     * @param {Array<number>} [output] Output.\r\n     * @param {number} [dimension] Dimension.\r\n     * @return {Array<number>} Output.\r\n     */\r\n    function (input, output, dimension) {\r\n      const length = input.length;\r\n      dimension = dimension !== undefined ? dimension : 2;\r\n      output = output !== undefined ? output : new Array(length);\r\n      for (let i = 0; i < length; i += dimension) {\r\n        const point = coordTransform(input.slice(i, i + dimension));\r\n        const pointLength = point.length;\r\n        for (let j = 0, jj = dimension; j < jj; ++j) {\r\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\r\n        }\r\n      }\r\n      return output;\r\n    }\r\n  );\r\n}\r\n\r\n/**\r\n * Registers coordinate transform functions to convert coordinates between the\r\n * source projection and the destination projection.\r\n * The forward and inverse functions convert coordinate pairs; this function\r\n * converts these into the functions used internally which also handle\r\n * extents and coordinate arrays.\r\n *\r\n * @param {ProjectionLike} source Source projection.\r\n * @param {ProjectionLike} destination Destination projection.\r\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\r\n *     function (that is, from the source projection to the destination\r\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\r\n *     the transformed {@link module:ol/coordinate~Coordinate}.\r\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\r\n *     function (that is, from the destination projection to the source\r\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\r\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\r\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\r\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\r\n *     source.\r\n * @api\r\n */\r\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\r\n  const sourceProj = get(source);\r\n  const destProj = get(destination);\r\n  addTransformFunc(\r\n    sourceProj,\r\n    destProj,\r\n    createTransformFromCoordinateTransform(forward)\r\n  );\r\n  addTransformFunc(\r\n    destProj,\r\n    sourceProj,\r\n    createTransformFromCoordinateTransform(inverse)\r\n  );\r\n}\r\n\r\n/**\r\n * Transforms a coordinate from longitude/latitude to a different projection.\r\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\r\n *     an array with longitude as 1st and latitude as 2nd element.\r\n * @param {ProjectionLike} [projection] Target projection. The\r\n *     default is Web Mercator, i.e. 'EPSG:3857'.\r\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\r\n * @api\r\n */\r\nexport function fromLonLat(coordinate, projection) {\r\n  disableCoordinateWarning();\r\n  return transform(\r\n    coordinate,\r\n    'EPSG:4326',\r\n    projection !== undefined ? projection : 'EPSG:3857'\r\n  );\r\n}\r\n\r\n/**\r\n * Transforms a coordinate to longitude/latitude.\r\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\r\n * @param {ProjectionLike} [projection] Projection of the coordinate.\r\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\r\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\r\n *     with longitude as 1st and latitude as 2nd element.\r\n * @api\r\n */\r\nexport function toLonLat(coordinate, projection) {\r\n  const lonLat = transform(\r\n    coordinate,\r\n    projection !== undefined ? projection : 'EPSG:3857',\r\n    'EPSG:4326'\r\n  );\r\n  const lon = lonLat[0];\r\n  if (lon < -180 || lon > 180) {\r\n    lonLat[0] = modulo(lon + 180, 360) - 180;\r\n  }\r\n  return lonLat;\r\n}\r\n\r\n/**\r\n * Checks if two projections are the same, that is every coordinate in one\r\n * projection does represent the same geographic point as the same coordinate in\r\n * the other projection.\r\n *\r\n * @param {Projection} projection1 Projection 1.\r\n * @param {Projection} projection2 Projection 2.\r\n * @return {boolean} Equivalent.\r\n * @api\r\n */\r\nexport function equivalent(projection1, projection2) {\r\n  if (projection1 === projection2) {\r\n    return true;\r\n  }\r\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\r\n  if (projection1.getCode() === projection2.getCode()) {\r\n    return equalUnits;\r\n  } else {\r\n    const transformFunc = getTransformFromProjections(projection1, projection2);\r\n    return transformFunc === cloneTransform && equalUnits;\r\n  }\r\n}\r\n\r\n/**\r\n * Searches in the list of transform functions for the function for converting\r\n * coordinates from the source projection to the destination projection.\r\n *\r\n * @param {Projection} sourceProjection Source Projection object.\r\n * @param {Projection} destinationProjection Destination Projection\r\n *     object.\r\n * @return {TransformFunction} Transform function.\r\n */\r\nexport function getTransformFromProjections(\r\n  sourceProjection,\r\n  destinationProjection\r\n) {\r\n  const sourceCode = sourceProjection.getCode();\r\n  const destinationCode = destinationProjection.getCode();\r\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\r\n  if (!transformFunc) {\r\n    transformFunc = identityTransform;\r\n  }\r\n  return transformFunc;\r\n}\r\n\r\n/**\r\n * Given the projection-like objects, searches for a transformation\r\n * function to convert a coordinates array from the source projection to the\r\n * destination projection.\r\n *\r\n * @param {ProjectionLike} source Source.\r\n * @param {ProjectionLike} destination Destination.\r\n * @return {TransformFunction} Transform function.\r\n * @api\r\n */\r\nexport function getTransform(source, destination) {\r\n  const sourceProjection = get(source);\r\n  const destinationProjection = get(destination);\r\n  return getTransformFromProjections(sourceProjection, destinationProjection);\r\n}\r\n\r\n/**\r\n * Transforms a coordinate from source projection to destination projection.\r\n * This returns a new coordinate (and does not modify the original).\r\n *\r\n * See {@link module:ol/proj.transformExtent} for extent transformation.\r\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\r\n * subclasses for geometry transforms.\r\n *\r\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\r\n * @param {ProjectionLike} source Source projection-like.\r\n * @param {ProjectionLike} destination Destination projection-like.\r\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\r\n * @api\r\n */\r\nexport function transform(coordinate, source, destination) {\r\n  const transformFunc = getTransform(source, destination);\r\n  return transformFunc(coordinate, undefined, coordinate.length);\r\n}\r\n\r\n/**\r\n * Transforms an extent from source projection to destination projection.  This\r\n * returns a new extent (and does not modify the original).\r\n *\r\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\r\n * @param {ProjectionLike} source Source projection-like.\r\n * @param {ProjectionLike} destination Destination projection-like.\r\n * @param {number} [stops] Number of stops per side used for the transform.\r\n * By default only the corners are used.\r\n * @return {import(\"./extent.js\").Extent} The transformed extent.\r\n * @api\r\n */\r\nexport function transformExtent(extent, source, destination, stops) {\r\n  const transformFunc = getTransform(source, destination);\r\n  return applyTransform(extent, transformFunc, undefined, stops);\r\n}\r\n\r\n/**\r\n * Transforms the given point to the destination projection.\r\n *\r\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\r\n * @param {Projection} sourceProjection Source projection.\r\n * @param {Projection} destinationProjection Destination projection.\r\n * @return {import(\"./coordinate.js\").Coordinate} Point.\r\n */\r\nexport function transformWithProjections(\r\n  point,\r\n  sourceProjection,\r\n  destinationProjection\r\n) {\r\n  const transformFunc = getTransformFromProjections(\r\n    sourceProjection,\r\n    destinationProjection\r\n  );\r\n  return transformFunc(point);\r\n}\r\n\r\n/**\r\n * @type {Projection|null}\r\n */\r\nlet userProjection = null;\r\n\r\n/**\r\n * Set the projection for coordinates supplied from and returned by API methods.\r\n * This includes all API methods except for those interacting with tile grids.\r\n * @param {ProjectionLike} projection The user projection.\r\n * @api\r\n */\r\nexport function setUserProjection(projection) {\r\n  userProjection = get(projection);\r\n}\r\n\r\n/**\r\n * Clear the user projection if set.\r\n * @api\r\n */\r\nexport function clearUserProjection() {\r\n  userProjection = null;\r\n}\r\n\r\n/**\r\n * Get the projection for coordinates supplied from and returned by API methods.\r\n * Note that this method is not yet a part of the stable API.  Support for user\r\n * projections is not yet complete and should be considered experimental.\r\n * @return {Projection|null} The user projection (or null if not set).\r\n * @api\r\n */\r\nexport function getUserProjection() {\r\n  return userProjection;\r\n}\r\n\r\n/**\r\n * Use geographic coordinates (WGS-84 datum) in API methods.  This includes all API\r\n * methods except for those interacting with tile grids.\r\n * @api\r\n */\r\nexport function useGeographic() {\r\n  setUserProjection('EPSG:4326');\r\n}\r\n\r\n/**\r\n * Return a coordinate transformed into the user projection.  If no user projection\r\n * is set, the original coordinate is returned.\r\n * @param {Array<number>} coordinate Input coordinate.\r\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\r\n * @return {Array<number>} The input coordinate in the user projection.\r\n */\r\nexport function toUserCoordinate(coordinate, sourceProjection) {\r\n  if (!userProjection) {\r\n    return coordinate;\r\n  }\r\n  return transform(coordinate, sourceProjection, userProjection);\r\n}\r\n\r\n/**\r\n * Return a coordinate transformed from the user projection.  If no user projection\r\n * is set, the original coordinate is returned.\r\n * @param {Array<number>} coordinate Input coordinate.\r\n * @param {ProjectionLike} destProjection The destination projection.\r\n * @return {Array<number>} The input coordinate transformed.\r\n */\r\nexport function fromUserCoordinate(coordinate, destProjection) {\r\n  if (!userProjection) {\r\n    if (\r\n      showCoordinateWarning &&\r\n      !equals(coordinate, [0, 0]) &&\r\n      coordinate[0] >= -180 &&\r\n      coordinate[0] <= 180 &&\r\n      coordinate[1] >= -90 &&\r\n      coordinate[1] <= 90\r\n    ) {\r\n      showCoordinateWarning = false;\r\n      // eslint-disable-next-line no-console\r\n      console.warn(\r\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.'\r\n      );\r\n    }\r\n    return coordinate;\r\n  }\r\n  return transform(coordinate, userProjection, destProjection);\r\n}\r\n\r\n/**\r\n * Return an extent transformed into the user projection.  If no user projection\r\n * is set, the original extent is returned.\r\n * @param {import(\"./extent.js\").Extent} extent Input extent.\r\n * @param {ProjectionLike} sourceProjection The input extent projection.\r\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\r\n */\r\nexport function toUserExtent(extent, sourceProjection) {\r\n  if (!userProjection) {\r\n    return extent;\r\n  }\r\n  return transformExtent(extent, sourceProjection, userProjection);\r\n}\r\n\r\n/**\r\n * Return an extent transformed from the user projection.  If no user projection\r\n * is set, the original extent is returned.\r\n * @param {import(\"./extent.js\").Extent} extent Input extent.\r\n * @param {ProjectionLike} destProjection The destination projection.\r\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\r\n */\r\nexport function fromUserExtent(extent, destProjection) {\r\n  if (!userProjection) {\r\n    return extent;\r\n  }\r\n  return transformExtent(extent, userProjection, destProjection);\r\n}\r\n\r\n/**\r\n * Return the resolution in user projection units per pixel. If no user projection\r\n * is set, or source or user projection are missing units, the original resolution\r\n * is returned.\r\n * @param {number} resolution Resolution in input projection units per pixel.\r\n * @param {ProjectionLike} sourceProjection The input projection.\r\n * @return {number} Resolution in user projection units per pixel.\r\n */\r\nexport function toUserResolution(resolution, sourceProjection) {\r\n  if (!userProjection) {\r\n    return resolution;\r\n  }\r\n  const sourceUnits = get(sourceProjection).getUnits();\r\n  const userUnits = userProjection.getUnits();\r\n  return sourceUnits && userUnits\r\n    ? (resolution * METERS_PER_UNIT[sourceUnits]) / METERS_PER_UNIT[userUnits]\r\n    : resolution;\r\n}\r\n\r\n/**\r\n * Return the resolution in user projection units per pixel. If no user projection\r\n * is set, or source or user projection are missing units, the original resolution\r\n * is returned.\r\n * @param {number} resolution Resolution in user projection units per pixel.\r\n * @param {ProjectionLike} destProjection The destination projection.\r\n * @return {number} Resolution in destination projection units per pixel.\r\n */\r\nexport function fromUserResolution(resolution, destProjection) {\r\n  if (!userProjection) {\r\n    return resolution;\r\n  }\r\n  const sourceUnits = get(destProjection).getUnits();\r\n  const userUnits = userProjection.getUnits();\r\n  return sourceUnits && userUnits\r\n    ? (resolution * METERS_PER_UNIT[userUnits]) / METERS_PER_UNIT[sourceUnits]\r\n    : resolution;\r\n}\r\n\r\n/**\r\n * Creates a safe coordinate transform function from a coordinate transform function.\r\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\r\n * and that coordinates exceeding the source projection validity extent's range will be\r\n * clamped to the validity range.\r\n * @param {Projection} sourceProj Source projection.\r\n * @param {Projection} destProj Destination projection.\r\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destiation).\r\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destiation).\r\n */\r\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\r\n  return function (coord) {\r\n    let transformed, worldsAway;\r\n    if (sourceProj.canWrapX()) {\r\n      const sourceExtent = sourceProj.getExtent();\r\n      const sourceExtentWidth = getWidth(sourceExtent);\r\n      coord = coord.slice(0);\r\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\r\n      if (worldsAway) {\r\n        // Move x to the real world\r\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\r\n      }\r\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\r\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\r\n      transformed = transform(coord);\r\n    } else {\r\n      transformed = transform(coord);\r\n    }\r\n    if (worldsAway && destProj.canWrapX()) {\r\n      // Move transformed coordinate back to the offset world\r\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\r\n    }\r\n    return transformed;\r\n  };\r\n}\r\n\r\n/**\r\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\r\n * by when this module is executed and should only need to be called again after\r\n * `clearAllProjections()` is called (e.g. in tests).\r\n */\r\nexport function addCommon() {\r\n  // Add transformations that don't alter coordinates to convert within set of\r\n  // projections with equal meaning.\r\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\r\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\r\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\r\n  // coordinates and back.\r\n  addEquivalentTransforms(\r\n    EPSG4326_PROJECTIONS,\r\n    EPSG3857_PROJECTIONS,\r\n    fromEPSG4326,\r\n    toEPSG4326\r\n  );\r\n}\r\n\r\naddCommon();\r\n","/**\r\n * @module ol/centerconstraint\r\n */\r\nimport {clamp} from './math.js';\r\n\r\n/**\r\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\r\n */\r\n\r\n/**\r\n * @param {import(\"./extent.js\").Extent} extent Extent.\r\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\r\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\r\n * (only during interaction and animation).\r\n * @return {Type} The constraint.\r\n */\r\nexport function createExtent(extent, onlyCenter, smooth) {\r\n  return (\r\n    /**\r\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\r\n     * @param {number|undefined} resolution Resolution.\r\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\r\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\r\n     * @param {Array<number>} [centerShift] Shift between map center and viewport center.\r\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\r\n     */\r\n    function (center, resolution, size, isMoving, centerShift) {\r\n      if (!center) {\r\n        return undefined;\r\n      }\r\n      if (!resolution && !onlyCenter) {\r\n        return center;\r\n      }\r\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\r\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\r\n      const shiftX = centerShift ? centerShift[0] : 0;\r\n      const shiftY = centerShift ? centerShift[1] : 0;\r\n      let minX = extent[0] + viewWidth / 2 + shiftX;\r\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\r\n      let minY = extent[1] + viewHeight / 2 + shiftY;\r\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\r\n\r\n      // note: when zooming out of bounds, min and max values for x and y may\r\n      // end up inverted (min > max); this has to be accounted for\r\n      if (minX > maxX) {\r\n        minX = (maxX + minX) / 2;\r\n        maxX = minX;\r\n      }\r\n      if (minY > maxY) {\r\n        minY = (maxY + minY) / 2;\r\n        maxY = minY;\r\n      }\r\n\r\n      let x = clamp(center[0], minX, maxX);\r\n      let y = clamp(center[1], minY, maxY);\r\n\r\n      // during an interaction, allow some overscroll\r\n      if (isMoving && smooth && resolution) {\r\n        const ratio = 30 * resolution;\r\n        x +=\r\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\r\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\r\n        y +=\r\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\r\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\r\n      }\r\n\r\n      return [x, y];\r\n    }\r\n  );\r\n}\r\n\r\n/**\r\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\r\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\r\n */\r\nexport function none(center) {\r\n  return center;\r\n}\r\n","/**\r\n * @module ol/resolutionconstraint\r\n */\r\nimport {clamp} from './math.js';\r\nimport {getHeight, getWidth} from './extent.js';\r\nimport {linearFindNearest} from './array.js';\r\n\r\n/**\r\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\r\n */\r\n\r\n/**\r\n * Returns a modified resolution taking into account the viewport size and maximum\r\n * allowed extent.\r\n * @param {number} resolution Resolution\r\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\r\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\r\n * @param {boolean} showFullExtent Whether to show the full extent.\r\n * @return {number} Capped resolution.\r\n */\r\nfunction getViewportClampedResolution(\r\n  resolution,\r\n  maxExtent,\r\n  viewportSize,\r\n  showFullExtent\r\n) {\r\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\r\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\r\n\r\n  if (showFullExtent) {\r\n    return Math.min(resolution, Math.max(xResolution, yResolution));\r\n  }\r\n  return Math.min(resolution, Math.min(xResolution, yResolution));\r\n}\r\n\r\n/**\r\n * Returns a modified resolution to be between maxResolution and minResolution while\r\n * still allowing the value to be slightly out of bounds.\r\n * Note: the computation is based on the logarithm function (ln):\r\n *  - at 1, ln(x) is 0\r\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\r\n * The final result is clamped to prevent getting too far away from bounds.\r\n * @param {number} resolution Resolution.\r\n * @param {number} maxResolution Max resolution.\r\n * @param {number} minResolution Min resolution.\r\n * @return {number} Smoothed resolution.\r\n */\r\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\r\n  let result = Math.min(resolution, maxResolution);\r\n  const ratio = 50;\r\n\r\n  result *=\r\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\r\n    1;\r\n  if (minResolution) {\r\n    result = Math.max(result, minResolution);\r\n    result /=\r\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\r\n        ratio +\r\n      1;\r\n  }\r\n  return clamp(result, minResolution / 2, maxResolution * 2);\r\n}\r\n\r\n/**\r\n * @param {Array<number>} resolutions Resolutions.\r\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\r\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\r\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\r\n * @return {Type} Zoom function.\r\n */\r\nexport function createSnapToResolutions(\r\n  resolutions,\r\n  smooth,\r\n  maxExtent,\r\n  showFullExtent\r\n) {\r\n  smooth = smooth !== undefined ? smooth : true;\r\n  return (\r\n    /**\r\n     * @param {number|undefined} resolution Resolution.\r\n     * @param {number} direction Direction.\r\n     * @param {import(\"./size.js\").Size} size Viewport size.\r\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\r\n     * @return {number|undefined} Resolution.\r\n     */\r\n    function (resolution, direction, size, isMoving) {\r\n      if (resolution !== undefined) {\r\n        const maxResolution = resolutions[0];\r\n        const minResolution = resolutions[resolutions.length - 1];\r\n        const cappedMaxRes = maxExtent\r\n          ? getViewportClampedResolution(\r\n              maxResolution,\r\n              maxExtent,\r\n              size,\r\n              showFullExtent\r\n            )\r\n          : maxResolution;\r\n\r\n        // during interacting or animating, allow intermediary values\r\n        if (isMoving) {\r\n          if (!smooth) {\r\n            return clamp(resolution, minResolution, cappedMaxRes);\r\n          }\r\n          return getSmoothClampedResolution(\r\n            resolution,\r\n            cappedMaxRes,\r\n            minResolution\r\n          );\r\n        }\r\n\r\n        const capped = Math.min(cappedMaxRes, resolution);\r\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\r\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\r\n          return resolutions[z + 1];\r\n        }\r\n        return resolutions[z];\r\n      } else {\r\n        return undefined;\r\n      }\r\n    }\r\n  );\r\n}\r\n\r\n/**\r\n * @param {number} power Power.\r\n * @param {number} maxResolution Maximum resolution.\r\n * @param {number} [minResolution] Minimum resolution.\r\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\r\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\r\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\r\n * @return {Type} Zoom function.\r\n */\r\nexport function createSnapToPower(\r\n  power,\r\n  maxResolution,\r\n  minResolution,\r\n  smooth,\r\n  maxExtent,\r\n  showFullExtent\r\n) {\r\n  smooth = smooth !== undefined ? smooth : true;\r\n  minResolution = minResolution !== undefined ? minResolution : 0;\r\n\r\n  return (\r\n    /**\r\n     * @param {number|undefined} resolution Resolution.\r\n     * @param {number} direction Direction.\r\n     * @param {import(\"./size.js\").Size} size Viewport size.\r\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\r\n     * @return {number|undefined} Resolution.\r\n     */\r\n    function (resolution, direction, size, isMoving) {\r\n      if (resolution !== undefined) {\r\n        const cappedMaxRes = maxExtent\r\n          ? getViewportClampedResolution(\r\n              maxResolution,\r\n              maxExtent,\r\n              size,\r\n              showFullExtent\r\n            )\r\n          : maxResolution;\r\n\r\n        // during interacting or animating, allow intermediary values\r\n        if (isMoving) {\r\n          if (!smooth) {\r\n            return clamp(resolution, minResolution, cappedMaxRes);\r\n          }\r\n          return getSmoothClampedResolution(\r\n            resolution,\r\n            cappedMaxRes,\r\n            minResolution\r\n          );\r\n        }\r\n\r\n        const tolerance = 1e-9;\r\n        const minZoomLevel = Math.ceil(\r\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\r\n        );\r\n        const offset = -direction * (0.5 - tolerance) + 0.5;\r\n        const capped = Math.min(cappedMaxRes, resolution);\r\n        const cappedZoomLevel = Math.floor(\r\n          Math.log(maxResolution / capped) / Math.log(power) + offset\r\n        );\r\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\r\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\r\n        return clamp(newResolution, minResolution, cappedMaxRes);\r\n      } else {\r\n        return undefined;\r\n      }\r\n    }\r\n  );\r\n}\r\n\r\n/**\r\n * @param {number} maxResolution Max resolution.\r\n * @param {number} minResolution Min resolution.\r\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\r\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\r\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\r\n * @return {Type} Zoom function.\r\n */\r\nexport function createMinMaxResolution(\r\n  maxResolution,\r\n  minResolution,\r\n  smooth,\r\n  maxExtent,\r\n  showFullExtent\r\n) {\r\n  smooth = smooth !== undefined ? smooth : true;\r\n\r\n  return (\r\n    /**\r\n     * @param {number|undefined} resolution Resolution.\r\n     * @param {number} direction Direction.\r\n     * @param {import(\"./size.js\").Size} size Viewport size.\r\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\r\n     * @return {number|undefined} Resolution.\r\n     */\r\n    function (resolution, direction, size, isMoving) {\r\n      if (resolution !== undefined) {\r\n        const cappedMaxRes = maxExtent\r\n          ? getViewportClampedResolution(\r\n              maxResolution,\r\n              maxExtent,\r\n              size,\r\n              showFullExtent\r\n            )\r\n          : maxResolution;\r\n\r\n        if (!smooth || !isMoving) {\r\n          return clamp(resolution, minResolution, cappedMaxRes);\r\n        }\r\n        return getSmoothClampedResolution(\r\n          resolution,\r\n          cappedMaxRes,\r\n          minResolution\r\n        );\r\n      } else {\r\n        return undefined;\r\n      }\r\n    }\r\n  );\r\n}\r\n","/**\r\n * @module ol/rotationconstraint\r\n */\r\nimport {toRadians} from './math.js';\r\n\r\n/**\r\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\r\n */\r\n\r\n/**\r\n * @param {number|undefined} rotation Rotation.\r\n * @return {number|undefined} Rotation.\r\n */\r\nexport function disable(rotation) {\r\n  if (rotation !== undefined) {\r\n    return 0;\r\n  } else {\r\n    return undefined;\r\n  }\r\n}\r\n\r\n/**\r\n * @param {number|undefined} rotation Rotation.\r\n * @return {number|undefined} Rotation.\r\n */\r\nexport function none(rotation) {\r\n  if (rotation !== undefined) {\r\n    return rotation;\r\n  } else {\r\n    return undefined;\r\n  }\r\n}\r\n\r\n/**\r\n * @param {number} n N.\r\n * @return {Type} Rotation constraint.\r\n */\r\nexport function createSnapToN(n) {\r\n  const theta = (2 * Math.PI) / n;\r\n  return (\r\n    /**\r\n     * @param {number|undefined} rotation Rotation.\r\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\r\n     * @return {number|undefined} Rotation.\r\n     */\r\n    function (rotation, isMoving) {\r\n      if (isMoving) {\r\n        return rotation;\r\n      }\r\n\r\n      if (rotation !== undefined) {\r\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\r\n        return rotation;\r\n      } else {\r\n        return undefined;\r\n      }\r\n    }\r\n  );\r\n}\r\n\r\n/**\r\n * @param {number} [tolerance] Tolerance.\r\n * @return {Type} Rotation constraint.\r\n */\r\nexport function createSnapToZero(tolerance) {\r\n  tolerance = tolerance || toRadians(5);\r\n  return (\r\n    /**\r\n     * @param {number|undefined} rotation Rotation.\r\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\r\n     * @return {number|undefined} Rotation.\r\n     */\r\n    function (rotation, isMoving) {\r\n      if (isMoving) {\r\n        return rotation;\r\n      }\r\n\r\n      if (rotation !== undefined) {\r\n        if (Math.abs(rotation) <= tolerance) {\r\n          return 0;\r\n        } else {\r\n          return rotation;\r\n        }\r\n      } else {\r\n        return undefined;\r\n      }\r\n    }\r\n  );\r\n}\r\n","/**\r\n * @module ol/easing\r\n */\r\n\r\n/**\r\n * Start slow and speed up.\r\n * @param {number} t Input between 0 and 1.\r\n * @return {number} Output between 0 and 1.\r\n * @api\r\n */\r\nexport function easeIn(t) {\r\n  return Math.pow(t, 3);\r\n}\r\n\r\n/**\r\n * Start fast and slow down.\r\n * @param {number} t Input between 0 and 1.\r\n * @return {number} Output between 0 and 1.\r\n * @api\r\n */\r\nexport function easeOut(t) {\r\n  return 1 - easeIn(1 - t);\r\n}\r\n\r\n/**\r\n * Start slow, speed up, and then slow down again.\r\n * @param {number} t Input between 0 and 1.\r\n * @return {number} Output between 0 and 1.\r\n * @api\r\n */\r\nexport function inAndOut(t) {\r\n  return 3 * t * t - 2 * t * t * t;\r\n}\r\n\r\n/**\r\n * Maintain a constant speed over time.\r\n * @param {number} t Input between 0 and 1.\r\n * @return {number} Output between 0 and 1.\r\n * @api\r\n */\r\nexport function linear(t) {\r\n  return t;\r\n}\r\n\r\n/**\r\n * Start slow, speed up, and at the very end slow down again.  This has the\r\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\r\n * slowdown is delayed.\r\n * @param {number} t Input between 0 and 1.\r\n * @return {number} Output between 0 and 1.\r\n * @api\r\n */\r\nexport function upAndDown(t) {\r\n  if (t < 0.5) {\r\n    return inAndOut(2 * t);\r\n  } else {\r\n    return 1 - inAndOut(2 * (t - 0.5));\r\n  }\r\n}\r\n","/**\r\n * @module ol/geom/flat/transform\r\n */\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {number} end End.\r\n * @param {number} stride Stride.\r\n * @param {import(\"../../transform.js\").Transform} transform Transform.\r\n * @param {Array<number>} [dest] Destination.\r\n * @return {Array<number>} Transformed coordinates.\r\n */\r\nexport function transform2D(\r\n  flatCoordinates,\r\n  offset,\r\n  end,\r\n  stride,\r\n  transform,\r\n  dest\r\n) {\r\n  dest = dest ? dest : [];\r\n  let i = 0;\r\n  for (let j = offset; j < end; j += stride) {\r\n    const x = flatCoordinates[j];\r\n    const y = flatCoordinates[j + 1];\r\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\r\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\r\n  }\r\n  if (dest && dest.length != i) {\r\n    dest.length = i;\r\n  }\r\n  return dest;\r\n}\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {number} end End.\r\n * @param {number} stride Stride.\r\n * @param {number} angle Angle.\r\n * @param {Array<number>} anchor Rotation anchor point.\r\n * @param {Array<number>} [dest] Destination.\r\n * @return {Array<number>} Transformed coordinates.\r\n */\r\nexport function rotate(\r\n  flatCoordinates,\r\n  offset,\r\n  end,\r\n  stride,\r\n  angle,\r\n  anchor,\r\n  dest\r\n) {\r\n  dest = dest ? dest : [];\r\n  const cos = Math.cos(angle);\r\n  const sin = Math.sin(angle);\r\n  const anchorX = anchor[0];\r\n  const anchorY = anchor[1];\r\n  let i = 0;\r\n  for (let j = offset; j < end; j += stride) {\r\n    const deltaX = flatCoordinates[j] - anchorX;\r\n    const deltaY = flatCoordinates[j + 1] - anchorY;\r\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\r\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\r\n    for (let k = j + 2; k < j + stride; ++k) {\r\n      dest[i++] = flatCoordinates[k];\r\n    }\r\n  }\r\n  if (dest && dest.length != i) {\r\n    dest.length = i;\r\n  }\r\n  return dest;\r\n}\r\n\r\n/**\r\n * Scale the coordinates.\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {number} end End.\r\n * @param {number} stride Stride.\r\n * @param {number} sx Scale factor in the x-direction.\r\n * @param {number} sy Scale factor in the y-direction.\r\n * @param {Array<number>} anchor Scale anchor point.\r\n * @param {Array<number>} [dest] Destination.\r\n * @return {Array<number>} Transformed coordinates.\r\n */\r\nexport function scale(\r\n  flatCoordinates,\r\n  offset,\r\n  end,\r\n  stride,\r\n  sx,\r\n  sy,\r\n  anchor,\r\n  dest\r\n) {\r\n  dest = dest ? dest : [];\r\n  const anchorX = anchor[0];\r\n  const anchorY = anchor[1];\r\n  let i = 0;\r\n  for (let j = offset; j < end; j += stride) {\r\n    const deltaX = flatCoordinates[j] - anchorX;\r\n    const deltaY = flatCoordinates[j + 1] - anchorY;\r\n    dest[i++] = anchorX + sx * deltaX;\r\n    dest[i++] = anchorY + sy * deltaY;\r\n    for (let k = j + 2; k < j + stride; ++k) {\r\n      dest[i++] = flatCoordinates[k];\r\n    }\r\n  }\r\n  if (dest && dest.length != i) {\r\n    dest.length = i;\r\n  }\r\n  return dest;\r\n}\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {number} end End.\r\n * @param {number} stride Stride.\r\n * @param {number} deltaX Delta X.\r\n * @param {number} deltaY Delta Y.\r\n * @param {Array<number>} [dest] Destination.\r\n * @return {Array<number>} Transformed coordinates.\r\n */\r\nexport function translate(\r\n  flatCoordinates,\r\n  offset,\r\n  end,\r\n  stride,\r\n  deltaX,\r\n  deltaY,\r\n  dest\r\n) {\r\n  dest = dest ? dest : [];\r\n  let i = 0;\r\n  for (let j = offset; j < end; j += stride) {\r\n    dest[i++] = flatCoordinates[j] + deltaX;\r\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\r\n    for (let k = j + 2; k < j + stride; ++k) {\r\n      dest[i++] = flatCoordinates[k];\r\n    }\r\n  }\r\n  if (dest && dest.length != i) {\r\n    dest.length = i;\r\n  }\r\n  return dest;\r\n}\r\n","/**\r\n * @module ol/geom/Geometry\r\n */\r\nimport BaseObject from '../Object.js';\r\nimport {abstract} from '../util.js';\r\nimport {\r\n  compose as composeTransform,\r\n  create as createTransform,\r\n} from '../transform.js';\r\nimport {\r\n  createEmpty,\r\n  createOrUpdateEmpty,\r\n  getHeight,\r\n  returnOrUpdate,\r\n} from '../extent.js';\r\nimport {get as getProjection, getTransform} from '../proj.js';\r\nimport {memoizeOne} from '../functions.js';\r\nimport {transform2D} from './flat/transform.js';\r\n\r\n/**\r\n * @typedef {'XY' | 'XYZ' | 'XYM' | 'XYZM'} GeometryLayout\r\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\r\n * or measure ('M') coordinate is available.\r\n */\r\n\r\n/**\r\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString' | 'MultiPolygon' | 'GeometryCollection' | 'Circle'} Type\r\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\r\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\r\n * `'GeometryCollection'`, or `'Circle'`.\r\n */\r\n\r\n/**\r\n * @type {import(\"../transform.js\").Transform}\r\n */\r\nconst tmpTransform = createTransform();\r\n\r\n/**\r\n * @classdesc\r\n * Abstract base class; normally only used for creating subclasses and not\r\n * instantiated in apps.\r\n * Base class for vector geometries.\r\n *\r\n * To get notified of changes to the geometry, register a listener for the\r\n * generic `change` event on your geometry instance.\r\n *\r\n * @abstract\r\n * @api\r\n */\r\nclass Geometry extends BaseObject {\r\n  constructor() {\r\n    super();\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../extent.js\").Extent}\r\n     */\r\n    this.extent_ = createEmpty();\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.extentRevision_ = -1;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {number}\r\n     */\r\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {number}\r\n     */\r\n    this.simplifiedGeometryRevision = 0;\r\n\r\n    /**\r\n     * Get a transformed and simplified version of the geometry.\r\n     * @abstract\r\n     * @param {number} revision The geometry revision.\r\n     * @param {number} squaredTolerance Squared tolerance.\r\n     * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\r\n     * @return {Geometry} Simplified geometry.\r\n     */\r\n    this.simplifyTransformedInternal = memoizeOne(function (\r\n      revision,\r\n      squaredTolerance,\r\n      transform\r\n    ) {\r\n      if (!transform) {\r\n        return this.getSimplifiedGeometry(squaredTolerance);\r\n      }\r\n      const clone = this.clone();\r\n      clone.applyTransform(transform);\r\n      return clone.getSimplifiedGeometry(squaredTolerance);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get a transformed and simplified version of the geometry.\r\n   * @abstract\r\n   * @param {number} squaredTolerance Squared tolerance.\r\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\r\n   * @return {Geometry} Simplified geometry.\r\n   */\r\n  simplifyTransformed(squaredTolerance, transform) {\r\n    return this.simplifyTransformedInternal(\r\n      this.getRevision(),\r\n      squaredTolerance,\r\n      transform\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Make a complete copy of the geometry.\r\n   * @abstract\r\n   * @return {!Geometry} Clone.\r\n   */\r\n  clone() {\r\n    return abstract();\r\n  }\r\n\r\n  /**\r\n   * @abstract\r\n   * @param {number} x X.\r\n   * @param {number} y Y.\r\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\r\n   * @param {number} minSquaredDistance Minimum squared distance.\r\n   * @return {number} Minimum squared distance.\r\n   */\r\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\r\n    return abstract();\r\n  }\r\n\r\n  /**\r\n   * @param {number} x X.\r\n   * @param {number} y Y.\r\n   * @return {boolean} Contains (x, y).\r\n   */\r\n  containsXY(x, y) {\r\n    const coord = this.getClosestPoint([x, y]);\r\n    return coord[0] === x && coord[1] === y;\r\n  }\r\n\r\n  /**\r\n   * Return the closest point of the geometry to the passed point as\r\n   * {@link module:ol/coordinate~Coordinate coordinate}.\r\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\r\n   * @param {import(\"../coordinate.js\").Coordinate} [closestPoint] Closest point.\r\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\r\n   * @api\r\n   */\r\n  getClosestPoint(point, closestPoint) {\r\n    closestPoint = closestPoint ? closestPoint : [NaN, NaN];\r\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\r\n    return closestPoint;\r\n  }\r\n\r\n  /**\r\n   * Returns true if this geometry includes the specified coordinate. If the\r\n   * coordinate is on the boundary of the geometry, returns false.\r\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\r\n   * @return {boolean} Contains coordinate.\r\n   * @api\r\n   */\r\n  intersectsCoordinate(coordinate) {\r\n    return this.containsXY(coordinate[0], coordinate[1]);\r\n  }\r\n\r\n  /**\r\n   * @abstract\r\n   * @param {import(\"../extent.js\").Extent} extent Extent.\r\n   * @protected\r\n   * @return {import(\"../extent.js\").Extent} extent Extent.\r\n   */\r\n  computeExtent(extent) {\r\n    return abstract();\r\n  }\r\n\r\n  /**\r\n   * Get the extent of the geometry.\r\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\r\n   * @return {import(\"../extent.js\").Extent} extent Extent.\r\n   * @api\r\n   */\r\n  getExtent(extent) {\r\n    if (this.extentRevision_ != this.getRevision()) {\r\n      const extent = this.computeExtent(this.extent_);\r\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\r\n        createOrUpdateEmpty(extent);\r\n      }\r\n      this.extentRevision_ = this.getRevision();\r\n    }\r\n    return returnOrUpdate(this.extent_, extent);\r\n  }\r\n\r\n  /**\r\n   * Rotate the geometry around a given coordinate. This modifies the geometry\r\n   * coordinates in place.\r\n   * @abstract\r\n   * @param {number} angle Rotation angle in radians.\r\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\r\n   * @api\r\n   */\r\n  rotate(angle, anchor) {\r\n    abstract();\r\n  }\r\n\r\n  /**\r\n   * Scale the geometry (with an optional origin).  This modifies the geometry\r\n   * coordinates in place.\r\n   * @abstract\r\n   * @param {number} sx The scaling factor in the x-direction.\r\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\r\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\r\n   *     of the geometry extent).\r\n   * @api\r\n   */\r\n  scale(sx, sy, anchor) {\r\n    abstract();\r\n  }\r\n\r\n  /**\r\n   * Create a simplified version of this geometry.  For linestrings, this uses\r\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\r\n   * algorithm.  For polygons, a quantization-based\r\n   * simplification is used to preserve topology.\r\n   * @param {number} tolerance The tolerance distance for simplification.\r\n   * @return {Geometry} A new, simplified version of the original geometry.\r\n   * @api\r\n   */\r\n  simplify(tolerance) {\r\n    return this.getSimplifiedGeometry(tolerance * tolerance);\r\n  }\r\n\r\n  /**\r\n   * Create a simplified version of this geometry using the Douglas Peucker\r\n   * algorithm.\r\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\r\n   * @abstract\r\n   * @param {number} squaredTolerance Squared tolerance.\r\n   * @return {Geometry} Simplified geometry.\r\n   */\r\n  getSimplifiedGeometry(squaredTolerance) {\r\n    return abstract();\r\n  }\r\n\r\n  /**\r\n   * Get the type of this geometry.\r\n   * @abstract\r\n   * @return {Type} Geometry type.\r\n   */\r\n  getType() {\r\n    return abstract();\r\n  }\r\n\r\n  /**\r\n   * Apply a transform function to the coordinates of the geometry.\r\n   * The geometry is modified in place.\r\n   * If you do not want the geometry modified in place, first `clone()` it and\r\n   * then use this function on the clone.\r\n   * @abstract\r\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\r\n   * Called with a flat array of geometry coordinates.\r\n   */\r\n  applyTransform(transformFn) {\r\n    abstract();\r\n  }\r\n\r\n  /**\r\n   * Test if the geometry and the passed extent intersect.\r\n   * @abstract\r\n   * @param {import(\"../extent.js\").Extent} extent Extent.\r\n   * @return {boolean} `true` if the geometry and the extent intersect.\r\n   */\r\n  intersectsExtent(extent) {\r\n    return abstract();\r\n  }\r\n\r\n  /**\r\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\r\n   * instead you want a new geometry, first `clone()` this geometry.\r\n   * @abstract\r\n   * @param {number} deltaX Delta X.\r\n   * @param {number} deltaY Delta Y.\r\n   * @api\r\n   */\r\n  translate(deltaX, deltaY) {\r\n    abstract();\r\n  }\r\n\r\n  /**\r\n   * Transform each coordinate of the geometry from one coordinate reference\r\n   * system to another. The geometry is modified in place.\r\n   * For example, a line will be transformed to a line and a circle to a circle.\r\n   * If you do not want the geometry modified in place, first `clone()` it and\r\n   * then use this function on the clone.\r\n   *\r\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\r\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\r\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\r\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\r\n   * @return {Geometry} This geometry.  Note that original geometry is\r\n   *     modified in place.\r\n   * @api\r\n   */\r\n  transform(source, destination) {\r\n    /** @type {import(\"../proj/Projection.js\").default} */\r\n    const sourceProj = getProjection(source);\r\n    const transformFn =\r\n      sourceProj.getUnits() == 'tile-pixels'\r\n        ? function (inCoordinates, outCoordinates, stride) {\r\n            const pixelExtent = sourceProj.getExtent();\r\n            const projectedExtent = sourceProj.getWorldExtent();\r\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\r\n            composeTransform(\r\n              tmpTransform,\r\n              projectedExtent[0],\r\n              projectedExtent[3],\r\n              scale,\r\n              -scale,\r\n              0,\r\n              0,\r\n              0\r\n            );\r\n            transform2D(\r\n              inCoordinates,\r\n              0,\r\n              inCoordinates.length,\r\n              stride,\r\n              tmpTransform,\r\n              outCoordinates\r\n            );\r\n            return getTransform(sourceProj, destination)(\r\n              inCoordinates,\r\n              outCoordinates,\r\n              stride\r\n            );\r\n          }\r\n        : getTransform(sourceProj, destination);\r\n    this.applyTransform(transformFn);\r\n    return this;\r\n  }\r\n}\r\n\r\nexport default Geometry;\r\n","/**\r\n * @module ol/geom/SimpleGeometry\r\n */\r\nimport Geometry from './Geometry.js';\r\nimport {abstract} from '../util.js';\r\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\r\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\r\n\r\n/**\r\n * @classdesc\r\n * Abstract base class; only used for creating subclasses; do not instantiate\r\n * in apps, as cannot be rendered.\r\n *\r\n * @abstract\r\n * @api\r\n */\r\nclass SimpleGeometry extends Geometry {\r\n  constructor() {\r\n    super();\r\n\r\n    /**\r\n     * @protected\r\n     * @type {import(\"./Geometry.js\").GeometryLayout}\r\n     */\r\n    this.layout = 'XY';\r\n\r\n    /**\r\n     * @protected\r\n     * @type {number}\r\n     */\r\n    this.stride = 2;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {Array<number>}\r\n     */\r\n    this.flatCoordinates = null;\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../extent.js\").Extent} extent Extent.\r\n   * @protected\r\n   * @return {import(\"../extent.js\").Extent} extent Extent.\r\n   */\r\n  computeExtent(extent) {\r\n    return createOrUpdateFromFlatCoordinates(\r\n      this.flatCoordinates,\r\n      0,\r\n      this.flatCoordinates.length,\r\n      this.stride,\r\n      extent\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @abstract\r\n   * @return {Array<*> | null} Coordinates.\r\n   */\r\n  getCoordinates() {\r\n    return abstract();\r\n  }\r\n\r\n  /**\r\n   * Return the first coordinate of the geometry.\r\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\r\n   * @api\r\n   */\r\n  getFirstCoordinate() {\r\n    return this.flatCoordinates.slice(0, this.stride);\r\n  }\r\n\r\n  /**\r\n   * @return {Array<number>} Flat coordinates.\r\n   */\r\n  getFlatCoordinates() {\r\n    return this.flatCoordinates;\r\n  }\r\n\r\n  /**\r\n   * Return the last coordinate of the geometry.\r\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\r\n   * @api\r\n   */\r\n  getLastCoordinate() {\r\n    return this.flatCoordinates.slice(\r\n      this.flatCoordinates.length - this.stride\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Return the {@link import(\"./Geometry.js\").GeometryLayout layout} of the geometry.\r\n   * @return {import(\"./Geometry.js\").GeometryLayout} Layout.\r\n   * @api\r\n   */\r\n  getLayout() {\r\n    return this.layout;\r\n  }\r\n\r\n  /**\r\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\r\n   * @param {number} squaredTolerance Squared tolerance.\r\n   * @return {SimpleGeometry} Simplified geometry.\r\n   */\r\n  getSimplifiedGeometry(squaredTolerance) {\r\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\r\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\r\n      this.simplifiedGeometryRevision = this.getRevision();\r\n    }\r\n    // If squaredTolerance is negative or if we know that simplification will not\r\n    // have any effect then just return this.\r\n    if (\r\n      squaredTolerance < 0 ||\r\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\r\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\r\n    ) {\r\n      return this;\r\n    }\r\n\r\n    const simplifiedGeometry =\r\n      this.getSimplifiedGeometryInternal(squaredTolerance);\r\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\r\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\r\n      return simplifiedGeometry;\r\n    } else {\r\n      // Simplification did not actually remove any coordinates.  We now know\r\n      // that any calls to getSimplifiedGeometry with a squaredTolerance less\r\n      // than or equal to the current squaredTolerance will also not have any\r\n      // effect.  This allows us to short circuit simplification (saving CPU\r\n      // cycles) and prevents the cache of simplified geometries from filling\r\n      // up with useless identical copies of this geometry (saving memory).\r\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\r\n      return this;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {number} squaredTolerance Squared tolerance.\r\n   * @return {SimpleGeometry} Simplified geometry.\r\n   * @protected\r\n   */\r\n  getSimplifiedGeometryInternal(squaredTolerance) {\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @return {number} Stride.\r\n   */\r\n  getStride() {\r\n    return this.stride;\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\r\n   * @param {Array<number>} flatCoordinates Flat coordinates.\r\n   */\r\n  setFlatCoordinates(layout, flatCoordinates) {\r\n    this.stride = getStrideForLayout(layout);\r\n    this.layout = layout;\r\n    this.flatCoordinates = flatCoordinates;\r\n  }\r\n\r\n  /**\r\n   * @abstract\r\n   * @param {!Array<*>} coordinates Coordinates.\r\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\r\n   */\r\n  setCoordinates(coordinates, layout) {\r\n    abstract();\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"./Geometry.js\").GeometryLayout|undefined} layout Layout.\r\n   * @param {Array<*>} coordinates Coordinates.\r\n   * @param {number} nesting Nesting.\r\n   * @protected\r\n   */\r\n  setLayout(layout, coordinates, nesting) {\r\n    /** @type {number} */\r\n    let stride;\r\n    if (layout) {\r\n      stride = getStrideForLayout(layout);\r\n    } else {\r\n      for (let i = 0; i < nesting; ++i) {\r\n        if (coordinates.length === 0) {\r\n          this.layout = 'XY';\r\n          this.stride = 2;\r\n          return;\r\n        } else {\r\n          coordinates = /** @type {Array} */ (coordinates[0]);\r\n        }\r\n      }\r\n      stride = coordinates.length;\r\n      layout = getLayoutForStride(stride);\r\n    }\r\n    this.layout = layout;\r\n    this.stride = stride;\r\n  }\r\n\r\n  /**\r\n   * Apply a transform function to the coordinates of the geometry.\r\n   * The geometry is modified in place.\r\n   * If you do not want the geometry modified in place, first `clone()` it and\r\n   * then use this function on the clone.\r\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\r\n   * Called with a flat array of geometry coordinates.\r\n   * @api\r\n   */\r\n  applyTransform(transformFn) {\r\n    if (this.flatCoordinates) {\r\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\r\n      this.changed();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Rotate the geometry around a given coordinate. This modifies the geometry\r\n   * coordinates in place.\r\n   * @param {number} angle Rotation angle in counter-clockwise radians.\r\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\r\n   * @api\r\n   */\r\n  rotate(angle, anchor) {\r\n    const flatCoordinates = this.getFlatCoordinates();\r\n    if (flatCoordinates) {\r\n      const stride = this.getStride();\r\n      rotate(\r\n        flatCoordinates,\r\n        0,\r\n        flatCoordinates.length,\r\n        stride,\r\n        angle,\r\n        anchor,\r\n        flatCoordinates\r\n      );\r\n      this.changed();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Scale the geometry (with an optional origin).  This modifies the geometry\r\n   * coordinates in place.\r\n   * @param {number} sx The scaling factor in the x-direction.\r\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\r\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\r\n   *     of the geometry extent).\r\n   * @api\r\n   */\r\n  scale(sx, sy, anchor) {\r\n    if (sy === undefined) {\r\n      sy = sx;\r\n    }\r\n    if (!anchor) {\r\n      anchor = getCenter(this.getExtent());\r\n    }\r\n    const flatCoordinates = this.getFlatCoordinates();\r\n    if (flatCoordinates) {\r\n      const stride = this.getStride();\r\n      scale(\r\n        flatCoordinates,\r\n        0,\r\n        flatCoordinates.length,\r\n        stride,\r\n        sx,\r\n        sy,\r\n        anchor,\r\n        flatCoordinates\r\n      );\r\n      this.changed();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\r\n   * instead you want a new geometry, first `clone()` this geometry.\r\n   * @param {number} deltaX Delta X.\r\n   * @param {number} deltaY Delta Y.\r\n   * @api\r\n   */\r\n  translate(deltaX, deltaY) {\r\n    const flatCoordinates = this.getFlatCoordinates();\r\n    if (flatCoordinates) {\r\n      const stride = this.getStride();\r\n      translate(\r\n        flatCoordinates,\r\n        0,\r\n        flatCoordinates.length,\r\n        stride,\r\n        deltaX,\r\n        deltaY,\r\n        flatCoordinates\r\n      );\r\n      this.changed();\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * @param {number} stride Stride.\r\n * @return {import(\"./Geometry.js\").GeometryLayout} layout Layout.\r\n */\r\nfunction getLayoutForStride(stride) {\r\n  let layout;\r\n  if (stride == 2) {\r\n    layout = 'XY';\r\n  } else if (stride == 3) {\r\n    layout = 'XYZ';\r\n  } else if (stride == 4) {\r\n    layout = 'XYZM';\r\n  }\r\n  return /** @type {import(\"./Geometry.js\").GeometryLayout} */ (layout);\r\n}\r\n\r\n/**\r\n * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\r\n * @return {number} Stride.\r\n */\r\nexport function getStrideForLayout(layout) {\r\n  let stride;\r\n  if (layout == 'XY') {\r\n    stride = 2;\r\n  } else if (layout == 'XYZ' || layout == 'XYM') {\r\n    stride = 3;\r\n  } else if (layout == 'XYZM') {\r\n    stride = 4;\r\n  }\r\n  return /** @type {number} */ (stride);\r\n}\r\n\r\n/**\r\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\r\n * @param {import(\"../transform.js\").Transform} transform Transform.\r\n * @param {Array<number>} [dest] Destination.\r\n * @return {Array<number>} Transformed flat coordinates.\r\n */\r\nexport function transformGeom2D(simpleGeometry, transform, dest) {\r\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\r\n  if (!flatCoordinates) {\r\n    return null;\r\n  } else {\r\n    const stride = simpleGeometry.getStride();\r\n    return transform2D(\r\n      flatCoordinates,\r\n      0,\r\n      flatCoordinates.length,\r\n      stride,\r\n      transform,\r\n      dest\r\n    );\r\n  }\r\n}\r\n\r\nexport default SimpleGeometry;\r\n","/**\r\n * @module ol/geom/flat/closest\r\n */\r\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\r\n\r\n/**\r\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\r\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\r\n * dimensions are linearly interpolated.\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset1 Offset 1.\r\n * @param {number} offset2 Offset 2.\r\n * @param {number} stride Stride.\r\n * @param {number} x X.\r\n * @param {number} y Y.\r\n * @param {Array<number>} closestPoint Closest point.\r\n */\r\nfunction assignClosest(\r\n  flatCoordinates,\r\n  offset1,\r\n  offset2,\r\n  stride,\r\n  x,\r\n  y,\r\n  closestPoint\r\n) {\r\n  const x1 = flatCoordinates[offset1];\r\n  const y1 = flatCoordinates[offset1 + 1];\r\n  const dx = flatCoordinates[offset2] - x1;\r\n  const dy = flatCoordinates[offset2 + 1] - y1;\r\n  let offset;\r\n  if (dx === 0 && dy === 0) {\r\n    offset = offset1;\r\n  } else {\r\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\r\n    if (t > 1) {\r\n      offset = offset2;\r\n    } else if (t > 0) {\r\n      for (let i = 0; i < stride; ++i) {\r\n        closestPoint[i] = lerp(\r\n          flatCoordinates[offset1 + i],\r\n          flatCoordinates[offset2 + i],\r\n          t\r\n        );\r\n      }\r\n      closestPoint.length = stride;\r\n      return;\r\n    } else {\r\n      offset = offset1;\r\n    }\r\n  }\r\n  for (let i = 0; i < stride; ++i) {\r\n    closestPoint[i] = flatCoordinates[offset + i];\r\n  }\r\n  closestPoint.length = stride;\r\n}\r\n\r\n/**\r\n * Return the squared of the largest distance between any pair of consecutive\r\n * coordinates.\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {number} end End.\r\n * @param {number} stride Stride.\r\n * @param {number} max Max squared delta.\r\n * @return {number} Max squared delta.\r\n */\r\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\r\n  let x1 = flatCoordinates[offset];\r\n  let y1 = flatCoordinates[offset + 1];\r\n  for (offset += stride; offset < end; offset += stride) {\r\n    const x2 = flatCoordinates[offset];\r\n    const y2 = flatCoordinates[offset + 1];\r\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\r\n    if (squaredDelta > max) {\r\n      max = squaredDelta;\r\n    }\r\n    x1 = x2;\r\n    y1 = y2;\r\n  }\r\n  return max;\r\n}\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {Array<number>} ends Ends.\r\n * @param {number} stride Stride.\r\n * @param {number} max Max squared delta.\r\n * @return {number} Max squared delta.\r\n */\r\nexport function arrayMaxSquaredDelta(\r\n  flatCoordinates,\r\n  offset,\r\n  ends,\r\n  stride,\r\n  max\r\n) {\r\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\r\n    const end = ends[i];\r\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\r\n    offset = end;\r\n  }\r\n  return max;\r\n}\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {Array<Array<number>>} endss Endss.\r\n * @param {number} stride Stride.\r\n * @param {number} max Max squared delta.\r\n * @return {number} Max squared delta.\r\n */\r\nexport function multiArrayMaxSquaredDelta(\r\n  flatCoordinates,\r\n  offset,\r\n  endss,\r\n  stride,\r\n  max\r\n) {\r\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\r\n    const ends = endss[i];\r\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\r\n    offset = ends[ends.length - 1];\r\n  }\r\n  return max;\r\n}\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {number} end End.\r\n * @param {number} stride Stride.\r\n * @param {number} maxDelta Max delta.\r\n * @param {boolean} isRing Is ring.\r\n * @param {number} x X.\r\n * @param {number} y Y.\r\n * @param {Array<number>} closestPoint Closest point.\r\n * @param {number} minSquaredDistance Minimum squared distance.\r\n * @param {Array<number>} [tmpPoint] Temporary point object.\r\n * @return {number} Minimum squared distance.\r\n */\r\nexport function assignClosestPoint(\r\n  flatCoordinates,\r\n  offset,\r\n  end,\r\n  stride,\r\n  maxDelta,\r\n  isRing,\r\n  x,\r\n  y,\r\n  closestPoint,\r\n  minSquaredDistance,\r\n  tmpPoint\r\n) {\r\n  if (offset == end) {\r\n    return minSquaredDistance;\r\n  }\r\n  let i, squaredDistance;\r\n  if (maxDelta === 0) {\r\n    // All points are identical, so just test the first point.\r\n    squaredDistance = squaredDx(\r\n      x,\r\n      y,\r\n      flatCoordinates[offset],\r\n      flatCoordinates[offset + 1]\r\n    );\r\n    if (squaredDistance < minSquaredDistance) {\r\n      for (i = 0; i < stride; ++i) {\r\n        closestPoint[i] = flatCoordinates[offset + i];\r\n      }\r\n      closestPoint.length = stride;\r\n      return squaredDistance;\r\n    } else {\r\n      return minSquaredDistance;\r\n    }\r\n  }\r\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\r\n  let index = offset + stride;\r\n  while (index < end) {\r\n    assignClosest(\r\n      flatCoordinates,\r\n      index - stride,\r\n      index,\r\n      stride,\r\n      x,\r\n      y,\r\n      tmpPoint\r\n    );\r\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\r\n    if (squaredDistance < minSquaredDistance) {\r\n      minSquaredDistance = squaredDistance;\r\n      for (i = 0; i < stride; ++i) {\r\n        closestPoint[i] = tmpPoint[i];\r\n      }\r\n      closestPoint.length = stride;\r\n      index += stride;\r\n    } else {\r\n      // Skip ahead multiple points, because we know that all the skipped\r\n      // points cannot be any closer than the closest point we have found so\r\n      // far.  We know this because we know how close the current point is, how\r\n      // close the closest point we have found so far is, and the maximum\r\n      // distance between consecutive points.  For example, if we're currently\r\n      // at distance 10, the best we've found so far is 3, and that the maximum\r\n      // distance between consecutive points is 2, then we'll need to skip at\r\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\r\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\r\n      // always advance at least one point, to avoid an infinite loop.\r\n      index +=\r\n        stride *\r\n        Math.max(\r\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\r\n            maxDelta) |\r\n            0,\r\n          1\r\n        );\r\n    }\r\n  }\r\n  if (isRing) {\r\n    // Check the closing segment.\r\n    assignClosest(\r\n      flatCoordinates,\r\n      end - stride,\r\n      offset,\r\n      stride,\r\n      x,\r\n      y,\r\n      tmpPoint\r\n    );\r\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\r\n    if (squaredDistance < minSquaredDistance) {\r\n      minSquaredDistance = squaredDistance;\r\n      for (i = 0; i < stride; ++i) {\r\n        closestPoint[i] = tmpPoint[i];\r\n      }\r\n      closestPoint.length = stride;\r\n    }\r\n  }\r\n  return minSquaredDistance;\r\n}\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {Array<number>} ends Ends.\r\n * @param {number} stride Stride.\r\n * @param {number} maxDelta Max delta.\r\n * @param {boolean} isRing Is ring.\r\n * @param {number} x X.\r\n * @param {number} y Y.\r\n * @param {Array<number>} closestPoint Closest point.\r\n * @param {number} minSquaredDistance Minimum squared distance.\r\n * @param {Array<number>} [tmpPoint] Temporary point object.\r\n * @return {number} Minimum squared distance.\r\n */\r\nexport function assignClosestArrayPoint(\r\n  flatCoordinates,\r\n  offset,\r\n  ends,\r\n  stride,\r\n  maxDelta,\r\n  isRing,\r\n  x,\r\n  y,\r\n  closestPoint,\r\n  minSquaredDistance,\r\n  tmpPoint\r\n) {\r\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\r\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\r\n    const end = ends[i];\r\n    minSquaredDistance = assignClosestPoint(\r\n      flatCoordinates,\r\n      offset,\r\n      end,\r\n      stride,\r\n      maxDelta,\r\n      isRing,\r\n      x,\r\n      y,\r\n      closestPoint,\r\n      minSquaredDistance,\r\n      tmpPoint\r\n    );\r\n    offset = end;\r\n  }\r\n  return minSquaredDistance;\r\n}\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {Array<Array<number>>} endss Endss.\r\n * @param {number} stride Stride.\r\n * @param {number} maxDelta Max delta.\r\n * @param {boolean} isRing Is ring.\r\n * @param {number} x X.\r\n * @param {number} y Y.\r\n * @param {Array<number>} closestPoint Closest point.\r\n * @param {number} minSquaredDistance Minimum squared distance.\r\n * @param {Array<number>} [tmpPoint] Temporary point object.\r\n * @return {number} Minimum squared distance.\r\n */\r\nexport function assignClosestMultiArrayPoint(\r\n  flatCoordinates,\r\n  offset,\r\n  endss,\r\n  stride,\r\n  maxDelta,\r\n  isRing,\r\n  x,\r\n  y,\r\n  closestPoint,\r\n  minSquaredDistance,\r\n  tmpPoint\r\n) {\r\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\r\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\r\n    const ends = endss[i];\r\n    minSquaredDistance = assignClosestArrayPoint(\r\n      flatCoordinates,\r\n      offset,\r\n      ends,\r\n      stride,\r\n      maxDelta,\r\n      isRing,\r\n      x,\r\n      y,\r\n      closestPoint,\r\n      minSquaredDistance,\r\n      tmpPoint\r\n    );\r\n    offset = ends[ends.length - 1];\r\n  }\r\n  return minSquaredDistance;\r\n}\r\n","/**\r\n * @module ol/geom/flat/deflate\r\n */\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\r\n * @param {number} stride Stride.\r\n * @return {number} offset Offset.\r\n */\r\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\r\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\r\n    flatCoordinates[offset++] = coordinate[i];\r\n  }\r\n  return offset;\r\n}\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\r\n * @param {number} stride Stride.\r\n * @return {number} offset Offset.\r\n */\r\nexport function deflateCoordinates(\r\n  flatCoordinates,\r\n  offset,\r\n  coordinates,\r\n  stride\r\n) {\r\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\r\n    const coordinate = coordinates[i];\r\n    for (let j = 0; j < stride; ++j) {\r\n      flatCoordinates[offset++] = coordinate[j];\r\n    }\r\n  }\r\n  return offset;\r\n}\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\r\n * @param {number} stride Stride.\r\n * @param {Array<number>} [ends] Ends.\r\n * @return {Array<number>} Ends.\r\n */\r\nexport function deflateCoordinatesArray(\r\n  flatCoordinates,\r\n  offset,\r\n  coordinatess,\r\n  stride,\r\n  ends\r\n) {\r\n  ends = ends ? ends : [];\r\n  let i = 0;\r\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\r\n    const end = deflateCoordinates(\r\n      flatCoordinates,\r\n      offset,\r\n      coordinatess[j],\r\n      stride\r\n    );\r\n    ends[i++] = end;\r\n    offset = end;\r\n  }\r\n  ends.length = i;\r\n  return ends;\r\n}\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\r\n * @param {number} stride Stride.\r\n * @param {Array<Array<number>>} [endss] Endss.\r\n * @return {Array<Array<number>>} Endss.\r\n */\r\nexport function deflateMultiCoordinatesArray(\r\n  flatCoordinates,\r\n  offset,\r\n  coordinatesss,\r\n  stride,\r\n  endss\r\n) {\r\n  endss = endss ? endss : [];\r\n  let i = 0;\r\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\r\n    const ends = deflateCoordinatesArray(\r\n      flatCoordinates,\r\n      offset,\r\n      coordinatesss[j],\r\n      stride,\r\n      endss[i]\r\n    );\r\n    if (ends.length === 0) {\r\n      ends[0] = offset;\r\n    }\r\n    endss[i++] = ends;\r\n    offset = ends[ends.length - 1];\r\n  }\r\n  endss.length = i;\r\n  return endss;\r\n}\r\n","/**\r\n * @module ol/geom/flat/simplify\r\n */\r\n// Based on simplify-js https://github.com/mourner/simplify-js\r\n// Copyright (c) 2012, Vladimir Agafonkin\r\n// All rights reserved.\r\n//\r\n// Redistribution and use in source and binary forms, with or without\r\n// modification, are permitted provided that the following conditions are met:\r\n//\r\n//    1. Redistributions of source code must retain the above copyright notice,\r\n//       this list of conditions and the following disclaimer.\r\n//\r\n//    2. Redistributions in binary form must reproduce the above copyright\r\n//       notice, this list of conditions and the following disclaimer in the\r\n//       documentation and/or other materials provided with the distribution.\r\n//\r\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\r\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n// POSSIBILITY OF SUCH DAMAGE.\r\n\r\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {number} end End.\r\n * @param {number} stride Stride.\r\n * @param {number} squaredTolerance Squared tolerance.\r\n * @param {boolean} highQuality Highest quality.\r\n * @param {Array<number>} [simplifiedFlatCoordinates] Simplified flat\r\n *     coordinates.\r\n * @return {Array<number>} Simplified line string.\r\n */\r\nexport function simplifyLineString(\r\n  flatCoordinates,\r\n  offset,\r\n  end,\r\n  stride,\r\n  squaredTolerance,\r\n  highQuality,\r\n  simplifiedFlatCoordinates\r\n) {\r\n  simplifiedFlatCoordinates =\r\n    simplifiedFlatCoordinates !== undefined ? simplifiedFlatCoordinates : [];\r\n  if (!highQuality) {\r\n    end = radialDistance(\r\n      flatCoordinates,\r\n      offset,\r\n      end,\r\n      stride,\r\n      squaredTolerance,\r\n      simplifiedFlatCoordinates,\r\n      0\r\n    );\r\n    flatCoordinates = simplifiedFlatCoordinates;\r\n    offset = 0;\r\n    stride = 2;\r\n  }\r\n  simplifiedFlatCoordinates.length = douglasPeucker(\r\n    flatCoordinates,\r\n    offset,\r\n    end,\r\n    stride,\r\n    squaredTolerance,\r\n    simplifiedFlatCoordinates,\r\n    0\r\n  );\r\n  return simplifiedFlatCoordinates;\r\n}\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {number} end End.\r\n * @param {number} stride Stride.\r\n * @param {number} squaredTolerance Squared tolerance.\r\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\r\n *     coordinates.\r\n * @param {number} simplifiedOffset Simplified offset.\r\n * @return {number} Simplified offset.\r\n */\r\nexport function douglasPeucker(\r\n  flatCoordinates,\r\n  offset,\r\n  end,\r\n  stride,\r\n  squaredTolerance,\r\n  simplifiedFlatCoordinates,\r\n  simplifiedOffset\r\n) {\r\n  const n = (end - offset) / stride;\r\n  if (n < 3) {\r\n    for (; offset < end; offset += stride) {\r\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\r\n      simplifiedFlatCoordinates[simplifiedOffset++] =\r\n        flatCoordinates[offset + 1];\r\n    }\r\n    return simplifiedOffset;\r\n  }\r\n  /** @type {Array<number>} */\r\n  const markers = new Array(n);\r\n  markers[0] = 1;\r\n  markers[n - 1] = 1;\r\n  /** @type {Array<number>} */\r\n  const stack = [offset, end - stride];\r\n  let index = 0;\r\n  while (stack.length > 0) {\r\n    const last = stack.pop();\r\n    const first = stack.pop();\r\n    let maxSquaredDistance = 0;\r\n    const x1 = flatCoordinates[first];\r\n    const y1 = flatCoordinates[first + 1];\r\n    const x2 = flatCoordinates[last];\r\n    const y2 = flatCoordinates[last + 1];\r\n    for (let i = first + stride; i < last; i += stride) {\r\n      const x = flatCoordinates[i];\r\n      const y = flatCoordinates[i + 1];\r\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\r\n      if (squaredDistance > maxSquaredDistance) {\r\n        index = i;\r\n        maxSquaredDistance = squaredDistance;\r\n      }\r\n    }\r\n    if (maxSquaredDistance > squaredTolerance) {\r\n      markers[(index - offset) / stride] = 1;\r\n      if (first + stride < index) {\r\n        stack.push(first, index);\r\n      }\r\n      if (index + stride < last) {\r\n        stack.push(index, last);\r\n      }\r\n    }\r\n  }\r\n  for (let i = 0; i < n; ++i) {\r\n    if (markers[i]) {\r\n      simplifiedFlatCoordinates[simplifiedOffset++] =\r\n        flatCoordinates[offset + i * stride];\r\n      simplifiedFlatCoordinates[simplifiedOffset++] =\r\n        flatCoordinates[offset + i * stride + 1];\r\n    }\r\n  }\r\n  return simplifiedOffset;\r\n}\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {Array<number>} ends Ends.\r\n * @param {number} stride Stride.\r\n * @param {number} squaredTolerance Squared tolerance.\r\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\r\n *     coordinates.\r\n * @param {number} simplifiedOffset Simplified offset.\r\n * @param {Array<number>} simplifiedEnds Simplified ends.\r\n * @return {number} Simplified offset.\r\n */\r\nexport function douglasPeuckerArray(\r\n  flatCoordinates,\r\n  offset,\r\n  ends,\r\n  stride,\r\n  squaredTolerance,\r\n  simplifiedFlatCoordinates,\r\n  simplifiedOffset,\r\n  simplifiedEnds\r\n) {\r\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\r\n    const end = ends[i];\r\n    simplifiedOffset = douglasPeucker(\r\n      flatCoordinates,\r\n      offset,\r\n      end,\r\n      stride,\r\n      squaredTolerance,\r\n      simplifiedFlatCoordinates,\r\n      simplifiedOffset\r\n    );\r\n    simplifiedEnds.push(simplifiedOffset);\r\n    offset = end;\r\n  }\r\n  return simplifiedOffset;\r\n}\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {Array<Array<number>>} endss Endss.\r\n * @param {number} stride Stride.\r\n * @param {number} squaredTolerance Squared tolerance.\r\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\r\n *     coordinates.\r\n * @param {number} simplifiedOffset Simplified offset.\r\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\r\n * @return {number} Simplified offset.\r\n */\r\nexport function douglasPeuckerMultiArray(\r\n  flatCoordinates,\r\n  offset,\r\n  endss,\r\n  stride,\r\n  squaredTolerance,\r\n  simplifiedFlatCoordinates,\r\n  simplifiedOffset,\r\n  simplifiedEndss\r\n) {\r\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\r\n    const ends = endss[i];\r\n    const simplifiedEnds = [];\r\n    simplifiedOffset = douglasPeuckerArray(\r\n      flatCoordinates,\r\n      offset,\r\n      ends,\r\n      stride,\r\n      squaredTolerance,\r\n      simplifiedFlatCoordinates,\r\n      simplifiedOffset,\r\n      simplifiedEnds\r\n    );\r\n    simplifiedEndss.push(simplifiedEnds);\r\n    offset = ends[ends.length - 1];\r\n  }\r\n  return simplifiedOffset;\r\n}\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {number} end End.\r\n * @param {number} stride Stride.\r\n * @param {number} squaredTolerance Squared tolerance.\r\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\r\n *     coordinates.\r\n * @param {number} simplifiedOffset Simplified offset.\r\n * @return {number} Simplified offset.\r\n */\r\nexport function radialDistance(\r\n  flatCoordinates,\r\n  offset,\r\n  end,\r\n  stride,\r\n  squaredTolerance,\r\n  simplifiedFlatCoordinates,\r\n  simplifiedOffset\r\n) {\r\n  if (end <= offset + stride) {\r\n    // zero or one point, no simplification possible, so copy and return\r\n    for (; offset < end; offset += stride) {\r\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\r\n      simplifiedFlatCoordinates[simplifiedOffset++] =\r\n        flatCoordinates[offset + 1];\r\n    }\r\n    return simplifiedOffset;\r\n  }\r\n  let x1 = flatCoordinates[offset];\r\n  let y1 = flatCoordinates[offset + 1];\r\n  // copy first point\r\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\r\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\r\n  let x2 = x1;\r\n  let y2 = y1;\r\n  for (offset += stride; offset < end; offset += stride) {\r\n    x2 = flatCoordinates[offset];\r\n    y2 = flatCoordinates[offset + 1];\r\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\r\n      // copy point at offset\r\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\r\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\r\n      x1 = x2;\r\n      y1 = y2;\r\n    }\r\n  }\r\n  if (x2 != x1 || y2 != y1) {\r\n    // copy last point\r\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\r\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\r\n  }\r\n  return simplifiedOffset;\r\n}\r\n\r\n/**\r\n * @param {number} value Value.\r\n * @param {number} tolerance Tolerance.\r\n * @return {number} Rounded value.\r\n */\r\nexport function snap(value, tolerance) {\r\n  return tolerance * Math.round(value / tolerance);\r\n}\r\n\r\n/**\r\n * Simplifies a line string using an algorithm designed by Tim Schaub.\r\n * Coordinates are snapped to the nearest value in a virtual grid and\r\n * consecutive duplicate coordinates are discarded.  This effectively preserves\r\n * topology as the simplification of any subsection of a line string is\r\n * independent of the rest of the line string.  This means that, for examples,\r\n * the common edge between two polygons will be simplified to the same line\r\n * string independently in both polygons.  This implementation uses a single\r\n * pass over the coordinates and eliminates intermediate collinear points.\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {number} end End.\r\n * @param {number} stride Stride.\r\n * @param {number} tolerance Tolerance.\r\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\r\n *     coordinates.\r\n * @param {number} simplifiedOffset Simplified offset.\r\n * @return {number} Simplified offset.\r\n */\r\nexport function quantize(\r\n  flatCoordinates,\r\n  offset,\r\n  end,\r\n  stride,\r\n  tolerance,\r\n  simplifiedFlatCoordinates,\r\n  simplifiedOffset\r\n) {\r\n  // do nothing if the line is empty\r\n  if (offset == end) {\r\n    return simplifiedOffset;\r\n  }\r\n  // snap the first coordinate (P1)\r\n  let x1 = snap(flatCoordinates[offset], tolerance);\r\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\r\n  offset += stride;\r\n  // add the first coordinate to the output\r\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\r\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\r\n  // find the next coordinate that does not snap to the same value as the first\r\n  // coordinate (P2)\r\n  let x2, y2;\r\n  do {\r\n    x2 = snap(flatCoordinates[offset], tolerance);\r\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\r\n    offset += stride;\r\n    if (offset == end) {\r\n      // all coordinates snap to the same value, the line collapses to a point\r\n      // push the last snapped value anyway to ensure that the output contains\r\n      // at least two points\r\n      // FIXME should we really return at least two points anyway?\r\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\r\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\r\n      return simplifiedOffset;\r\n    }\r\n  } while (x2 == x1 && y2 == y1);\r\n  while (offset < end) {\r\n    // snap the next coordinate (P3)\r\n    const x3 = snap(flatCoordinates[offset], tolerance);\r\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\r\n    offset += stride;\r\n    // skip P3 if it is equal to P2\r\n    if (x3 == x2 && y3 == y2) {\r\n      continue;\r\n    }\r\n    // calculate the delta between P1 and P2\r\n    const dx1 = x2 - x1;\r\n    const dy1 = y2 - y1;\r\n    // calculate the delta between P3 and P1\r\n    const dx2 = x3 - x1;\r\n    const dy2 = y3 - y1;\r\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\r\n    // P1 in the same direction then P2 is on the straight line between P1 and\r\n    // P3\r\n    if (\r\n      dx1 * dy2 == dy1 * dx2 &&\r\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\r\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\r\n    ) {\r\n      // discard P2 and set P2 = P3\r\n      x2 = x3;\r\n      y2 = y3;\r\n      continue;\r\n    }\r\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\r\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\r\n    // and continue with P1 = P2 and P2 = P3\r\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\r\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\r\n    x1 = x2;\r\n    y1 = y2;\r\n    x2 = x3;\r\n    y2 = y3;\r\n  }\r\n  // add the last point (P2)\r\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\r\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\r\n  return simplifiedOffset;\r\n}\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {Array<number>} ends Ends.\r\n * @param {number} stride Stride.\r\n * @param {number} tolerance Tolerance.\r\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\r\n *     coordinates.\r\n * @param {number} simplifiedOffset Simplified offset.\r\n * @param {Array<number>} simplifiedEnds Simplified ends.\r\n * @return {number} Simplified offset.\r\n */\r\nexport function quantizeArray(\r\n  flatCoordinates,\r\n  offset,\r\n  ends,\r\n  stride,\r\n  tolerance,\r\n  simplifiedFlatCoordinates,\r\n  simplifiedOffset,\r\n  simplifiedEnds\r\n) {\r\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\r\n    const end = ends[i];\r\n    simplifiedOffset = quantize(\r\n      flatCoordinates,\r\n      offset,\r\n      end,\r\n      stride,\r\n      tolerance,\r\n      simplifiedFlatCoordinates,\r\n      simplifiedOffset\r\n    );\r\n    simplifiedEnds.push(simplifiedOffset);\r\n    offset = end;\r\n  }\r\n  return simplifiedOffset;\r\n}\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {Array<Array<number>>} endss Endss.\r\n * @param {number} stride Stride.\r\n * @param {number} tolerance Tolerance.\r\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\r\n *     coordinates.\r\n * @param {number} simplifiedOffset Simplified offset.\r\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\r\n * @return {number} Simplified offset.\r\n */\r\nexport function quantizeMultiArray(\r\n  flatCoordinates,\r\n  offset,\r\n  endss,\r\n  stride,\r\n  tolerance,\r\n  simplifiedFlatCoordinates,\r\n  simplifiedOffset,\r\n  simplifiedEndss\r\n) {\r\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\r\n    const ends = endss[i];\r\n    const simplifiedEnds = [];\r\n    simplifiedOffset = quantizeArray(\r\n      flatCoordinates,\r\n      offset,\r\n      ends,\r\n      stride,\r\n      tolerance,\r\n      simplifiedFlatCoordinates,\r\n      simplifiedOffset,\r\n      simplifiedEnds\r\n    );\r\n    simplifiedEndss.push(simplifiedEnds);\r\n    offset = ends[ends.length - 1];\r\n  }\r\n  return simplifiedOffset;\r\n}\r\n","/**\r\n * @module ol/geom/flat/inflate\r\n */\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {number} end End.\r\n * @param {number} stride Stride.\r\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [coordinates] Coordinates.\r\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\r\n */\r\nexport function inflateCoordinates(\r\n  flatCoordinates,\r\n  offset,\r\n  end,\r\n  stride,\r\n  coordinates\r\n) {\r\n  coordinates = coordinates !== undefined ? coordinates : [];\r\n  let i = 0;\r\n  for (let j = offset; j < end; j += stride) {\r\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\r\n  }\r\n  coordinates.length = i;\r\n  return coordinates;\r\n}\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {Array<number>} ends Ends.\r\n * @param {number} stride Stride.\r\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [coordinatess] Coordinatess.\r\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\r\n */\r\nexport function inflateCoordinatesArray(\r\n  flatCoordinates,\r\n  offset,\r\n  ends,\r\n  stride,\r\n  coordinatess\r\n) {\r\n  coordinatess = coordinatess !== undefined ? coordinatess : [];\r\n  let i = 0;\r\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\r\n    const end = ends[j];\r\n    coordinatess[i++] = inflateCoordinates(\r\n      flatCoordinates,\r\n      offset,\r\n      end,\r\n      stride,\r\n      coordinatess[i]\r\n    );\r\n    offset = end;\r\n  }\r\n  coordinatess.length = i;\r\n  return coordinatess;\r\n}\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {Array<Array<number>>} endss Endss.\r\n * @param {number} stride Stride.\r\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [coordinatesss]\r\n *     Coordinatesss.\r\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\r\n */\r\nexport function inflateMultiCoordinatesArray(\r\n  flatCoordinates,\r\n  offset,\r\n  endss,\r\n  stride,\r\n  coordinatesss\r\n) {\r\n  coordinatesss = coordinatesss !== undefined ? coordinatesss : [];\r\n  let i = 0;\r\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\r\n    const ends = endss[j];\r\n    coordinatesss[i++] =\r\n      ends.length === 1 && ends[0] === offset\r\n        ? []\r\n        : inflateCoordinatesArray(\r\n            flatCoordinates,\r\n            offset,\r\n            ends,\r\n            stride,\r\n            coordinatesss[i]\r\n          );\r\n    offset = ends[ends.length - 1];\r\n  }\r\n  coordinatesss.length = i;\r\n  return coordinatesss;\r\n}\r\n","/**\r\n * @module ol/geom/flat/area\r\n */\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {number} end End.\r\n * @param {number} stride Stride.\r\n * @return {number} Area.\r\n */\r\nexport function linearRing(flatCoordinates, offset, end, stride) {\r\n  let twiceArea = 0;\r\n  let x1 = flatCoordinates[end - stride];\r\n  let y1 = flatCoordinates[end - stride + 1];\r\n  for (; offset < end; offset += stride) {\r\n    const x2 = flatCoordinates[offset];\r\n    const y2 = flatCoordinates[offset + 1];\r\n    twiceArea += y1 * x2 - x1 * y2;\r\n    x1 = x2;\r\n    y1 = y2;\r\n  }\r\n  return twiceArea / 2;\r\n}\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {Array<number>} ends Ends.\r\n * @param {number} stride Stride.\r\n * @return {number} Area.\r\n */\r\nexport function linearRings(flatCoordinates, offset, ends, stride) {\r\n  let area = 0;\r\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\r\n    const end = ends[i];\r\n    area += linearRing(flatCoordinates, offset, end, stride);\r\n    offset = end;\r\n  }\r\n  return area;\r\n}\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {Array<Array<number>>} endss Endss.\r\n * @param {number} stride Stride.\r\n * @return {number} Area.\r\n */\r\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\r\n  let area = 0;\r\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\r\n    const ends = endss[i];\r\n    area += linearRings(flatCoordinates, offset, ends, stride);\r\n    offset = ends[ends.length - 1];\r\n  }\r\n  return area;\r\n}\r\n","/**\r\n * @module ol/geom/LinearRing\r\n */\r\nimport SimpleGeometry from './SimpleGeometry.js';\r\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\r\nimport {closestSquaredDistanceXY} from '../extent.js';\r\nimport {deflateCoordinates} from './flat/deflate.js';\r\nimport {douglasPeucker} from './flat/simplify.js';\r\nimport {inflateCoordinates} from './flat/inflate.js';\r\nimport {linearRing as linearRingArea} from './flat/area.js';\r\n\r\n/**\r\n * @classdesc\r\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\r\n * on its own.\r\n *\r\n * @api\r\n */\r\nclass LinearRing extends SimpleGeometry {\r\n  /**\r\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\r\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\r\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\r\n   */\r\n  constructor(coordinates, layout) {\r\n    super();\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.maxDelta_ = -1;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.maxDeltaRevision_ = -1;\r\n\r\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\r\n      this.setFlatCoordinates(\r\n        layout,\r\n        /** @type {Array<number>} */ (coordinates)\r\n      );\r\n    } else {\r\n      this.setCoordinates(\r\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\r\n          coordinates\r\n        ),\r\n        layout\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Make a complete copy of the geometry.\r\n   * @return {!LinearRing} Clone.\r\n   * @api\r\n   */\r\n  clone() {\r\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\r\n  }\r\n\r\n  /**\r\n   * @param {number} x X.\r\n   * @param {number} y Y.\r\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\r\n   * @param {number} minSquaredDistance Minimum squared distance.\r\n   * @return {number} Minimum squared distance.\r\n   */\r\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\r\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\r\n      return minSquaredDistance;\r\n    }\r\n    if (this.maxDeltaRevision_ != this.getRevision()) {\r\n      this.maxDelta_ = Math.sqrt(\r\n        maxSquaredDelta(\r\n          this.flatCoordinates,\r\n          0,\r\n          this.flatCoordinates.length,\r\n          this.stride,\r\n          0\r\n        )\r\n      );\r\n      this.maxDeltaRevision_ = this.getRevision();\r\n    }\r\n    return assignClosestPoint(\r\n      this.flatCoordinates,\r\n      0,\r\n      this.flatCoordinates.length,\r\n      this.stride,\r\n      this.maxDelta_,\r\n      true,\r\n      x,\r\n      y,\r\n      closestPoint,\r\n      minSquaredDistance\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Return the area of the linear ring on projected plane.\r\n   * @return {number} Area (on projected plane).\r\n   * @api\r\n   */\r\n  getArea() {\r\n    return linearRingArea(\r\n      this.flatCoordinates,\r\n      0,\r\n      this.flatCoordinates.length,\r\n      this.stride\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Return the coordinates of the linear ring.\r\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\r\n   * @api\r\n   */\r\n  getCoordinates() {\r\n    return inflateCoordinates(\r\n      this.flatCoordinates,\r\n      0,\r\n      this.flatCoordinates.length,\r\n      this.stride\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @param {number} squaredTolerance Squared tolerance.\r\n   * @return {LinearRing} Simplified LinearRing.\r\n   * @protected\r\n   */\r\n  getSimplifiedGeometryInternal(squaredTolerance) {\r\n    const simplifiedFlatCoordinates = [];\r\n    simplifiedFlatCoordinates.length = douglasPeucker(\r\n      this.flatCoordinates,\r\n      0,\r\n      this.flatCoordinates.length,\r\n      this.stride,\r\n      squaredTolerance,\r\n      simplifiedFlatCoordinates,\r\n      0\r\n    );\r\n    return new LinearRing(simplifiedFlatCoordinates, 'XY');\r\n  }\r\n\r\n  /**\r\n   * Get the type of this geometry.\r\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\r\n   * @api\r\n   */\r\n  getType() {\r\n    return 'LinearRing';\r\n  }\r\n\r\n  /**\r\n   * Test if the geometry and the passed extent intersect.\r\n   * @param {import(\"../extent.js\").Extent} extent Extent.\r\n   * @return {boolean} `true` if the geometry and the extent intersect.\r\n   * @api\r\n   */\r\n  intersectsExtent(extent) {\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Set the coordinates of the linear ring.\r\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\r\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\r\n   * @api\r\n   */\r\n  setCoordinates(coordinates, layout) {\r\n    this.setLayout(layout, coordinates, 1);\r\n    if (!this.flatCoordinates) {\r\n      this.flatCoordinates = [];\r\n    }\r\n    this.flatCoordinates.length = deflateCoordinates(\r\n      this.flatCoordinates,\r\n      0,\r\n      coordinates,\r\n      this.stride\r\n    );\r\n    this.changed();\r\n  }\r\n}\r\n\r\nexport default LinearRing;\r\n","/**\r\n * @module ol/geom/Point\r\n */\r\nimport SimpleGeometry from './SimpleGeometry.js';\r\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\r\nimport {deflateCoordinate} from './flat/deflate.js';\r\nimport {squaredDistance as squaredDx} from '../math.js';\r\n\r\n/**\r\n * @classdesc\r\n * Point geometry.\r\n *\r\n * @api\r\n */\r\nclass Point extends SimpleGeometry {\r\n  /**\r\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\r\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\r\n   */\r\n  constructor(coordinates, layout) {\r\n    super();\r\n    this.setCoordinates(coordinates, layout);\r\n  }\r\n\r\n  /**\r\n   * Make a complete copy of the geometry.\r\n   * @return {!Point} Clone.\r\n   * @api\r\n   */\r\n  clone() {\r\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\r\n    point.applyProperties(this);\r\n    return point;\r\n  }\r\n\r\n  /**\r\n   * @param {number} x X.\r\n   * @param {number} y Y.\r\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\r\n   * @param {number} minSquaredDistance Minimum squared distance.\r\n   * @return {number} Minimum squared distance.\r\n   */\r\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\r\n    const flatCoordinates = this.flatCoordinates;\r\n    const squaredDistance = squaredDx(\r\n      x,\r\n      y,\r\n      flatCoordinates[0],\r\n      flatCoordinates[1]\r\n    );\r\n    if (squaredDistance < minSquaredDistance) {\r\n      const stride = this.stride;\r\n      for (let i = 0; i < stride; ++i) {\r\n        closestPoint[i] = flatCoordinates[i];\r\n      }\r\n      closestPoint.length = stride;\r\n      return squaredDistance;\r\n    } else {\r\n      return minSquaredDistance;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Return the coordinate of the point.\r\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\r\n   * @api\r\n   */\r\n  getCoordinates() {\r\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../extent.js\").Extent} extent Extent.\r\n   * @protected\r\n   * @return {import(\"../extent.js\").Extent} extent Extent.\r\n   */\r\n  computeExtent(extent) {\r\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\r\n  }\r\n\r\n  /**\r\n   * Get the type of this geometry.\r\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\r\n   * @api\r\n   */\r\n  getType() {\r\n    return 'Point';\r\n  }\r\n\r\n  /**\r\n   * Test if the geometry and the passed extent intersect.\r\n   * @param {import(\"../extent.js\").Extent} extent Extent.\r\n   * @return {boolean} `true` if the geometry and the extent intersect.\r\n   * @api\r\n   */\r\n  intersectsExtent(extent) {\r\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\r\n  }\r\n\r\n  /**\r\n   * @param {!Array<*>} coordinates Coordinates.\r\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\r\n   * @api\r\n   */\r\n  setCoordinates(coordinates, layout) {\r\n    this.setLayout(layout, coordinates, 0);\r\n    if (!this.flatCoordinates) {\r\n      this.flatCoordinates = [];\r\n    }\r\n    this.flatCoordinates.length = deflateCoordinate(\r\n      this.flatCoordinates,\r\n      0,\r\n      coordinates,\r\n      this.stride\r\n    );\r\n    this.changed();\r\n  }\r\n}\r\n\r\nexport default Point;\r\n","/**\r\n * @module ol/geom/flat/contains\r\n */\r\nimport {forEachCorner} from '../../extent.js';\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {number} end End.\r\n * @param {number} stride Stride.\r\n * @param {import(\"../../extent.js\").Extent} extent Extent.\r\n * @return {boolean} Contains extent.\r\n */\r\nexport function linearRingContainsExtent(\r\n  flatCoordinates,\r\n  offset,\r\n  end,\r\n  stride,\r\n  extent\r\n) {\r\n  const outside = forEachCorner(\r\n    extent,\r\n    /**\r\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\r\n     * @return {boolean} Contains (x, y).\r\n     */\r\n    function (coordinate) {\r\n      return !linearRingContainsXY(\r\n        flatCoordinates,\r\n        offset,\r\n        end,\r\n        stride,\r\n        coordinate[0],\r\n        coordinate[1]\r\n      );\r\n    }\r\n  );\r\n  return !outside;\r\n}\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {number} end End.\r\n * @param {number} stride Stride.\r\n * @param {number} x X.\r\n * @param {number} y Y.\r\n * @return {boolean} Contains (x, y).\r\n */\r\nexport function linearRingContainsXY(\r\n  flatCoordinates,\r\n  offset,\r\n  end,\r\n  stride,\r\n  x,\r\n  y\r\n) {\r\n  // https://geomalgorithms.com/a03-_inclusion.html\r\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\r\n  // This code may be freely used and modified for any purpose\r\n  // providing that this copyright notice is included with it.\r\n  // SoftSurfer makes no warranty for this code, and cannot be held\r\n  // liable for any real or imagined damage resulting from its use.\r\n  // Users of this code must verify correctness for their application.\r\n  let wn = 0;\r\n  let x1 = flatCoordinates[end - stride];\r\n  let y1 = flatCoordinates[end - stride + 1];\r\n  for (; offset < end; offset += stride) {\r\n    const x2 = flatCoordinates[offset];\r\n    const y2 = flatCoordinates[offset + 1];\r\n    if (y1 <= y) {\r\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\r\n        wn++;\r\n      }\r\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\r\n      wn--;\r\n    }\r\n    x1 = x2;\r\n    y1 = y2;\r\n  }\r\n  return wn !== 0;\r\n}\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {Array<number>} ends Ends.\r\n * @param {number} stride Stride.\r\n * @param {number} x X.\r\n * @param {number} y Y.\r\n * @return {boolean} Contains (x, y).\r\n */\r\nexport function linearRingsContainsXY(\r\n  flatCoordinates,\r\n  offset,\r\n  ends,\r\n  stride,\r\n  x,\r\n  y\r\n) {\r\n  if (ends.length === 0) {\r\n    return false;\r\n  }\r\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\r\n    return false;\r\n  }\r\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\r\n    if (\r\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\r\n    ) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {Array<Array<number>>} endss Endss.\r\n * @param {number} stride Stride.\r\n * @param {number} x X.\r\n * @param {number} y Y.\r\n * @return {boolean} Contains (x, y).\r\n */\r\nexport function linearRingssContainsXY(\r\n  flatCoordinates,\r\n  offset,\r\n  endss,\r\n  stride,\r\n  x,\r\n  y\r\n) {\r\n  if (endss.length === 0) {\r\n    return false;\r\n  }\r\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\r\n    const ends = endss[i];\r\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\r\n      return true;\r\n    }\r\n    offset = ends[ends.length - 1];\r\n  }\r\n  return false;\r\n}\r\n","/**\r\n * @module ol/geom/flat/interiorpoint\r\n */\r\nimport {linearRingsContainsXY} from './contains.js';\r\nimport {numberSafeCompareFunction} from '../../array.js';\r\n\r\n/**\r\n * Calculates a point that is likely to lie in the interior of the linear rings.\r\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {Array<number>} ends Ends.\r\n * @param {number} stride Stride.\r\n * @param {Array<number>} flatCenters Flat centers.\r\n * @param {number} flatCentersOffset Flat center offset.\r\n * @param {Array<number>} [dest] Destination.\r\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\r\n * length of the horizontal intersection that the point belongs to.\r\n */\r\nexport function getInteriorPointOfArray(\r\n  flatCoordinates,\r\n  offset,\r\n  ends,\r\n  stride,\r\n  flatCenters,\r\n  flatCentersOffset,\r\n  dest\r\n) {\r\n  let i, ii, x, x1, x2, y1, y2;\r\n  const y = flatCenters[flatCentersOffset + 1];\r\n  /** @type {Array<number>} */\r\n  const intersections = [];\r\n  // Calculate intersections with the horizontal line\r\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\r\n    const end = ends[r];\r\n    x1 = flatCoordinates[end - stride];\r\n    y1 = flatCoordinates[end - stride + 1];\r\n    for (i = offset; i < end; i += stride) {\r\n      x2 = flatCoordinates[i];\r\n      y2 = flatCoordinates[i + 1];\r\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\r\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\r\n        intersections.push(x);\r\n      }\r\n      x1 = x2;\r\n      y1 = y2;\r\n    }\r\n  }\r\n  // Find the longest segment of the horizontal line that has its center point\r\n  // inside the linear ring.\r\n  let pointX = NaN;\r\n  let maxSegmentLength = -Infinity;\r\n  intersections.sort(numberSafeCompareFunction);\r\n  x1 = intersections[0];\r\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\r\n    x2 = intersections[i];\r\n    const segmentLength = Math.abs(x2 - x1);\r\n    if (segmentLength > maxSegmentLength) {\r\n      x = (x1 + x2) / 2;\r\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\r\n        pointX = x;\r\n        maxSegmentLength = segmentLength;\r\n      }\r\n    }\r\n    x1 = x2;\r\n  }\r\n  if (isNaN(pointX)) {\r\n    // There is no horizontal line that has its center point inside the linear\r\n    // ring.  Use the center of the the linear ring's extent.\r\n    pointX = flatCenters[flatCentersOffset];\r\n  }\r\n  if (dest) {\r\n    dest.push(pointX, y, maxSegmentLength);\r\n    return dest;\r\n  } else {\r\n    return [pointX, y, maxSegmentLength];\r\n  }\r\n}\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {Array<Array<number>>} endss Endss.\r\n * @param {number} stride Stride.\r\n * @param {Array<number>} flatCenters Flat centers.\r\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\r\n * length of the horizontal intersection that the point belongs to.\r\n */\r\nexport function getInteriorPointsOfMultiArray(\r\n  flatCoordinates,\r\n  offset,\r\n  endss,\r\n  stride,\r\n  flatCenters\r\n) {\r\n  let interiorPoints = [];\r\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\r\n    const ends = endss[i];\r\n    interiorPoints = getInteriorPointOfArray(\r\n      flatCoordinates,\r\n      offset,\r\n      ends,\r\n      stride,\r\n      flatCenters,\r\n      2 * i,\r\n      interiorPoints\r\n    );\r\n    offset = ends[ends.length - 1];\r\n  }\r\n  return interiorPoints;\r\n}\r\n","/**\r\n * @module ol/geom/flat/segments\r\n */\r\n\r\n/**\r\n * This function calls `callback` for each segment of the flat coordinates\r\n * array. If the callback returns a truthy value the function returns that\r\n * value immediately. Otherwise the function returns `false`.\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {number} end End.\r\n * @param {number} stride Stride.\r\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\r\n *     called for each segment.\r\n * @return {T|boolean} Value.\r\n * @template T\r\n */\r\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\r\n  let ret;\r\n  offset += stride;\r\n  for (; offset < end; offset += stride) {\r\n    ret = callback(\r\n      flatCoordinates.slice(offset - stride, offset),\r\n      flatCoordinates.slice(offset, offset + stride)\r\n    );\r\n    if (ret) {\r\n      return ret;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n","/**\r\n * @module ol/geom/flat/intersectsextent\r\n */\r\nimport {\r\n  containsExtent,\r\n  createEmpty,\r\n  extendFlatCoordinates,\r\n  intersects,\r\n  intersectsSegment,\r\n} from '../../extent.js';\r\nimport {forEach as forEachSegment} from './segments.js';\r\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {number} end End.\r\n * @param {number} stride Stride.\r\n * @param {import(\"../../extent.js\").Extent} extent Extent.\r\n * @return {boolean} True if the geometry and the extent intersect.\r\n */\r\nexport function intersectsLineString(\r\n  flatCoordinates,\r\n  offset,\r\n  end,\r\n  stride,\r\n  extent\r\n) {\r\n  const coordinatesExtent = extendFlatCoordinates(\r\n    createEmpty(),\r\n    flatCoordinates,\r\n    offset,\r\n    end,\r\n    stride\r\n  );\r\n  if (!intersects(extent, coordinatesExtent)) {\r\n    return false;\r\n  }\r\n  if (containsExtent(extent, coordinatesExtent)) {\r\n    return true;\r\n  }\r\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\r\n    return true;\r\n  }\r\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\r\n    return true;\r\n  }\r\n  return forEachSegment(\r\n    flatCoordinates,\r\n    offset,\r\n    end,\r\n    stride,\r\n    /**\r\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\r\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\r\n     * @return {boolean} `true` if the segment and the extent intersect,\r\n     *     `false` otherwise.\r\n     */\r\n    function (point1, point2) {\r\n      return intersectsSegment(extent, point1, point2);\r\n    }\r\n  );\r\n}\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {Array<number>} ends Ends.\r\n * @param {number} stride Stride.\r\n * @param {import(\"../../extent.js\").Extent} extent Extent.\r\n * @return {boolean} True if the geometry and the extent intersect.\r\n */\r\nexport function intersectsLineStringArray(\r\n  flatCoordinates,\r\n  offset,\r\n  ends,\r\n  stride,\r\n  extent\r\n) {\r\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\r\n    if (\r\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\r\n    ) {\r\n      return true;\r\n    }\r\n    offset = ends[i];\r\n  }\r\n  return false;\r\n}\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {number} end End.\r\n * @param {number} stride Stride.\r\n * @param {import(\"../../extent.js\").Extent} extent Extent.\r\n * @return {boolean} True if the geometry and the extent intersect.\r\n */\r\nexport function intersectsLinearRing(\r\n  flatCoordinates,\r\n  offset,\r\n  end,\r\n  stride,\r\n  extent\r\n) {\r\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\r\n    return true;\r\n  }\r\n  if (\r\n    linearRingContainsXY(\r\n      flatCoordinates,\r\n      offset,\r\n      end,\r\n      stride,\r\n      extent[0],\r\n      extent[1]\r\n    )\r\n  ) {\r\n    return true;\r\n  }\r\n  if (\r\n    linearRingContainsXY(\r\n      flatCoordinates,\r\n      offset,\r\n      end,\r\n      stride,\r\n      extent[0],\r\n      extent[3]\r\n    )\r\n  ) {\r\n    return true;\r\n  }\r\n  if (\r\n    linearRingContainsXY(\r\n      flatCoordinates,\r\n      offset,\r\n      end,\r\n      stride,\r\n      extent[2],\r\n      extent[1]\r\n    )\r\n  ) {\r\n    return true;\r\n  }\r\n  if (\r\n    linearRingContainsXY(\r\n      flatCoordinates,\r\n      offset,\r\n      end,\r\n      stride,\r\n      extent[2],\r\n      extent[3]\r\n    )\r\n  ) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {Array<number>} ends Ends.\r\n * @param {number} stride Stride.\r\n * @param {import(\"../../extent.js\").Extent} extent Extent.\r\n * @return {boolean} True if the geometry and the extent intersect.\r\n */\r\nexport function intersectsLinearRingArray(\r\n  flatCoordinates,\r\n  offset,\r\n  ends,\r\n  stride,\r\n  extent\r\n) {\r\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\r\n    return false;\r\n  }\r\n  if (ends.length === 1) {\r\n    return true;\r\n  }\r\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\r\n    if (\r\n      linearRingContainsExtent(\r\n        flatCoordinates,\r\n        ends[i - 1],\r\n        ends[i],\r\n        stride,\r\n        extent\r\n      )\r\n    ) {\r\n      if (\r\n        !intersectsLineString(\r\n          flatCoordinates,\r\n          ends[i - 1],\r\n          ends[i],\r\n          stride,\r\n          extent\r\n        )\r\n      ) {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n  return true;\r\n}\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {Array<Array<number>>} endss Endss.\r\n * @param {number} stride Stride.\r\n * @param {import(\"../../extent.js\").Extent} extent Extent.\r\n * @return {boolean} True if the geometry and the extent intersect.\r\n */\r\nexport function intersectsLinearRingMultiArray(\r\n  flatCoordinates,\r\n  offset,\r\n  endss,\r\n  stride,\r\n  extent\r\n) {\r\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\r\n    const ends = endss[i];\r\n    if (\r\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\r\n    ) {\r\n      return true;\r\n    }\r\n    offset = ends[ends.length - 1];\r\n  }\r\n  return false;\r\n}\r\n","/**\r\n * @module ol/geom/flat/reverse\r\n */\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {number} end End.\r\n * @param {number} stride Stride.\r\n */\r\nexport function coordinates(flatCoordinates, offset, end, stride) {\r\n  while (offset < end - stride) {\r\n    for (let i = 0; i < stride; ++i) {\r\n      const tmp = flatCoordinates[offset + i];\r\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\r\n      flatCoordinates[end - stride + i] = tmp;\r\n    }\r\n    offset += stride;\r\n    end -= stride;\r\n  }\r\n}\r\n","/**\r\n * @module ol/geom/flat/orient\r\n */\r\nimport {coordinates as reverseCoordinates} from './reverse.js';\r\n\r\n/**\r\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\r\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\r\n * the ring's orientation is clockwise when this function returns false.\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {number} end End.\r\n * @param {number} stride Stride.\r\n * @return {boolean} Is clockwise.\r\n */\r\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\r\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\r\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\r\n  let edge = 0;\r\n  let x1 = flatCoordinates[end - stride];\r\n  let y1 = flatCoordinates[end - stride + 1];\r\n  for (; offset < end; offset += stride) {\r\n    const x2 = flatCoordinates[offset];\r\n    const y2 = flatCoordinates[offset + 1];\r\n    edge += (x2 - x1) * (y2 + y1);\r\n    x1 = x2;\r\n    y1 = y2;\r\n  }\r\n  return edge === 0 ? undefined : edge > 0;\r\n}\r\n\r\n/**\r\n * Determines if linear rings are oriented.  By default, left-hand orientation\r\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\r\n * To test for right-hand orientation, use the `right` argument.\r\n *\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {Array<number>} ends Array of end indexes.\r\n * @param {number} stride Stride.\r\n * @param {boolean} [right] Test for right-hand orientation\r\n *     (counter-clockwise exterior ring and clockwise interior rings).\r\n * @return {boolean} Rings are correctly oriented.\r\n */\r\nexport function linearRingsAreOriented(\r\n  flatCoordinates,\r\n  offset,\r\n  ends,\r\n  stride,\r\n  right\r\n) {\r\n  right = right !== undefined ? right : false;\r\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\r\n    const end = ends[i];\r\n    const isClockwise = linearRingIsClockwise(\r\n      flatCoordinates,\r\n      offset,\r\n      end,\r\n      stride\r\n    );\r\n    if (i === 0) {\r\n      if ((right && isClockwise) || (!right && !isClockwise)) {\r\n        return false;\r\n      }\r\n    } else {\r\n      if ((right && !isClockwise) || (!right && isClockwise)) {\r\n        return false;\r\n      }\r\n    }\r\n    offset = end;\r\n  }\r\n  return true;\r\n}\r\n\r\n/**\r\n * Determines if linear rings are oriented.  By default, left-hand orientation\r\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\r\n * To test for right-hand orientation, use the `right` argument.\r\n *\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {Array<Array<number>>} endss Array of array of end indexes.\r\n * @param {number} stride Stride.\r\n * @param {boolean} [right] Test for right-hand orientation\r\n *     (counter-clockwise exterior ring and clockwise interior rings).\r\n * @return {boolean} Rings are correctly oriented.\r\n */\r\nexport function linearRingssAreOriented(\r\n  flatCoordinates,\r\n  offset,\r\n  endss,\r\n  stride,\r\n  right\r\n) {\r\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\r\n    const ends = endss[i];\r\n    if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, right)) {\r\n      return false;\r\n    }\r\n    if (ends.length) {\r\n      offset = ends[ends.length - 1];\r\n    }\r\n  }\r\n  return true;\r\n}\r\n\r\n/**\r\n * Orient coordinates in a flat array of linear rings.  By default, rings\r\n * are oriented following the left-hand rule (clockwise for exterior and\r\n * counter-clockwise for interior rings).  To orient according to the\r\n * right-hand rule, use the `right` argument.\r\n *\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {Array<number>} ends Ends.\r\n * @param {number} stride Stride.\r\n * @param {boolean} [right] Follow the right-hand rule for orientation.\r\n * @return {number} End.\r\n */\r\nexport function orientLinearRings(\r\n  flatCoordinates,\r\n  offset,\r\n  ends,\r\n  stride,\r\n  right\r\n) {\r\n  right = right !== undefined ? right : false;\r\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\r\n    const end = ends[i];\r\n    const isClockwise = linearRingIsClockwise(\r\n      flatCoordinates,\r\n      offset,\r\n      end,\r\n      stride\r\n    );\r\n    const reverse =\r\n      i === 0\r\n        ? (right && isClockwise) || (!right && !isClockwise)\r\n        : (right && !isClockwise) || (!right && isClockwise);\r\n    if (reverse) {\r\n      reverseCoordinates(flatCoordinates, offset, end, stride);\r\n    }\r\n    offset = end;\r\n  }\r\n  return offset;\r\n}\r\n\r\n/**\r\n * Orient coordinates in a flat array of linear rings.  By default, rings\r\n * are oriented following the left-hand rule (clockwise for exterior and\r\n * counter-clockwise for interior rings).  To orient according to the\r\n * right-hand rule, use the `right` argument.\r\n *\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {Array<Array<number>>} endss Array of array of end indexes.\r\n * @param {number} stride Stride.\r\n * @param {boolean} [right] Follow the right-hand rule for orientation.\r\n * @return {number} End.\r\n */\r\nexport function orientLinearRingsArray(\r\n  flatCoordinates,\r\n  offset,\r\n  endss,\r\n  stride,\r\n  right\r\n) {\r\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\r\n    offset = orientLinearRings(\r\n      flatCoordinates,\r\n      offset,\r\n      endss[i],\r\n      stride,\r\n      right\r\n    );\r\n  }\r\n  return offset;\r\n}\r\n\r\n/**\r\n * Return a two-dimensional endss\r\n * @param {Array<number>} flatCoordinates Flat coordinates\r\n * @param {Array<number>} ends Linear ring end indexes\r\n * @return {Array<Array<number>>} Two dimensional endss array that can\r\n * be used to contruct a MultiPolygon\r\n */\r\nexport function inflateEnds(flatCoordinates, ends) {\r\n  const endss = [];\r\n  let offset = 0;\r\n  let prevEndIndex = 0;\r\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\r\n    const end = ends[i];\r\n    // classifies an array of rings into polygons with outer rings and holes\r\n    if (!linearRingIsClockwise(flatCoordinates, offset, end, 2)) {\r\n      endss.push(ends.slice(prevEndIndex, i + 1));\r\n    } else {\r\n      if (endss.length === 0) {\r\n        continue;\r\n      }\r\n      endss[endss.length - 1].push(ends[prevEndIndex]);\r\n    }\r\n    prevEndIndex = i + 1;\r\n    offset = end;\r\n  }\r\n  return endss;\r\n}\r\n","/**\r\n * @module ol/geom/Polygon\r\n */\r\nimport LinearRing from './LinearRing.js';\r\nimport Point from './Point.js';\r\nimport SimpleGeometry from './SimpleGeometry.js';\r\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\r\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\r\nimport {deflateCoordinatesArray} from './flat/deflate.js';\r\nimport {extend} from '../array.js';\r\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\r\nimport {inflateCoordinatesArray} from './flat/inflate.js';\r\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\r\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\r\nimport {linearRings as linearRingsArea} from './flat/area.js';\r\nimport {linearRingsContainsXY} from './flat/contains.js';\r\nimport {modulo} from '../math.js';\r\nimport {quantizeArray} from './flat/simplify.js';\r\nimport {offset as sphereOffset} from '../sphere.js';\r\n\r\n/**\r\n * @classdesc\r\n * Polygon geometry.\r\n *\r\n * @api\r\n */\r\nclass Polygon extends SimpleGeometry {\r\n  /**\r\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\r\n   *     Array of linear rings that define the polygon. The first linear ring of the\r\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\r\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\r\n   *     an array of vertices' coordinates where the first coordinate and the last are\r\n   *     equivalent. (For internal use, flat coordinates in combination with\r\n   *     `layout` and `ends` are also accepted.)\r\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\r\n   * @param {Array<number>} [ends] Ends (for internal use with flat coordinates).\r\n   */\r\n  constructor(coordinates, layout, ends) {\r\n    super();\r\n\r\n    /**\r\n     * @type {Array<number>}\r\n     * @private\r\n     */\r\n    this.ends_ = [];\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.flatInteriorPointRevision_ = -1;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../coordinate.js\").Coordinate}\r\n     */\r\n    this.flatInteriorPoint_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.maxDelta_ = -1;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.maxDeltaRevision_ = -1;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.orientedRevision_ = -1;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<number>}\r\n     */\r\n    this.orientedFlatCoordinates_ = null;\r\n\r\n    if (layout !== undefined && ends) {\r\n      this.setFlatCoordinates(\r\n        layout,\r\n        /** @type {Array<number>} */ (coordinates)\r\n      );\r\n      this.ends_ = ends;\r\n    } else {\r\n      this.setCoordinates(\r\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\r\n          coordinates\r\n        ),\r\n        layout\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Append the passed linear ring to this polygon.\r\n   * @param {LinearRing} linearRing Linear ring.\r\n   * @api\r\n   */\r\n  appendLinearRing(linearRing) {\r\n    if (!this.flatCoordinates) {\r\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\r\n    } else {\r\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\r\n    }\r\n    this.ends_.push(this.flatCoordinates.length);\r\n    this.changed();\r\n  }\r\n\r\n  /**\r\n   * Make a complete copy of the geometry.\r\n   * @return {!Polygon} Clone.\r\n   * @api\r\n   */\r\n  clone() {\r\n    const polygon = new Polygon(\r\n      this.flatCoordinates.slice(),\r\n      this.layout,\r\n      this.ends_.slice()\r\n    );\r\n    polygon.applyProperties(this);\r\n    return polygon;\r\n  }\r\n\r\n  /**\r\n   * @param {number} x X.\r\n   * @param {number} y Y.\r\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\r\n   * @param {number} minSquaredDistance Minimum squared distance.\r\n   * @return {number} Minimum squared distance.\r\n   */\r\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\r\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\r\n      return minSquaredDistance;\r\n    }\r\n    if (this.maxDeltaRevision_ != this.getRevision()) {\r\n      this.maxDelta_ = Math.sqrt(\r\n        arrayMaxSquaredDelta(\r\n          this.flatCoordinates,\r\n          0,\r\n          this.ends_,\r\n          this.stride,\r\n          0\r\n        )\r\n      );\r\n      this.maxDeltaRevision_ = this.getRevision();\r\n    }\r\n    return assignClosestArrayPoint(\r\n      this.flatCoordinates,\r\n      0,\r\n      this.ends_,\r\n      this.stride,\r\n      this.maxDelta_,\r\n      true,\r\n      x,\r\n      y,\r\n      closestPoint,\r\n      minSquaredDistance\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @param {number} x X.\r\n   * @param {number} y Y.\r\n   * @return {boolean} Contains (x, y).\r\n   */\r\n  containsXY(x, y) {\r\n    return linearRingsContainsXY(\r\n      this.getOrientedFlatCoordinates(),\r\n      0,\r\n      this.ends_,\r\n      this.stride,\r\n      x,\r\n      y\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Return the area of the polygon on projected plane.\r\n   * @return {number} Area (on projected plane).\r\n   * @api\r\n   */\r\n  getArea() {\r\n    return linearRingsArea(\r\n      this.getOrientedFlatCoordinates(),\r\n      0,\r\n      this.ends_,\r\n      this.stride\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Get the coordinate array for this geometry.  This array has the structure\r\n   * of a GeoJSON coordinate array for polygons.\r\n   *\r\n   * @param {boolean} [right] Orient coordinates according to the right-hand\r\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\r\n   *     If `false`, coordinates will be oriented according to the left-hand rule\r\n   *     (clockwise for exterior and counter-clockwise for interior rings).\r\n   *     By default, coordinate orientation will depend on how the geometry was\r\n   *     constructed.\r\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\r\n   * @api\r\n   */\r\n  getCoordinates(right) {\r\n    let flatCoordinates;\r\n    if (right !== undefined) {\r\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\r\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, right);\r\n    } else {\r\n      flatCoordinates = this.flatCoordinates;\r\n    }\r\n\r\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\r\n  }\r\n\r\n  /**\r\n   * @return {Array<number>} Ends.\r\n   */\r\n  getEnds() {\r\n    return this.ends_;\r\n  }\r\n\r\n  /**\r\n   * @return {Array<number>} Interior point.\r\n   */\r\n  getFlatInteriorPoint() {\r\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\r\n      const flatCenter = getCenter(this.getExtent());\r\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\r\n        this.getOrientedFlatCoordinates(),\r\n        0,\r\n        this.ends_,\r\n        this.stride,\r\n        flatCenter,\r\n        0\r\n      );\r\n      this.flatInteriorPointRevision_ = this.getRevision();\r\n    }\r\n    return this.flatInteriorPoint_;\r\n  }\r\n\r\n  /**\r\n   * Return an interior point of the polygon.\r\n   * @return {Point} Interior point as XYM coordinate, where M is the\r\n   * length of the horizontal intersection that the point belongs to.\r\n   * @api\r\n   */\r\n  getInteriorPoint() {\r\n    return new Point(this.getFlatInteriorPoint(), 'XYM');\r\n  }\r\n\r\n  /**\r\n   * Return the number of rings of the polygon,  this includes the exterior\r\n   * ring and any interior rings.\r\n   *\r\n   * @return {number} Number of rings.\r\n   * @api\r\n   */\r\n  getLinearRingCount() {\r\n    return this.ends_.length;\r\n  }\r\n\r\n  /**\r\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\r\n   * given index is out of range.\r\n   * The exterior linear ring is available at index `0` and the interior rings\r\n   * at index `1` and beyond.\r\n   *\r\n   * @param {number} index Index.\r\n   * @return {LinearRing|null} Linear ring.\r\n   * @api\r\n   */\r\n  getLinearRing(index) {\r\n    if (index < 0 || this.ends_.length <= index) {\r\n      return null;\r\n    }\r\n    return new LinearRing(\r\n      this.flatCoordinates.slice(\r\n        index === 0 ? 0 : this.ends_[index - 1],\r\n        this.ends_[index]\r\n      ),\r\n      this.layout\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Return the linear rings of the polygon.\r\n   * @return {Array<LinearRing>} Linear rings.\r\n   * @api\r\n   */\r\n  getLinearRings() {\r\n    const layout = this.layout;\r\n    const flatCoordinates = this.flatCoordinates;\r\n    const ends = this.ends_;\r\n    const linearRings = [];\r\n    let offset = 0;\r\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\r\n      const end = ends[i];\r\n      const linearRing = new LinearRing(\r\n        flatCoordinates.slice(offset, end),\r\n        layout\r\n      );\r\n      linearRings.push(linearRing);\r\n      offset = end;\r\n    }\r\n    return linearRings;\r\n  }\r\n\r\n  /**\r\n   * @return {Array<number>} Oriented flat coordinates.\r\n   */\r\n  getOrientedFlatCoordinates() {\r\n    if (this.orientedRevision_ != this.getRevision()) {\r\n      const flatCoordinates = this.flatCoordinates;\r\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\r\n        this.orientedFlatCoordinates_ = flatCoordinates;\r\n      } else {\r\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\r\n        this.orientedFlatCoordinates_.length = orientLinearRings(\r\n          this.orientedFlatCoordinates_,\r\n          0,\r\n          this.ends_,\r\n          this.stride\r\n        );\r\n      }\r\n      this.orientedRevision_ = this.getRevision();\r\n    }\r\n    return this.orientedFlatCoordinates_;\r\n  }\r\n\r\n  /**\r\n   * @param {number} squaredTolerance Squared tolerance.\r\n   * @return {Polygon} Simplified Polygon.\r\n   * @protected\r\n   */\r\n  getSimplifiedGeometryInternal(squaredTolerance) {\r\n    const simplifiedFlatCoordinates = [];\r\n    const simplifiedEnds = [];\r\n    simplifiedFlatCoordinates.length = quantizeArray(\r\n      this.flatCoordinates,\r\n      0,\r\n      this.ends_,\r\n      this.stride,\r\n      Math.sqrt(squaredTolerance),\r\n      simplifiedFlatCoordinates,\r\n      0,\r\n      simplifiedEnds\r\n    );\r\n    return new Polygon(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\r\n  }\r\n\r\n  /**\r\n   * Get the type of this geometry.\r\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\r\n   * @api\r\n   */\r\n  getType() {\r\n    return 'Polygon';\r\n  }\r\n\r\n  /**\r\n   * Test if the geometry and the passed extent intersect.\r\n   * @param {import(\"../extent.js\").Extent} extent Extent.\r\n   * @return {boolean} `true` if the geometry and the extent intersect.\r\n   * @api\r\n   */\r\n  intersectsExtent(extent) {\r\n    return intersectsLinearRingArray(\r\n      this.getOrientedFlatCoordinates(),\r\n      0,\r\n      this.ends_,\r\n      this.stride,\r\n      extent\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Set the coordinates of the polygon.\r\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\r\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\r\n   * @api\r\n   */\r\n  setCoordinates(coordinates, layout) {\r\n    this.setLayout(layout, coordinates, 2);\r\n    if (!this.flatCoordinates) {\r\n      this.flatCoordinates = [];\r\n    }\r\n    const ends = deflateCoordinatesArray(\r\n      this.flatCoordinates,\r\n      0,\r\n      coordinates,\r\n      this.stride,\r\n      this.ends_\r\n    );\r\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\r\n    this.changed();\r\n  }\r\n}\r\n\r\nexport default Polygon;\r\n\r\n/**\r\n * Create an approximation of a circle on the surface of a sphere.\r\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\r\n * @param {number} radius The great-circle distance from the center to\r\n *     the polygon vertices in meters.\r\n * @param {number} [n] Optional number of vertices for the resulting\r\n *     polygon. Default is `32`.\r\n * @param {number} [sphereRadius] Optional radius for the sphere (defaults to\r\n *     the Earth's mean radius using the WGS84 ellipsoid).\r\n * @return {Polygon} The \"circular\" polygon.\r\n * @api\r\n */\r\nexport function circular(center, radius, n, sphereRadius) {\r\n  n = n ? n : 32;\r\n  /** @type {Array<number>} */\r\n  const flatCoordinates = [];\r\n  for (let i = 0; i < n; ++i) {\r\n    extend(\r\n      flatCoordinates,\r\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, sphereRadius)\r\n    );\r\n  }\r\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\r\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\r\n}\r\n\r\n/**\r\n * Create a polygon from an extent. The layout used is `XY`.\r\n * @param {import(\"../extent.js\").Extent} extent The extent.\r\n * @return {Polygon} The polygon.\r\n * @api\r\n */\r\nexport function fromExtent(extent) {\r\n  const minX = extent[0];\r\n  const minY = extent[1];\r\n  const maxX = extent[2];\r\n  const maxY = extent[3];\r\n  const flatCoordinates = [\r\n    minX,\r\n    minY,\r\n    minX,\r\n    maxY,\r\n    maxX,\r\n    maxY,\r\n    maxX,\r\n    minY,\r\n    minX,\r\n    minY,\r\n  ];\r\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\r\n}\r\n\r\n/**\r\n * Create a regular polygon from a circle.\r\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\r\n * @param {number} [sides] Number of sides of the polygon. Default is 32.\r\n * @param {number} [angle] Start angle for the first vertex of the polygon in\r\n *     counter-clockwise radians. 0 means East. Default is 0.\r\n * @return {Polygon} Polygon geometry.\r\n * @api\r\n */\r\nexport function fromCircle(circle, sides, angle) {\r\n  sides = sides ? sides : 32;\r\n  const stride = circle.getStride();\r\n  const layout = circle.getLayout();\r\n  const center = circle.getCenter();\r\n  const arrayLength = stride * (sides + 1);\r\n  const flatCoordinates = new Array(arrayLength);\r\n  for (let i = 0; i < arrayLength; i += stride) {\r\n    flatCoordinates[i] = 0;\r\n    flatCoordinates[i + 1] = 0;\r\n    for (let j = 2; j < stride; j++) {\r\n      flatCoordinates[i + j] = center[j];\r\n    }\r\n  }\r\n  const ends = [flatCoordinates.length];\r\n  const polygon = new Polygon(flatCoordinates, layout, ends);\r\n  makeRegular(polygon, center, circle.getRadius(), angle);\r\n  return polygon;\r\n}\r\n\r\n/**\r\n * Modify the coordinates of a polygon to make it a regular polygon.\r\n * @param {Polygon} polygon Polygon geometry.\r\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\r\n * @param {number} radius Radius of the regular polygon.\r\n * @param {number} [angle] Start angle for the first vertex of the polygon in\r\n *     counter-clockwise radians. 0 means East. Default is 0.\r\n */\r\nexport function makeRegular(polygon, center, radius, angle) {\r\n  const flatCoordinates = polygon.getFlatCoordinates();\r\n  const stride = polygon.getStride();\r\n  const sides = flatCoordinates.length / stride - 1;\r\n  const startAngle = angle ? angle : 0;\r\n  for (let i = 0; i <= sides; ++i) {\r\n    const offset = i * stride;\r\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\r\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\r\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\r\n  }\r\n  polygon.changed();\r\n}\r\n","/**\r\n * @module ol/View\r\n */\r\nimport BaseObject from './Object.js';\r\nimport ViewHint from './ViewHint.js';\r\nimport ViewProperty from './ViewProperty.js';\r\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\r\nimport {\r\n  METERS_PER_UNIT,\r\n  createProjection,\r\n  disableCoordinateWarning,\r\n  fromUserCoordinate,\r\n  fromUserExtent,\r\n  getUserProjection,\r\n  toUserCoordinate,\r\n  toUserExtent,\r\n} from './proj.js';\r\nimport {VOID} from './functions.js';\r\nimport {\r\n  add as addCoordinate,\r\n  equals as coordinatesEqual,\r\n  equals,\r\n  rotate as rotateCoordinate,\r\n} from './coordinate.js';\r\nimport {assert} from './asserts.js';\r\nimport {none as centerNone, createExtent} from './centerconstraint.js';\r\nimport {clamp, modulo} from './math.js';\r\nimport {\r\n  createMinMaxResolution,\r\n  createSnapToPower,\r\n  createSnapToResolutions,\r\n} from './resolutionconstraint.js';\r\nimport {\r\n  createSnapToN,\r\n  createSnapToZero,\r\n  disable,\r\n  none as rotationNone,\r\n} from './rotationconstraint.js';\r\nimport {easeOut, inAndOut} from './easing.js';\r\nimport {\r\n  getCenter,\r\n  getForViewAndSize,\r\n  getHeight,\r\n  getWidth,\r\n  isEmpty,\r\n} from './extent.js';\r\nimport {linearFindNearest} from './array.js';\r\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\r\n\r\n/**\r\n * An animation configuration\r\n *\r\n * @typedef {Object} Animation\r\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\r\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\r\n * @property {number} [sourceResolution] Source resolution.\r\n * @property {number} [targetResolution] Target resolution.\r\n * @property {number} [sourceRotation] Source rotation.\r\n * @property {number} [targetRotation] Target rotation.\r\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\r\n * @property {number} start Start.\r\n * @property {number} duration Duration.\r\n * @property {boolean} complete Complete.\r\n * @property {function(number):number} easing Easing.\r\n * @property {function(boolean):void} callback Callback.\r\n */\r\n\r\n/**\r\n * @typedef {Object} Constraints\r\n * @property {import(\"./centerconstraint.js\").Type} center Center.\r\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\r\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\r\n */\r\n\r\n/**\r\n * @typedef {Object} FitOptions\r\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\r\n * the extent into. Default is the current size of the first map in the DOM that\r\n * uses this view, or `[100, 100]` if no such map is found.\r\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\r\n * cleared inside the view. Values in the array are top, right, bottom and left\r\n * padding.\r\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\r\n * get the nearest extent instead of the closest that actually fits the view.\r\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\r\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\r\n * `minResolution` is given, this property is ignored.\r\n * @property {number} [duration] The duration of the animation in milliseconds.\r\n * By default, there is no animation to the target extent.\r\n * @property {function(number):number} [easing] The easing function used during\r\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\r\n * The function will be called for each frame with a number representing a\r\n * fraction of the animation's duration.  The function should return a number\r\n * between 0 and 1 representing the progress toward the destination state.\r\n * @property {function(boolean):void} [callback] Function called when the view is in\r\n * its final position. The callback will be called with `true` if the animation\r\n * series completed on its own or `false` if it was cancelled.\r\n */\r\n\r\n/**\r\n * @typedef {Object} ViewOptions\r\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\r\n * the view. If a user projection is not set, the coordinate system for the center is\r\n * specified with the `projection` option. Layer sources will not be fetched if this\r\n * is not set, but the center can be set later with {@link #setCenter}.\r\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\r\n * `false` means no constraint. `true` means no constraint, but snap to zero\r\n * near zero. A number constrains the rotation to that number of values. For\r\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\r\n * @property {boolean} [enableRotation=true] Enable rotation.\r\n * If `false`, a rotation constraint that always sets the rotation to zero is\r\n * used. The `constrainRotation` option has no effect if `enableRotation` is\r\n * `false`.\r\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\r\n * view, in other words, nothing outside of this extent can be visible on the map.\r\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\r\n * constraint will only apply to the view center and not the whole extent.\r\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\r\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\r\n * of the given `extent`.\r\n * @property {number} [maxResolution] The maximum resolution used to determine\r\n * the resolution constraint. It is used together with `minResolution` (or\r\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\r\n * that the projection's validity extent fits in a 256x256 px tile. If the\r\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\r\n * to `40075016.68557849 / 256 = 156543.03392804097`.\r\n * @property {number} [minResolution] The minimum resolution used to determine\r\n * the resolution constraint.  It is used together with `maxResolution` (or\r\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\r\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\r\n * (the default) then `minResolution` defaults to\r\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\r\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\r\n * resolution constraint. It is used together with `minZoom` (or\r\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\r\n * provided, it is given precedence over `maxZoom`.\r\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\r\n * resolution constraint. It is used together with `maxZoom` (or\r\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\r\n * provided, it is given precedence over `minZoom`.\r\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\r\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\r\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\r\n * global.  Note that if `extent` is also provided it is given precedence.\r\n * @property {boolean} [constrainResolution=false] If true, the view will always\r\n * animate to the closest zoom level after an interaction; false means\r\n * intermediary zoom levels are allowed.\r\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\r\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\r\n * the given resolution or zoom bounds.\r\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\r\n * show the full configured extent. By default, when a view is configured with an\r\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\r\n * either dimension. This means the full extent may not be visible if the viewport\r\n * is taller or wider than the aspect ratio of the configured extent. If\r\n * showFullExtent is true, the user will be able to zoom out so that the viewport\r\n * exceeds the height or width of the configured extent, but not both, allowing the\r\n * full extent to be shown.\r\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\r\n * projection. The default is Spherical Mercator.\r\n * @property {number} [resolution] The initial resolution for the view. The\r\n * units are `projection` units per pixel (e.g. meters per pixel). An\r\n * alternative to setting this is to set `zoom`. Layer sources will not be\r\n * fetched if neither this nor `zoom` are defined, but they can be set later\r\n * with {@link #setZoom} or {@link #setResolution}.\r\n * @property {Array<number>} [resolutions] Resolutions that determine the\r\n * zoom levels if specified. The index in the array corresponds to the zoom level,\r\n * therefore the resolution values have to be in descending order. It also constrains\r\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\r\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\r\n * @property {number} [rotation=0] The initial rotation for the view in radians\r\n * (positive rotation clockwise, 0 means North).\r\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\r\n * level used to calculate the initial resolution for the view.\r\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\r\n * corresponding resolution.\r\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\r\n * If the map viewport is partially covered with other content (overlays) along\r\n * its edges, this setting allows to shift the center of the viewport away from\r\n * that content. The order of the values is top, right, bottom, left.\r\n */\r\n\r\n/**\r\n * @typedef {Object} AnimationOptions\r\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\r\n * the animation.\r\n * @property {number} [zoom] The zoom level of the view at the end of the\r\n * animation. This takes precedence over `resolution`.\r\n * @property {number} [resolution] The resolution of the view at the end\r\n * of the animation.  If `zoom` is also provided, this option will be ignored.\r\n * @property {number} [rotation] The rotation of the view at the end of\r\n * the animation.\r\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\r\n * during a rotation or resolution animation.\r\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\r\n * @property {function(number):number} [easing] The easing function used\r\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\r\n * The function will be called for each frame with a number representing a\r\n * fraction of the animation's duration.  The function should return a number\r\n * between 0 and 1 representing the progress toward the destination state.\r\n */\r\n\r\n/**\r\n * @typedef {Object} State\r\n * @property {import(\"./coordinate.js\").Coordinate} center Center.\r\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\r\n * @property {number} resolution Resolution.\r\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\r\n * @property {number} [nextResolution] The next resolution during an animation series.\r\n * @property {number} [nextRotation] The next rotation during an animation series.\r\n * @property {number} rotation Rotation.\r\n * @property {number} zoom Zoom.\r\n */\r\n\r\n/**\r\n * Default min zoom level for the map view.\r\n * @type {number}\r\n */\r\nconst DEFAULT_MIN_ZOOM = 0;\r\n\r\n/**\r\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\r\n */\r\n\r\n/***\r\n * @template Return\r\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\r\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\r\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * A View object represents a simple 2D view of the map.\r\n *\r\n * This is the object to act upon to change the center, resolution,\r\n * and rotation of the map.\r\n *\r\n * A View has a `projection`. The projection determines the\r\n * coordinate system of the center, and its units determine the units of the\r\n * resolution (projection units per pixel). The default projection is\r\n * Web Mercator (EPSG:3857).\r\n *\r\n * ### The view states\r\n *\r\n * A View is determined by three states: `center`, `resolution`,\r\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\r\n * `getCenter` and `setCenter` for the `center` state.\r\n *\r\n * The `zoom` state is actually not saved on the view: all computations\r\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\r\n * methods are available, as well as `getResolutionForZoom` and\r\n * `getZoomForResolution` to switch from one system to the other.\r\n *\r\n * ### The constraints\r\n *\r\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\r\n * states of the view, but any constraint defined in the constructor will\r\n * be applied along the way.\r\n *\r\n * A View object can have a *resolution constraint*, a *rotation constraint*\r\n * and a *center constraint*.\r\n *\r\n * The *resolution constraint* typically restricts min/max values and\r\n * snaps to specific resolutions. It is determined by the following\r\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\r\n * If `resolutions` is set, the other three options are ignored. See\r\n * documentation for each option for more information. By default, the view\r\n * only has a min/max restriction and allow intermediary zoom levels when\r\n * pinch-zooming for example.\r\n *\r\n * The *rotation constraint* snaps to specific angles. It is determined\r\n * by the following options: `enableRotation` and `constrainRotation`.\r\n * By default rotation is allowed and its value is snapped to zero when approaching the\r\n * horizontal.\r\n *\r\n * The *center constraint* is determined by the `extent` option. By\r\n * default the view center is not constrained at all.\r\n *\r\n * ### Changing the view state\r\n *\r\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\r\n * `setRotation` are subject to the above mentioned constraints. As such, it\r\n * may sometimes not be possible to know in advance the resulting state of the\r\n * View. For example, calling `setResolution(10)` does not guarantee that\r\n * `getResolution()` will return `10`.\r\n *\r\n * A consequence of this is that, when applying a delta on the view state, one\r\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\r\n * rather than the corresponding setters. This will let view do its internal\r\n * computations. Besides, the `adjust*` methods also take an `anchor`\r\n * argument which allows specifying an origin for the transformation.\r\n *\r\n * ### Interacting with the view\r\n *\r\n * View constraints are usually only applied when the view is *at rest*, meaning that\r\n * no interaction or animation is ongoing. As such, if the user puts the view in a\r\n * state that is not equivalent to a constrained one (e.g. rotating the view when\r\n * the snap angle is 0), an animation will be triggered at the interaction end to\r\n * put back the view to a stable state;\r\n *\r\n * @api\r\n */\r\nclass View extends BaseObject {\r\n  /**\r\n   * @param {ViewOptions} [options] View options.\r\n   */\r\n  constructor(options) {\r\n    super();\r\n\r\n    /***\r\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\r\n     */\r\n    this.on;\r\n\r\n    /***\r\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\r\n     */\r\n    this.once;\r\n\r\n    /***\r\n     * @type {ViewOnSignature<void>}\r\n     */\r\n    this.un;\r\n\r\n    options = Object.assign({}, options);\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<number>}\r\n     */\r\n    this.hints_ = [0, 0];\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<Array<Animation>>}\r\n     */\r\n    this.animations_ = [];\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.updateAnimationKey_;\r\n\r\n    /**\r\n     * @private\r\n     * @const\r\n     * @type {import(\"./proj/Projection.js\").default}\r\n     */\r\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"./size.js\").Size}\r\n     */\r\n    this.viewportSize_ = [100, 100];\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\r\n     */\r\n    this.targetCenter_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.targetResolution_;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.targetRotation_;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"./coordinate.js\").Coordinate}\r\n     */\r\n    this.nextCenter_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.nextResolution_;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.nextRotation_;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\r\n     */\r\n    this.cancelAnchor_ = undefined;\r\n\r\n    if (options.projection) {\r\n      disableCoordinateWarning();\r\n    }\r\n    if (options.center) {\r\n      options.center = fromUserCoordinate(options.center, this.projection_);\r\n    }\r\n    if (options.extent) {\r\n      options.extent = fromUserExtent(options.extent, this.projection_);\r\n    }\r\n\r\n    this.applyOptions_(options);\r\n  }\r\n\r\n  /**\r\n   * Set up the view with the given options.\r\n   * @param {ViewOptions} options View options.\r\n   */\r\n  applyOptions_(options) {\r\n    const properties = Object.assign({}, options);\r\n    for (const key in ViewProperty) {\r\n      delete properties[key];\r\n    }\r\n    this.setProperties(properties, true);\r\n\r\n    const resolutionConstraintInfo = createResolutionConstraint(options);\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<number>|undefined}\r\n     */\r\n    this.resolutions_ = options.resolutions;\r\n\r\n    /**\r\n     * @type {Array<number>|undefined}\r\n     * @private\r\n     */\r\n    this.padding_ = options.padding;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\r\n\r\n    const centerConstraint = createCenterConstraint(options);\r\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\r\n    const rotationConstraint = createRotationConstraint(options);\r\n\r\n    /**\r\n     * @private\r\n     * @type {Constraints}\r\n     */\r\n    this.constraints_ = {\r\n      center: centerConstraint,\r\n      resolution: resolutionConstraint,\r\n      rotation: rotationConstraint,\r\n    };\r\n\r\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\r\n    this.setCenterInternal(\r\n      options.center !== undefined ? options.center : null\r\n    );\r\n    if (options.resolution !== undefined) {\r\n      this.setResolution(options.resolution);\r\n    } else if (options.zoom !== undefined) {\r\n      this.setZoom(options.zoom);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Padding (in css pixels).\r\n   * If the map viewport is partially covered with other content (overlays) along\r\n   * its edges, this setting allows to shift the center of the viewport away from that\r\n   * content. The order of the values in the array is top, right, bottom, left.\r\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\r\n   * @type {Array<number>|undefined}\r\n   * @api\r\n   */\r\n  get padding() {\r\n    return this.padding_;\r\n  }\r\n  set padding(padding) {\r\n    let oldPadding = this.padding_;\r\n    this.padding_ = padding;\r\n    const center = this.getCenter();\r\n    if (center) {\r\n      const newPadding = padding || [0, 0, 0, 0];\r\n      oldPadding = oldPadding || [0, 0, 0, 0];\r\n      const resolution = this.getResolution();\r\n      const offsetX =\r\n        (resolution / 2) *\r\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\r\n      const offsetY =\r\n        (resolution / 2) *\r\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\r\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get an updated version of the view options used to construct the view.  The\r\n   * current resolution (or zoom), center, and rotation are applied to any stored\r\n   * options.  The provided options can be used to apply new min/max zoom or\r\n   * resolution limits.\r\n   * @param {ViewOptions} newOptions New options to be applied.\r\n   * @return {ViewOptions} New options updated with the current view state.\r\n   */\r\n  getUpdatedOptions_(newOptions) {\r\n    const options = this.getProperties();\r\n\r\n    // preserve resolution (or zoom)\r\n    if (options.resolution !== undefined) {\r\n      options.resolution = this.getResolution();\r\n    } else {\r\n      options.zoom = this.getZoom();\r\n    }\r\n\r\n    // preserve center\r\n    options.center = this.getCenterInternal();\r\n\r\n    // preserve rotation\r\n    options.rotation = this.getRotation();\r\n\r\n    return Object.assign({}, options, newOptions);\r\n  }\r\n\r\n  /**\r\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\r\n   * can be animated for smooth transitions between view states.  For example,\r\n   * to animate the view to a new zoom level:\r\n   *\r\n   *     view.animate({zoom: view.getZoom() + 1});\r\n   *\r\n   * By default, the animation lasts one second and uses in-and-out easing.  You\r\n   * can customize this behavior by including `duration` (in milliseconds) and\r\n   * `easing` options (see {@link module:ol/easing}).\r\n   *\r\n   * To chain together multiple animations, call the method with multiple\r\n   * animation objects.  For example, to first zoom and then pan:\r\n   *\r\n   *     view.animate({zoom: 10}, {center: [0, 0]});\r\n   *\r\n   * If you provide a function as the last argument to the animate method, it\r\n   * will get called at the end of an animation series.  The callback will be\r\n   * called with `true` if the animation series completed on its own or `false`\r\n   * if it was cancelled.\r\n   *\r\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\r\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\r\n   * (or another method that calls one of these).\r\n   *\r\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\r\n   *     options.  Multiple animations can be run in series by passing multiple\r\n   *     options objects.  To run multiple animations in parallel, call the method\r\n   *     multiple times.  An optional callback can be provided as a final\r\n   *     argument.  The callback will be called with a boolean indicating whether\r\n   *     the animation completed without being cancelled.\r\n   * @api\r\n   */\r\n  animate(var_args) {\r\n    if (this.isDef() && !this.getAnimating()) {\r\n      this.resolveConstraints(0);\r\n    }\r\n    const args = new Array(arguments.length);\r\n    for (let i = 0; i < args.length; ++i) {\r\n      let options = arguments[i];\r\n      if (options.center) {\r\n        options = Object.assign({}, options);\r\n        options.center = fromUserCoordinate(\r\n          options.center,\r\n          this.getProjection()\r\n        );\r\n      }\r\n      if (options.anchor) {\r\n        options = Object.assign({}, options);\r\n        options.anchor = fromUserCoordinate(\r\n          options.anchor,\r\n          this.getProjection()\r\n        );\r\n      }\r\n      args[i] = options;\r\n    }\r\n    this.animateInternal.apply(this, args);\r\n  }\r\n\r\n  /**\r\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\r\n   */\r\n  animateInternal(var_args) {\r\n    let animationCount = arguments.length;\r\n    let callback;\r\n    if (\r\n      animationCount > 1 &&\r\n      typeof arguments[animationCount - 1] === 'function'\r\n    ) {\r\n      callback = arguments[animationCount - 1];\r\n      --animationCount;\r\n    }\r\n\r\n    let i = 0;\r\n    for (; i < animationCount && !this.isDef(); ++i) {\r\n      // if view properties are not yet set, shortcut to the final state\r\n      const state = arguments[i];\r\n      if (state.center) {\r\n        this.setCenterInternal(state.center);\r\n      }\r\n      if (state.zoom !== undefined) {\r\n        this.setZoom(state.zoom);\r\n      } else if (state.resolution) {\r\n        this.setResolution(state.resolution);\r\n      }\r\n      if (state.rotation !== undefined) {\r\n        this.setRotation(state.rotation);\r\n      }\r\n    }\r\n    if (i === animationCount) {\r\n      if (callback) {\r\n        animationCallback(callback, true);\r\n      }\r\n      return;\r\n    }\r\n\r\n    let start = Date.now();\r\n    let center = this.targetCenter_.slice();\r\n    let resolution = this.targetResolution_;\r\n    let rotation = this.targetRotation_;\r\n    const series = [];\r\n    for (; i < animationCount; ++i) {\r\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\r\n\r\n      const animation = {\r\n        start: start,\r\n        complete: false,\r\n        anchor: options.anchor,\r\n        duration: options.duration !== undefined ? options.duration : 1000,\r\n        easing: options.easing || inAndOut,\r\n        callback: callback,\r\n      };\r\n\r\n      if (options.center) {\r\n        animation.sourceCenter = center;\r\n        animation.targetCenter = options.center.slice();\r\n        center = animation.targetCenter;\r\n      }\r\n\r\n      if (options.zoom !== undefined) {\r\n        animation.sourceResolution = resolution;\r\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\r\n        resolution = animation.targetResolution;\r\n      } else if (options.resolution) {\r\n        animation.sourceResolution = resolution;\r\n        animation.targetResolution = options.resolution;\r\n        resolution = animation.targetResolution;\r\n      }\r\n\r\n      if (options.rotation !== undefined) {\r\n        animation.sourceRotation = rotation;\r\n        const delta =\r\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\r\n        animation.targetRotation = rotation + delta;\r\n        rotation = animation.targetRotation;\r\n      }\r\n\r\n      // check if animation is a no-op\r\n      if (isNoopAnimation(animation)) {\r\n        animation.complete = true;\r\n        // we still push it onto the series for callback handling\r\n      } else {\r\n        start += animation.duration;\r\n      }\r\n      series.push(animation);\r\n    }\r\n    this.animations_.push(series);\r\n    this.setHint(ViewHint.ANIMATING, 1);\r\n    this.updateAnimations_();\r\n  }\r\n\r\n  /**\r\n   * Determine if the view is being animated.\r\n   * @return {boolean} The view is being animated.\r\n   * @api\r\n   */\r\n  getAnimating() {\r\n    return this.hints_[ViewHint.ANIMATING] > 0;\r\n  }\r\n\r\n  /**\r\n   * Determine if the user is interacting with the view, such as panning or zooming.\r\n   * @return {boolean} The view is being interacted with.\r\n   * @api\r\n   */\r\n  getInteracting() {\r\n    return this.hints_[ViewHint.INTERACTING] > 0;\r\n  }\r\n\r\n  /**\r\n   * Cancel any ongoing animations.\r\n   * @api\r\n   */\r\n  cancelAnimations() {\r\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\r\n    let anchor;\r\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\r\n      const series = this.animations_[i];\r\n      if (series[0].callback) {\r\n        animationCallback(series[0].callback, false);\r\n      }\r\n      if (!anchor) {\r\n        for (let j = 0, jj = series.length; j < jj; ++j) {\r\n          const animation = series[j];\r\n          if (!animation.complete) {\r\n            anchor = animation.anchor;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    this.animations_.length = 0;\r\n    this.cancelAnchor_ = anchor;\r\n    this.nextCenter_ = null;\r\n    this.nextResolution_ = NaN;\r\n    this.nextRotation_ = NaN;\r\n  }\r\n\r\n  /**\r\n   * Update all animations.\r\n   */\r\n  updateAnimations_() {\r\n    if (this.updateAnimationKey_ !== undefined) {\r\n      cancelAnimationFrame(this.updateAnimationKey_);\r\n      this.updateAnimationKey_ = undefined;\r\n    }\r\n    if (!this.getAnimating()) {\r\n      return;\r\n    }\r\n    const now = Date.now();\r\n    let more = false;\r\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\r\n      const series = this.animations_[i];\r\n      let seriesComplete = true;\r\n      for (let j = 0, jj = series.length; j < jj; ++j) {\r\n        const animation = series[j];\r\n        if (animation.complete) {\r\n          continue;\r\n        }\r\n        const elapsed = now - animation.start;\r\n        let fraction =\r\n          animation.duration > 0 ? elapsed / animation.duration : 1;\r\n        if (fraction >= 1) {\r\n          animation.complete = true;\r\n          fraction = 1;\r\n        } else {\r\n          seriesComplete = false;\r\n        }\r\n        const progress = animation.easing(fraction);\r\n        if (animation.sourceCenter) {\r\n          const x0 = animation.sourceCenter[0];\r\n          const y0 = animation.sourceCenter[1];\r\n          const x1 = animation.targetCenter[0];\r\n          const y1 = animation.targetCenter[1];\r\n          this.nextCenter_ = animation.targetCenter;\r\n          const x = x0 + progress * (x1 - x0);\r\n          const y = y0 + progress * (y1 - y0);\r\n          this.targetCenter_ = [x, y];\r\n        }\r\n        if (animation.sourceResolution && animation.targetResolution) {\r\n          const resolution =\r\n            progress === 1\r\n              ? animation.targetResolution\r\n              : animation.sourceResolution +\r\n                progress *\r\n                  (animation.targetResolution - animation.sourceResolution);\r\n          if (animation.anchor) {\r\n            const size = this.getViewportSize_(this.getRotation());\r\n            const constrainedResolution = this.constraints_.resolution(\r\n              resolution,\r\n              0,\r\n              size,\r\n              true\r\n            );\r\n            this.targetCenter_ = this.calculateCenterZoom(\r\n              constrainedResolution,\r\n              animation.anchor\r\n            );\r\n          }\r\n          this.nextResolution_ = animation.targetResolution;\r\n          this.targetResolution_ = resolution;\r\n          this.applyTargetState_(true);\r\n        }\r\n        if (\r\n          animation.sourceRotation !== undefined &&\r\n          animation.targetRotation !== undefined\r\n        ) {\r\n          const rotation =\r\n            progress === 1\r\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\r\n                Math.PI\r\n              : animation.sourceRotation +\r\n                progress *\r\n                  (animation.targetRotation - animation.sourceRotation);\r\n          if (animation.anchor) {\r\n            const constrainedRotation = this.constraints_.rotation(\r\n              rotation,\r\n              true\r\n            );\r\n            this.targetCenter_ = this.calculateCenterRotate(\r\n              constrainedRotation,\r\n              animation.anchor\r\n            );\r\n          }\r\n          this.nextRotation_ = animation.targetRotation;\r\n          this.targetRotation_ = rotation;\r\n        }\r\n        this.applyTargetState_(true);\r\n        more = true;\r\n        if (!animation.complete) {\r\n          break;\r\n        }\r\n      }\r\n      if (seriesComplete) {\r\n        this.animations_[i] = null;\r\n        this.setHint(ViewHint.ANIMATING, -1);\r\n        this.nextCenter_ = null;\r\n        this.nextResolution_ = NaN;\r\n        this.nextRotation_ = NaN;\r\n        const callback = series[0].callback;\r\n        if (callback) {\r\n          animationCallback(callback, true);\r\n        }\r\n      }\r\n    }\r\n    // prune completed series\r\n    this.animations_ = this.animations_.filter(Boolean);\r\n    if (more && this.updateAnimationKey_ === undefined) {\r\n      this.updateAnimationKey_ = requestAnimationFrame(\r\n        this.updateAnimations_.bind(this)\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {number} rotation Target rotation.\r\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\r\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\r\n   */\r\n  calculateCenterRotate(rotation, anchor) {\r\n    let center;\r\n    const currentCenter = this.getCenterInternal();\r\n    if (currentCenter !== undefined) {\r\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\r\n      rotateCoordinate(center, rotation - this.getRotation());\r\n      addCoordinate(center, anchor);\r\n    }\r\n    return center;\r\n  }\r\n\r\n  /**\r\n   * @param {number} resolution Target resolution.\r\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\r\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\r\n   */\r\n  calculateCenterZoom(resolution, anchor) {\r\n    let center;\r\n    const currentCenter = this.getCenterInternal();\r\n    const currentResolution = this.getResolution();\r\n    if (currentCenter !== undefined && currentResolution !== undefined) {\r\n      const x =\r\n        anchor[0] -\r\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\r\n      const y =\r\n        anchor[1] -\r\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\r\n      center = [x, y];\r\n    }\r\n    return center;\r\n  }\r\n\r\n  /**\r\n   * Returns the current viewport size.\r\n   * @private\r\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\r\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\r\n   */\r\n  getViewportSize_(rotation) {\r\n    const size = this.viewportSize_;\r\n    if (rotation) {\r\n      const w = size[0];\r\n      const h = size[1];\r\n      return [\r\n        Math.abs(w * Math.cos(rotation)) + Math.abs(h * Math.sin(rotation)),\r\n        Math.abs(w * Math.sin(rotation)) + Math.abs(h * Math.cos(rotation)),\r\n      ];\r\n    } else {\r\n      return size;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\r\n   * to avoid performance hit and layout reflow.\r\n   * This should be done on map size change.\r\n   * Note: the constraints are not resolved during an animation to avoid stopping it\r\n   * @param {import(\"./size.js\").Size} [size] Viewport size; if undefined, [100, 100] is assumed\r\n   */\r\n  setViewportSize(size) {\r\n    this.viewportSize_ = Array.isArray(size) ? size.slice() : [100, 100];\r\n    if (!this.getAnimating()) {\r\n      this.resolveConstraints(0);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get the view center.\r\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\r\n   * @observable\r\n   * @api\r\n   */\r\n  getCenter() {\r\n    const center = this.getCenterInternal();\r\n    if (!center) {\r\n      return center;\r\n    }\r\n    return toUserCoordinate(center, this.getProjection());\r\n  }\r\n\r\n  /**\r\n   * Get the view center without transforming to user projection.\r\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\r\n   */\r\n  getCenterInternal() {\r\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\r\n      this.get(ViewProperty.CENTER)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @return {Constraints} Constraints.\r\n   */\r\n  getConstraints() {\r\n    return this.constraints_;\r\n  }\r\n\r\n  /**\r\n   * @return {boolean} Resolution constraint is set\r\n   */\r\n  getConstrainResolution() {\r\n    return this.get('constrainResolution');\r\n  }\r\n\r\n  /**\r\n   * @param {Array<number>} [hints] Destination array.\r\n   * @return {Array<number>} Hint.\r\n   */\r\n  getHints(hints) {\r\n    if (hints !== undefined) {\r\n      hints[0] = this.hints_[0];\r\n      hints[1] = this.hints_[1];\r\n      return hints;\r\n    } else {\r\n      return this.hints_.slice();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Calculate the extent for the current view state and the passed size.\r\n   * The size is the pixel dimensions of the box into which the calculated extent\r\n   * should fit. In most cases you want to get the extent of the entire map,\r\n   * that is `map.getSize()`.\r\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided, the size\r\n   * of the map that uses this view will be used.\r\n   * @return {import(\"./extent.js\").Extent} Extent.\r\n   * @api\r\n   */\r\n  calculateExtent(size) {\r\n    const extent = this.calculateExtentInternal(size);\r\n    return toUserExtent(extent, this.getProjection());\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided,\r\n   * the map's last known viewport size will be used.\r\n   * @return {import(\"./extent.js\").Extent} Extent.\r\n   */\r\n  calculateExtentInternal(size) {\r\n    size = size || this.getViewportSizeMinusPadding_();\r\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\r\n      this.getCenterInternal()\r\n    );\r\n    assert(center, 1); // The view center is not defined\r\n    const resolution = /** @type {!number} */ (this.getResolution());\r\n    assert(resolution !== undefined, 2); // The view resolution is not defined\r\n    const rotation = /** @type {!number} */ (this.getRotation());\r\n    assert(rotation !== undefined, 3); // The view rotation is not defined\r\n\r\n    return getForViewAndSize(center, resolution, rotation, size);\r\n  }\r\n\r\n  /**\r\n   * Get the maximum resolution of the view.\r\n   * @return {number} The maximum resolution of the view.\r\n   * @api\r\n   */\r\n  getMaxResolution() {\r\n    return this.maxResolution_;\r\n  }\r\n\r\n  /**\r\n   * Get the minimum resolution of the view.\r\n   * @return {number} The minimum resolution of the view.\r\n   * @api\r\n   */\r\n  getMinResolution() {\r\n    return this.minResolution_;\r\n  }\r\n\r\n  /**\r\n   * Get the maximum zoom level for the view.\r\n   * @return {number} The maximum zoom level.\r\n   * @api\r\n   */\r\n  getMaxZoom() {\r\n    return /** @type {number} */ (\r\n      this.getZoomForResolution(this.minResolution_)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Set a new maximum zoom level for the view.\r\n   * @param {number} zoom The maximum zoom level.\r\n   * @api\r\n   */\r\n  setMaxZoom(zoom) {\r\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\r\n  }\r\n\r\n  /**\r\n   * Get the minimum zoom level for the view.\r\n   * @return {number} The minimum zoom level.\r\n   * @api\r\n   */\r\n  getMinZoom() {\r\n    return /** @type {number} */ (\r\n      this.getZoomForResolution(this.maxResolution_)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Set a new minimum zoom level for the view.\r\n   * @param {number} zoom The minimum zoom level.\r\n   * @api\r\n   */\r\n  setMinZoom(zoom) {\r\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\r\n  }\r\n\r\n  /**\r\n   * Set whether the view should allow intermediary zoom levels.\r\n   * @param {boolean} enabled Whether the resolution is constrained.\r\n   * @api\r\n   */\r\n  setConstrainResolution(enabled) {\r\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\r\n  }\r\n\r\n  /**\r\n   * Get the view projection.\r\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\r\n   * @api\r\n   */\r\n  getProjection() {\r\n    return this.projection_;\r\n  }\r\n\r\n  /**\r\n   * Get the view resolution.\r\n   * @return {number|undefined} The resolution of the view.\r\n   * @observable\r\n   * @api\r\n   */\r\n  getResolution() {\r\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\r\n  }\r\n\r\n  /**\r\n   * Get the resolutions for the view. This returns the array of resolutions\r\n   * passed to the constructor of the View, or undefined if none were given.\r\n   * @return {Array<number>|undefined} The resolutions of the view.\r\n   * @api\r\n   */\r\n  getResolutions() {\r\n    return this.resolutions_;\r\n  }\r\n\r\n  /**\r\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\r\n   * @param {import(\"./extent.js\").Extent} extent Extent.\r\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\r\n   * @return {number} The resolution at which the provided extent will render at\r\n   *     the given size.\r\n   * @api\r\n   */\r\n  getResolutionForExtent(extent, size) {\r\n    return this.getResolutionForExtentInternal(\r\n      fromUserExtent(extent, this.getProjection()),\r\n      size\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\r\n   * @param {import(\"./extent.js\").Extent} extent Extent.\r\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\r\n   * @return {number} The resolution at which the provided extent will render at\r\n   *     the given size.\r\n   */\r\n  getResolutionForExtentInternal(extent, size) {\r\n    size = size || this.getViewportSizeMinusPadding_();\r\n    const xResolution = getWidth(extent) / size[0];\r\n    const yResolution = getHeight(extent) / size[1];\r\n    return Math.max(xResolution, yResolution);\r\n  }\r\n\r\n  /**\r\n   * Return a function that returns a value between 0 and 1 for a\r\n   * resolution. Exponential scaling is assumed.\r\n   * @param {number} [power] Power.\r\n   * @return {function(number): number} Resolution for value function.\r\n   */\r\n  getResolutionForValueFunction(power) {\r\n    power = power || 2;\r\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\r\n    const minResolution = this.minResolution_;\r\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\r\n    return (\r\n      /**\r\n       * @param {number} value Value.\r\n       * @return {number} Resolution.\r\n       */\r\n      function (value) {\r\n        const resolution = maxResolution / Math.pow(power, value * max);\r\n        return resolution;\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Get the view rotation.\r\n   * @return {number} The rotation of the view in radians.\r\n   * @observable\r\n   * @api\r\n   */\r\n  getRotation() {\r\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\r\n  }\r\n\r\n  /**\r\n   * Return a function that returns a resolution for a value between\r\n   * 0 and 1. Exponential scaling is assumed.\r\n   * @param {number} [power] Power.\r\n   * @return {function(number): number} Value for resolution function.\r\n   */\r\n  getValueForResolutionFunction(power) {\r\n    const logPower = Math.log(power || 2);\r\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\r\n    const minResolution = this.minResolution_;\r\n    const max = Math.log(maxResolution / minResolution) / logPower;\r\n    return (\r\n      /**\r\n       * @param {number} resolution Resolution.\r\n       * @return {number} Value.\r\n       */\r\n      function (resolution) {\r\n        const value = Math.log(maxResolution / resolution) / logPower / max;\r\n        return value;\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Returns the size of the viewport minus padding.\r\n   * @private\r\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\r\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\r\n   */\r\n  getViewportSizeMinusPadding_(rotation) {\r\n    let size = this.getViewportSize_(rotation);\r\n    const padding = this.padding_;\r\n    if (padding) {\r\n      size = [\r\n        size[0] - padding[1] - padding[3],\r\n        size[1] - padding[0] - padding[2],\r\n      ];\r\n    }\r\n    return size;\r\n  }\r\n\r\n  /**\r\n   * @return {State} View state.\r\n   */\r\n  getState() {\r\n    const projection = this.getProjection();\r\n    const resolution = this.getResolution();\r\n    const rotation = this.getRotation();\r\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\r\n      this.getCenterInternal()\r\n    );\r\n    const padding = this.padding_;\r\n    if (padding) {\r\n      const reducedSize = this.getViewportSizeMinusPadding_();\r\n      center = calculateCenterOn(\r\n        center,\r\n        this.getViewportSize_(),\r\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\r\n        resolution,\r\n        rotation\r\n      );\r\n    }\r\n    return {\r\n      center: center.slice(0),\r\n      projection: projection !== undefined ? projection : null,\r\n      resolution: resolution,\r\n      nextCenter: this.nextCenter_,\r\n      nextResolution: this.nextResolution_,\r\n      nextRotation: this.nextRotation_,\r\n      rotation: rotation,\r\n      zoom: this.getZoom(),\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Get the current zoom level. This method may return non-integer zoom levels\r\n   * if the view does not constrain the resolution, or if an interaction or\r\n   * animation is underway.\r\n   * @return {number|undefined} Zoom.\r\n   * @api\r\n   */\r\n  getZoom() {\r\n    let zoom;\r\n    const resolution = this.getResolution();\r\n    if (resolution !== undefined) {\r\n      zoom = this.getZoomForResolution(resolution);\r\n    }\r\n    return zoom;\r\n  }\r\n\r\n  /**\r\n   * Get the zoom level for a resolution.\r\n   * @param {number} resolution The resolution.\r\n   * @return {number|undefined} The zoom level for the provided resolution.\r\n   * @api\r\n   */\r\n  getZoomForResolution(resolution) {\r\n    let offset = this.minZoom_ || 0;\r\n    let max, zoomFactor;\r\n    if (this.resolutions_) {\r\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\r\n      offset = nearest;\r\n      max = this.resolutions_[nearest];\r\n      if (nearest == this.resolutions_.length - 1) {\r\n        zoomFactor = 2;\r\n      } else {\r\n        zoomFactor = max / this.resolutions_[nearest + 1];\r\n      }\r\n    } else {\r\n      max = this.maxResolution_;\r\n      zoomFactor = this.zoomFactor_;\r\n    }\r\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\r\n  }\r\n\r\n  /**\r\n   * Get the resolution for a zoom level.\r\n   * @param {number} zoom Zoom level.\r\n   * @return {number} The view resolution for the provided zoom level.\r\n   * @api\r\n   */\r\n  getResolutionForZoom(zoom) {\r\n    if (this.resolutions_) {\r\n      if (this.resolutions_.length <= 1) {\r\n        return 0;\r\n      }\r\n      const baseLevel = clamp(\r\n        Math.floor(zoom),\r\n        0,\r\n        this.resolutions_.length - 2\r\n      );\r\n      const zoomFactor =\r\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\r\n      return (\r\n        this.resolutions_[baseLevel] /\r\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\r\n      );\r\n    } else {\r\n      return (\r\n        this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Fit the given geometry or extent based on the given map size and border.\r\n   * The size is pixel dimensions of the box to fit the extent into.\r\n   * In most cases you will want to use the map size, that is `map.getSize()`.\r\n   * Takes care of the map angle.\r\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\r\n   *     extent to fit the view to.\r\n   * @param {FitOptions} [options] Options.\r\n   * @api\r\n   */\r\n  fit(geometryOrExtent, options) {\r\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\r\n    let geometry;\r\n    assert(\r\n      Array.isArray(geometryOrExtent) ||\r\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\r\n          'function',\r\n      24\r\n    ); // Invalid extent or geometry provided as `geometry`\r\n    if (Array.isArray(geometryOrExtent)) {\r\n      assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\r\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\r\n      geometry = polygonFromExtent(extent);\r\n    } else if (geometryOrExtent.getType() === 'Circle') {\r\n      const extent = fromUserExtent(\r\n        geometryOrExtent.getExtent(),\r\n        this.getProjection()\r\n      );\r\n      geometry = polygonFromExtent(extent);\r\n      geometry.rotate(this.getRotation(), getCenter(extent));\r\n    } else {\r\n      const userProjection = getUserProjection();\r\n      if (userProjection) {\r\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\r\n          geometryOrExtent\r\n            .clone()\r\n            .transform(userProjection, this.getProjection())\r\n        );\r\n      } else {\r\n        geometry = geometryOrExtent;\r\n      }\r\n    }\r\n\r\n    this.fitInternal(geometry, options);\r\n  }\r\n\r\n  /**\r\n   * Calculate rotated extent\r\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\r\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\r\n   */\r\n  rotatedExtentForGeometry(geometry) {\r\n    const rotation = this.getRotation();\r\n    const cosAngle = Math.cos(rotation);\r\n    const sinAngle = Math.sin(-rotation);\r\n    const coords = geometry.getFlatCoordinates();\r\n    const stride = geometry.getStride();\r\n    let minRotX = +Infinity;\r\n    let minRotY = +Infinity;\r\n    let maxRotX = -Infinity;\r\n    let maxRotY = -Infinity;\r\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\r\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\r\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\r\n      minRotX = Math.min(minRotX, rotX);\r\n      minRotY = Math.min(minRotY, rotY);\r\n      maxRotX = Math.max(maxRotX, rotX);\r\n      maxRotY = Math.max(maxRotY, rotY);\r\n    }\r\n    return [minRotX, minRotY, maxRotX, maxRotY];\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\r\n   * @param {FitOptions} [options] Options.\r\n   */\r\n  fitInternal(geometry, options) {\r\n    options = options || {};\r\n    let size = options.size;\r\n    if (!size) {\r\n      size = this.getViewportSizeMinusPadding_();\r\n    }\r\n    const padding =\r\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\r\n    const nearest = options.nearest !== undefined ? options.nearest : false;\r\n    let minResolution;\r\n    if (options.minResolution !== undefined) {\r\n      minResolution = options.minResolution;\r\n    } else if (options.maxZoom !== undefined) {\r\n      minResolution = this.getResolutionForZoom(options.maxZoom);\r\n    } else {\r\n      minResolution = 0;\r\n    }\r\n\r\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\r\n\r\n    // calculate resolution\r\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\r\n      size[0] - padding[1] - padding[3],\r\n      size[1] - padding[0] - padding[2],\r\n    ]);\r\n    resolution = isNaN(resolution)\r\n      ? minResolution\r\n      : Math.max(resolution, minResolution);\r\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\r\n\r\n    // calculate center\r\n    const rotation = this.getRotation();\r\n    const sinAngle = Math.sin(rotation);\r\n    const cosAngle = Math.cos(rotation);\r\n    const centerRot = getCenter(rotatedExtent);\r\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\r\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\r\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\r\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\r\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\r\n    const callback = options.callback ? options.callback : VOID;\r\n\r\n    if (options.duration !== undefined) {\r\n      this.animateInternal(\r\n        {\r\n          resolution: resolution,\r\n          center: center,\r\n          duration: options.duration,\r\n          easing: options.easing,\r\n        },\r\n        callback\r\n      );\r\n    } else {\r\n      this.targetResolution_ = resolution;\r\n      this.targetCenter_ = center;\r\n      this.applyTargetState_(false, true);\r\n      animationCallback(callback, true);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Center on coordinate and view position.\r\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\r\n   * @param {import(\"./size.js\").Size} size Box pixel size.\r\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\r\n   * @api\r\n   */\r\n  centerOn(coordinate, size, position) {\r\n    this.centerOnInternal(\r\n      fromUserCoordinate(coordinate, this.getProjection()),\r\n      size,\r\n      position\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\r\n   * @param {import(\"./size.js\").Size} size Box pixel size.\r\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\r\n   */\r\n  centerOnInternal(coordinate, size, position) {\r\n    this.setCenterInternal(\r\n      calculateCenterOn(\r\n        coordinate,\r\n        size,\r\n        position,\r\n        this.getResolution(),\r\n        this.getRotation()\r\n      )\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Calculates the shift between map and viewport center.\r\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\r\n   * @param {number} resolution Resolution.\r\n   * @param {number} rotation Rotation.\r\n   * @param {import(\"./size.js\").Size} size Size.\r\n   * @return {Array<number>|undefined} Center shift.\r\n   */\r\n  calculateCenterShift(center, resolution, rotation, size) {\r\n    let centerShift;\r\n    const padding = this.padding_;\r\n    if (padding && center) {\r\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\r\n      const shiftedCenter = calculateCenterOn(\r\n        center,\r\n        size,\r\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\r\n        resolution,\r\n        rotation\r\n      );\r\n      centerShift = [\r\n        center[0] - shiftedCenter[0],\r\n        center[1] - shiftedCenter[1],\r\n      ];\r\n    }\r\n    return centerShift;\r\n  }\r\n\r\n  /**\r\n   * @return {boolean} Is defined.\r\n   */\r\n  isDef() {\r\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\r\n  }\r\n\r\n  /**\r\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\r\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\r\n   * @api\r\n   */\r\n  adjustCenter(deltaCoordinates) {\r\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\r\n    this.setCenter([\r\n      center[0] + deltaCoordinates[0],\r\n      center[1] + deltaCoordinates[1],\r\n    ]);\r\n  }\r\n\r\n  /**\r\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\r\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\r\n   */\r\n  adjustCenterInternal(deltaCoordinates) {\r\n    const center = this.targetCenter_;\r\n    this.setCenterInternal([\r\n      center[0] + deltaCoordinates[0],\r\n      center[1] + deltaCoordinates[1],\r\n    ]);\r\n  }\r\n\r\n  /**\r\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\r\n   * constraint will apply.\r\n   * @param {number} ratio The ratio to apply on the view resolution.\r\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\r\n   * @api\r\n   */\r\n  adjustResolution(ratio, anchor) {\r\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\r\n    this.adjustResolutionInternal(ratio, anchor);\r\n  }\r\n\r\n  /**\r\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\r\n   * constraint will apply.\r\n   * @param {number} ratio The ratio to apply on the view resolution.\r\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\r\n   */\r\n  adjustResolutionInternal(ratio, anchor) {\r\n    const isMoving = this.getAnimating() || this.getInteracting();\r\n    const size = this.getViewportSize_(this.getRotation());\r\n    const newResolution = this.constraints_.resolution(\r\n      this.targetResolution_ * ratio,\r\n      0,\r\n      size,\r\n      isMoving\r\n    );\r\n\r\n    if (anchor) {\r\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, anchor);\r\n    }\r\n\r\n    this.targetResolution_ *= ratio;\r\n    this.applyTargetState_();\r\n  }\r\n\r\n  /**\r\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\r\n   * constraint will apply.\r\n   * @param {number} delta Relative value to add to the zoom level.\r\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\r\n   * @api\r\n   */\r\n  adjustZoom(delta, anchor) {\r\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), anchor);\r\n  }\r\n\r\n  /**\r\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\r\n   * constraint will apply.\r\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\r\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\r\n   * @api\r\n   */\r\n  adjustRotation(delta, anchor) {\r\n    if (anchor) {\r\n      anchor = fromUserCoordinate(anchor, this.getProjection());\r\n    }\r\n    this.adjustRotationInternal(delta, anchor);\r\n  }\r\n\r\n  /**\r\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\r\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\r\n   */\r\n  adjustRotationInternal(delta, anchor) {\r\n    const isMoving = this.getAnimating() || this.getInteracting();\r\n    const newRotation = this.constraints_.rotation(\r\n      this.targetRotation_ + delta,\r\n      isMoving\r\n    );\r\n    if (anchor) {\r\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, anchor);\r\n    }\r\n    this.targetRotation_ += delta;\r\n    this.applyTargetState_();\r\n  }\r\n\r\n  /**\r\n   * Set the center of the current view. Any extent constraint will apply.\r\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\r\n   * @observable\r\n   * @api\r\n   */\r\n  setCenter(center) {\r\n    this.setCenterInternal(\r\n      center ? fromUserCoordinate(center, this.getProjection()) : center\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Set the center using the view projection (not the user projection).\r\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\r\n   */\r\n  setCenterInternal(center) {\r\n    this.targetCenter_ = center;\r\n    this.applyTargetState_();\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\r\n   * @param {number} delta Delta.\r\n   * @return {number} New value.\r\n   */\r\n  setHint(hint, delta) {\r\n    this.hints_[hint] += delta;\r\n    this.changed();\r\n    return this.hints_[hint];\r\n  }\r\n\r\n  /**\r\n   * Set the resolution for this view. Any resolution constraint will apply.\r\n   * @param {number|undefined} resolution The resolution of the view.\r\n   * @observable\r\n   * @api\r\n   */\r\n  setResolution(resolution) {\r\n    this.targetResolution_ = resolution;\r\n    this.applyTargetState_();\r\n  }\r\n\r\n  /**\r\n   * Set the rotation for this view. Any rotation constraint will apply.\r\n   * @param {number} rotation The rotation of the view in radians.\r\n   * @observable\r\n   * @api\r\n   */\r\n  setRotation(rotation) {\r\n    this.targetRotation_ = rotation;\r\n    this.applyTargetState_();\r\n  }\r\n\r\n  /**\r\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\r\n   * @param {number} zoom Zoom level.\r\n   * @api\r\n   */\r\n  setZoom(zoom) {\r\n    this.setResolution(this.getResolutionForZoom(zoom));\r\n  }\r\n\r\n  /**\r\n   * Recompute rotation/resolution/center based on target values.\r\n   * Note: we have to compute rotation first, then resolution and center considering that\r\n   * parameters can influence one another in case a view extent constraint is present.\r\n   * @param {boolean} [doNotCancelAnims] Do not cancel animations.\r\n   * @param {boolean} [forceMoving] Apply constraints as if the view is moving.\r\n   * @private\r\n   */\r\n  applyTargetState_(doNotCancelAnims, forceMoving) {\r\n    const isMoving =\r\n      this.getAnimating() || this.getInteracting() || forceMoving;\r\n\r\n    // compute rotation\r\n    const newRotation = this.constraints_.rotation(\r\n      this.targetRotation_,\r\n      isMoving\r\n    );\r\n    const size = this.getViewportSize_(newRotation);\r\n    const newResolution = this.constraints_.resolution(\r\n      this.targetResolution_,\r\n      0,\r\n      size,\r\n      isMoving\r\n    );\r\n    const newCenter = this.constraints_.center(\r\n      this.targetCenter_,\r\n      newResolution,\r\n      size,\r\n      isMoving,\r\n      this.calculateCenterShift(\r\n        this.targetCenter_,\r\n        newResolution,\r\n        newRotation,\r\n        size\r\n      )\r\n    );\r\n\r\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\r\n      this.set(ViewProperty.ROTATION, newRotation);\r\n    }\r\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\r\n      this.set(ViewProperty.RESOLUTION, newResolution);\r\n      this.set('zoom', this.getZoom(), true);\r\n    }\r\n    if (\r\n      !newCenter ||\r\n      !this.get(ViewProperty.CENTER) ||\r\n      !equals(this.get(ViewProperty.CENTER), newCenter)\r\n    ) {\r\n      this.set(ViewProperty.CENTER, newCenter);\r\n    }\r\n\r\n    if (this.getAnimating() && !doNotCancelAnims) {\r\n      this.cancelAnimations();\r\n    }\r\n    this.cancelAnchor_ = undefined;\r\n  }\r\n\r\n  /**\r\n   * If any constraints need to be applied, an animation will be triggered.\r\n   * This is typically done on interaction end.\r\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\r\n   * without animation.\r\n   * @param {number} [duration] The animation duration in ms.\r\n   * @param {number} [resolutionDirection] Which direction to zoom.\r\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\r\n   */\r\n  resolveConstraints(duration, resolutionDirection, anchor) {\r\n    duration = duration !== undefined ? duration : 200;\r\n    const direction = resolutionDirection || 0;\r\n\r\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\r\n    const size = this.getViewportSize_(newRotation);\r\n    const newResolution = this.constraints_.resolution(\r\n      this.targetResolution_,\r\n      direction,\r\n      size\r\n    );\r\n    const newCenter = this.constraints_.center(\r\n      this.targetCenter_,\r\n      newResolution,\r\n      size,\r\n      false,\r\n      this.calculateCenterShift(\r\n        this.targetCenter_,\r\n        newResolution,\r\n        newRotation,\r\n        size\r\n      )\r\n    );\r\n\r\n    if (duration === 0 && !this.cancelAnchor_) {\r\n      this.targetResolution_ = newResolution;\r\n      this.targetRotation_ = newRotation;\r\n      this.targetCenter_ = newCenter;\r\n      this.applyTargetState_();\r\n      return;\r\n    }\r\n\r\n    anchor = anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\r\n    this.cancelAnchor_ = undefined;\r\n\r\n    if (\r\n      this.getResolution() !== newResolution ||\r\n      this.getRotation() !== newRotation ||\r\n      !this.getCenterInternal() ||\r\n      !equals(this.getCenterInternal(), newCenter)\r\n    ) {\r\n      if (this.getAnimating()) {\r\n        this.cancelAnimations();\r\n      }\r\n\r\n      this.animateInternal({\r\n        rotation: newRotation,\r\n        center: newCenter,\r\n        resolution: newResolution,\r\n        duration: duration,\r\n        easing: easeOut,\r\n        anchor: anchor,\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Notify the View that an interaction has started.\r\n   * The view state will be resolved to a stable one if needed\r\n   * (depending on its constraints).\r\n   * @api\r\n   */\r\n  beginInteraction() {\r\n    this.resolveConstraints(0);\r\n\r\n    this.setHint(ViewHint.INTERACTING, 1);\r\n  }\r\n\r\n  /**\r\n   * Notify the View that an interaction has ended. The view state will be resolved\r\n   * to a stable one if needed (depending on its constraints).\r\n   * @param {number} [duration] Animation duration in ms.\r\n   * @param {number} [resolutionDirection] Which direction to zoom.\r\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\r\n   * @api\r\n   */\r\n  endInteraction(duration, resolutionDirection, anchor) {\r\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\r\n    this.endInteractionInternal(duration, resolutionDirection, anchor);\r\n  }\r\n\r\n  /**\r\n   * Notify the View that an interaction has ended. The view state will be resolved\r\n   * to a stable one if needed (depending on its constraints).\r\n   * @param {number} [duration] Animation duration in ms.\r\n   * @param {number} [resolutionDirection] Which direction to zoom.\r\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\r\n   */\r\n  endInteractionInternal(duration, resolutionDirection, anchor) {\r\n    this.setHint(ViewHint.INTERACTING, -1);\r\n\r\n    this.resolveConstraints(duration, resolutionDirection, anchor);\r\n  }\r\n\r\n  /**\r\n   * Get a valid position for the view center according to the current constraints.\r\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\r\n   * @param {number} [targetResolution] Target resolution. If not supplied, the current one will be used.\r\n   * This is useful to guess a valid center position at a different zoom level.\r\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\r\n   */\r\n  getConstrainedCenter(targetCenter, targetResolution) {\r\n    const size = this.getViewportSize_(this.getRotation());\r\n    return this.constraints_.center(\r\n      targetCenter,\r\n      targetResolution || this.getResolution(),\r\n      size\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Get a valid zoom level according to the current view constraints.\r\n   * @param {number|undefined} targetZoom Target zoom.\r\n   * @param {number} [direction=0] Indicate which resolution should be used\r\n   * by a renderer if the view resolution does not match any resolution of the tile source.\r\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\r\n   * will be used. If -1, the nearest higher resolution will be used.\r\n   * @return {number|undefined} Valid zoom level.\r\n   */\r\n  getConstrainedZoom(targetZoom, direction) {\r\n    const targetRes = this.getResolutionForZoom(targetZoom);\r\n    return this.getZoomForResolution(\r\n      this.getConstrainedResolution(targetRes, direction)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Get a valid resolution according to the current view constraints.\r\n   * @param {number|undefined} targetResolution Target resolution.\r\n   * @param {number} [direction=0] Indicate which resolution should be used\r\n   * by a renderer if the view resolution does not match any resolution of the tile source.\r\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\r\n   * will be used. If -1, the nearest higher resolution will be used.\r\n   * @return {number|undefined} Valid resolution.\r\n   */\r\n  getConstrainedResolution(targetResolution, direction) {\r\n    direction = direction || 0;\r\n    const size = this.getViewportSize_(this.getRotation());\r\n\r\n    return this.constraints_.resolution(targetResolution, direction, size);\r\n  }\r\n}\r\n\r\n/**\r\n * @param {Function} callback Callback.\r\n * @param {*} returnValue Return value.\r\n */\r\nfunction animationCallback(callback, returnValue) {\r\n  setTimeout(function () {\r\n    callback(returnValue);\r\n  }, 0);\r\n}\r\n\r\n/**\r\n * @param {ViewOptions} options View options.\r\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\r\n */\r\nexport function createCenterConstraint(options) {\r\n  if (options.extent !== undefined) {\r\n    const smooth =\r\n      options.smoothExtentConstraint !== undefined\r\n        ? options.smoothExtentConstraint\r\n        : true;\r\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\r\n  }\r\n\r\n  const projection = createProjection(options.projection, 'EPSG:3857');\r\n  if (options.multiWorld !== true && projection.isGlobal()) {\r\n    const extent = projection.getExtent().slice();\r\n    extent[0] = -Infinity;\r\n    extent[2] = Infinity;\r\n    return createExtent(extent, false, false);\r\n  }\r\n\r\n  return centerNone;\r\n}\r\n\r\n/**\r\n * @param {ViewOptions} options View options.\r\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\r\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\r\n */\r\nexport function createResolutionConstraint(options) {\r\n  let resolutionConstraint;\r\n  let maxResolution;\r\n  let minResolution;\r\n\r\n  // TODO: move these to be ol constants\r\n  // see https://github.com/openlayers/openlayers/issues/2076\r\n  const defaultMaxZoom = 28;\r\n  const defaultZoomFactor = 2;\r\n\r\n  let minZoom =\r\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\r\n\r\n  let maxZoom =\r\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\r\n\r\n  const zoomFactor =\r\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\r\n\r\n  const multiWorld =\r\n    options.multiWorld !== undefined ? options.multiWorld : false;\r\n\r\n  const smooth =\r\n    options.smoothResolutionConstraint !== undefined\r\n      ? options.smoothResolutionConstraint\r\n      : true;\r\n\r\n  const showFullExtent =\r\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\r\n\r\n  const projection = createProjection(options.projection, 'EPSG:3857');\r\n  const projExtent = projection.getExtent();\r\n  let constrainOnlyCenter = options.constrainOnlyCenter;\r\n  let extent = options.extent;\r\n  if (!multiWorld && !extent && projection.isGlobal()) {\r\n    constrainOnlyCenter = false;\r\n    extent = projExtent;\r\n  }\r\n\r\n  if (options.resolutions !== undefined) {\r\n    const resolutions = options.resolutions;\r\n    maxResolution = resolutions[minZoom];\r\n    minResolution =\r\n      resolutions[maxZoom] !== undefined\r\n        ? resolutions[maxZoom]\r\n        : resolutions[resolutions.length - 1];\r\n\r\n    if (options.constrainResolution) {\r\n      resolutionConstraint = createSnapToResolutions(\r\n        resolutions,\r\n        smooth,\r\n        !constrainOnlyCenter && extent,\r\n        showFullExtent\r\n      );\r\n    } else {\r\n      resolutionConstraint = createMinMaxResolution(\r\n        maxResolution,\r\n        minResolution,\r\n        smooth,\r\n        !constrainOnlyCenter && extent,\r\n        showFullExtent\r\n      );\r\n    }\r\n  } else {\r\n    // calculate the default min and max resolution\r\n    const size = !projExtent\r\n      ? // use an extent that can fit the whole world if need be\r\n        (360 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit()\r\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\r\n\r\n    const defaultMaxResolution =\r\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\r\n\r\n    const defaultMinResolution =\r\n      defaultMaxResolution /\r\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\r\n\r\n    // user provided maxResolution takes precedence\r\n    maxResolution = options.maxResolution;\r\n    if (maxResolution !== undefined) {\r\n      minZoom = 0;\r\n    } else {\r\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\r\n    }\r\n\r\n    // user provided minResolution takes precedence\r\n    minResolution = options.minResolution;\r\n    if (minResolution === undefined) {\r\n      if (options.maxZoom !== undefined) {\r\n        if (options.maxResolution !== undefined) {\r\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\r\n        } else {\r\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\r\n        }\r\n      } else {\r\n        minResolution = defaultMinResolution;\r\n      }\r\n    }\r\n\r\n    // given discrete zoom levels, minResolution may be different than provided\r\n    maxZoom =\r\n      minZoom +\r\n      Math.floor(\r\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\r\n      );\r\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\r\n\r\n    if (options.constrainResolution) {\r\n      resolutionConstraint = createSnapToPower(\r\n        zoomFactor,\r\n        maxResolution,\r\n        minResolution,\r\n        smooth,\r\n        !constrainOnlyCenter && extent,\r\n        showFullExtent\r\n      );\r\n    } else {\r\n      resolutionConstraint = createMinMaxResolution(\r\n        maxResolution,\r\n        minResolution,\r\n        smooth,\r\n        !constrainOnlyCenter && extent,\r\n        showFullExtent\r\n      );\r\n    }\r\n  }\r\n  return {\r\n    constraint: resolutionConstraint,\r\n    maxResolution: maxResolution,\r\n    minResolution: minResolution,\r\n    minZoom: minZoom,\r\n    zoomFactor: zoomFactor,\r\n  };\r\n}\r\n\r\n/**\r\n * @param {ViewOptions} options View options.\r\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\r\n */\r\nexport function createRotationConstraint(options) {\r\n  const enableRotation =\r\n    options.enableRotation !== undefined ? options.enableRotation : true;\r\n  if (enableRotation) {\r\n    const constrainRotation = options.constrainRotation;\r\n    if (constrainRotation === undefined || constrainRotation === true) {\r\n      return createSnapToZero();\r\n    } else if (constrainRotation === false) {\r\n      return rotationNone;\r\n    } else if (typeof constrainRotation === 'number') {\r\n      return createSnapToN(constrainRotation);\r\n    } else {\r\n      return rotationNone;\r\n    }\r\n  } else {\r\n    return disable;\r\n  }\r\n}\r\n\r\n/**\r\n * Determine if an animation involves no view change.\r\n * @param {Animation} animation The animation.\r\n * @return {boolean} The animation involves no view change.\r\n */\r\nexport function isNoopAnimation(animation) {\r\n  if (animation.sourceCenter && animation.targetCenter) {\r\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\r\n      return false;\r\n    }\r\n  }\r\n  if (animation.sourceResolution !== animation.targetResolution) {\r\n    return false;\r\n  }\r\n  if (animation.sourceRotation !== animation.targetRotation) {\r\n    return false;\r\n  }\r\n  return true;\r\n}\r\n\r\n/**\r\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\r\n * @param {import(\"./size.js\").Size} size Box pixel size.\r\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\r\n * @param {number} resolution Resolution.\r\n * @param {number} rotation Rotation.\r\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\r\n */\r\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\r\n  // calculate rotated position\r\n  const cosAngle = Math.cos(-rotation);\r\n  let sinAngle = Math.sin(-rotation);\r\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\r\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\r\n  rotX += (size[0] / 2 - position[0]) * resolution;\r\n  rotY += (position[1] - size[1] / 2) * resolution;\r\n\r\n  // go back to original angle\r\n  sinAngle = -sinAngle; // go back to original rotation\r\n  const centerX = rotX * cosAngle - rotY * sinAngle;\r\n  const centerY = rotY * cosAngle + rotX * sinAngle;\r\n\r\n  return [centerX, centerY];\r\n}\r\n\r\nexport default View;\r\n","/**\r\n * @module ol/control/Control\r\n */\r\nimport BaseObject from '../Object.js';\r\nimport MapEventType from '../MapEventType.js';\r\nimport {VOID} from '../functions.js';\r\nimport {listen, unlistenByKey} from '../events.js';\r\nimport {removeNode} from '../dom.js';\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {HTMLElement} [element] The element is the control's\r\n * container element. This only needs to be specified if you're developing\r\n * a custom control.\r\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\r\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\r\n * callback.\r\n * @property {HTMLElement|string} [target] Specify a target if you want\r\n * the control to be rendered outside of the map's viewport.\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * A control is a visible widget with a DOM element in a fixed position on the\r\n * screen. They can involve user input (buttons), or be informational only;\r\n * the position is determined using CSS. By default these are placed in the\r\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\r\n * any outside DOM element.\r\n *\r\n * This is the base class for controls. You can use it for simple custom\r\n * controls by creating the element with listeners, creating an instance:\r\n * ```js\r\n * const myControl = new Control({element: myElement});\r\n * ```\r\n * and then adding this to the map.\r\n *\r\n * The main advantage of having this as a control rather than a simple separate\r\n * DOM element is that preventing propagation is handled for you. Controls\r\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\r\n *\r\n * You can also extend this base for your own control class. See\r\n * examples/custom-controls for an example of how to do this.\r\n *\r\n * @api\r\n */\r\nclass Control extends BaseObject {\r\n  /**\r\n   * @param {Options} options Control options.\r\n   */\r\n  constructor(options) {\r\n    super();\r\n\r\n    const element = options.element;\r\n    if (element && !options.target && !element.style.pointerEvents) {\r\n      element.style.pointerEvents = 'auto';\r\n    }\r\n\r\n    /**\r\n     * @protected\r\n     * @type {HTMLElement}\r\n     */\r\n    this.element = element ? element : null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {HTMLElement}\r\n     */\r\n    this.target_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../Map.js\").default|null}\r\n     */\r\n    this.map_ = null;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {!Array<import(\"../events.js\").EventsKey>}\r\n     */\r\n    this.listenerKeys = [];\r\n\r\n    if (options.render) {\r\n      this.render = options.render;\r\n    }\r\n\r\n    if (options.target) {\r\n      this.setTarget(options.target);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clean up.\r\n   */\r\n  disposeInternal() {\r\n    removeNode(this.element);\r\n    super.disposeInternal();\r\n  }\r\n\r\n  /**\r\n   * Get the map associated with this control.\r\n   * @return {import(\"../Map.js\").default|null} Map.\r\n   * @api\r\n   */\r\n  getMap() {\r\n    return this.map_;\r\n  }\r\n\r\n  /**\r\n   * Remove the control from its current map and attach it to the new map.\r\n   * Pass `null` to just remove the control from the current map.\r\n   * Subclasses may set up event handlers to get notified about changes to\r\n   * the map here.\r\n   * @param {import(\"../Map.js\").default|null} map Map.\r\n   * @api\r\n   */\r\n  setMap(map) {\r\n    if (this.map_) {\r\n      removeNode(this.element);\r\n    }\r\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\r\n      unlistenByKey(this.listenerKeys[i]);\r\n    }\r\n    this.listenerKeys.length = 0;\r\n    this.map_ = map;\r\n    if (map) {\r\n      const target = this.target_\r\n        ? this.target_\r\n        : map.getOverlayContainerStopEvent();\r\n      target.appendChild(this.element);\r\n      if (this.render !== VOID) {\r\n        this.listenerKeys.push(\r\n          listen(map, MapEventType.POSTRENDER, this.render, this)\r\n        );\r\n      }\r\n      map.render();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Renders the control.\r\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\r\n   * @api\r\n   */\r\n  render(mapEvent) {}\r\n\r\n  /**\r\n   * This function is used to set a target element for the control. It has no\r\n   * effect if it is called after the control has been added to the map (i.e.\r\n   * after `setMap` is called on the control). If no `target` is set in the\r\n   * options passed to the control constructor and if `setTarget` is not called\r\n   * then the control is added to the map's overlay container.\r\n   * @param {HTMLElement|string} target Target.\r\n   * @api\r\n   */\r\n  setTarget(target) {\r\n    this.target_ =\r\n      typeof target === 'string' ? document.getElementById(target) : target;\r\n  }\r\n}\r\n\r\nexport default Control;\r\n","/**\r\n * @module ol/control/Attribution\r\n */\r\nimport Control from './Control.js';\r\nimport EventType from '../events/EventType.js';\r\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\r\nimport {equals} from '../array.js';\r\nimport {inView} from '../layer/Layer.js';\r\nimport {removeChildren, replaceNode} from '../dom.js';\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {string} [className='ol-attribution'] CSS class name.\r\n * @property {HTMLElement|string} [target] Specify a target if you\r\n * want the control to be rendered outside of the map's\r\n * viewport.\r\n * @property {boolean} [collapsible] Specify if attributions can\r\n * be collapsed. If not specified, sources control this behavior with their\r\n * `attributionsCollapsible` setting.\r\n * @property {boolean} [collapsed=true] Specify if attributions should\r\n * be collapsed at startup.\r\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\r\n * @property {string|HTMLElement} [label='i'] Text label to use for the\r\n * collapsed attributions button.\r\n * Instead of text, also an element (e.g. a `span` element) can be used.\r\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\r\n * collapsed attributions button.\r\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\r\n * for the expanded attributions button.\r\n * Instead of text, also an element (e.g. a `span` element) can be used.\r\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\r\n * expanded attributions button.\r\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\r\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\r\n * callback.\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Control to show all the attributions associated with the layer sources\r\n * in the map. This control is one of the default controls included in maps.\r\n * By default it will show in the bottom right portion of the map, but this can\r\n * be changed by using a css selector for `.ol-attribution`.\r\n *\r\n * @api\r\n */\r\nclass Attribution extends Control {\r\n  /**\r\n   * @param {Options} [options] Attribution options.\r\n   */\r\n  constructor(options) {\r\n    options = options ? options : {};\r\n\r\n    super({\r\n      element: document.createElement('div'),\r\n      render: options.render,\r\n      target: options.target,\r\n    });\r\n\r\n    /**\r\n     * @private\r\n     * @type {HTMLElement}\r\n     */\r\n    this.ulElement_ = document.createElement('ul');\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.collapsed_ =\r\n      options.collapsed !== undefined ? options.collapsed : true;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.userCollapsed_ = this.collapsed_;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.overrideCollapsible_ = options.collapsible !== undefined;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.collapsible_ =\r\n      options.collapsible !== undefined ? options.collapsible : true;\r\n\r\n    if (!this.collapsible_) {\r\n      this.collapsed_ = false;\r\n    }\r\n\r\n    const className =\r\n      options.className !== undefined ? options.className : 'ol-attribution';\r\n\r\n    const tipLabel =\r\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\r\n\r\n    const expandClassName =\r\n      options.expandClassName !== undefined\r\n        ? options.expandClassName\r\n        : className + '-expand';\r\n\r\n    const collapseLabel =\r\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\r\n\r\n    const collapseClassName =\r\n      options.collapseClassName !== undefined\r\n        ? options.collapseClassName\r\n        : className + '-collapse';\r\n\r\n    if (typeof collapseLabel === 'string') {\r\n      /**\r\n       * @private\r\n       * @type {HTMLElement}\r\n       */\r\n      this.collapseLabel_ = document.createElement('span');\r\n      this.collapseLabel_.textContent = collapseLabel;\r\n      this.collapseLabel_.className = collapseClassName;\r\n    } else {\r\n      this.collapseLabel_ = collapseLabel;\r\n    }\r\n\r\n    const label = options.label !== undefined ? options.label : 'i';\r\n\r\n    if (typeof label === 'string') {\r\n      /**\r\n       * @private\r\n       * @type {HTMLElement}\r\n       */\r\n      this.label_ = document.createElement('span');\r\n      this.label_.textContent = label;\r\n      this.label_.className = expandClassName;\r\n    } else {\r\n      this.label_ = label;\r\n    }\r\n\r\n    const activeLabel =\r\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\r\n\r\n    /**\r\n     * @private\r\n     * @type {HTMLElement}\r\n     */\r\n    this.toggleButton_ = document.createElement('button');\r\n    this.toggleButton_.setAttribute('type', 'button');\r\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\r\n    this.toggleButton_.title = tipLabel;\r\n    this.toggleButton_.appendChild(activeLabel);\r\n\r\n    this.toggleButton_.addEventListener(\r\n      EventType.CLICK,\r\n      this.handleClick_.bind(this),\r\n      false\r\n    );\r\n\r\n    const cssClasses =\r\n      className +\r\n      ' ' +\r\n      CLASS_UNSELECTABLE +\r\n      ' ' +\r\n      CLASS_CONTROL +\r\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\r\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\r\n    const element = this.element;\r\n    element.className = cssClasses;\r\n    element.appendChild(this.toggleButton_);\r\n    element.appendChild(this.ulElement_);\r\n\r\n    /**\r\n     * A list of currently rendered resolutions.\r\n     * @type {Array<string>}\r\n     * @private\r\n     */\r\n    this.renderedAttributions_ = [];\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.renderedVisible_ = true;\r\n  }\r\n\r\n  /**\r\n   * Collect a list of visible attributions and set the collapsible state.\r\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\r\n   * @return {Array<string>} Attributions.\r\n   * @private\r\n   */\r\n  collectSourceAttributions_(frameState) {\r\n    /**\r\n     * Used to determine if an attribution already exists.\r\n     * @type {!Object<string, boolean>}\r\n     */\r\n    const lookup = {};\r\n\r\n    /**\r\n     * A list of visible attributions.\r\n     * @type {Array<string>}\r\n     */\r\n    const visibleAttributions = [];\r\n\r\n    let collapsible = true;\r\n    const layerStatesArray = frameState.layerStatesArray;\r\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\r\n      const layerState = layerStatesArray[i];\r\n      if (!inView(layerState, frameState.viewState)) {\r\n        continue;\r\n      }\r\n\r\n      const source = /** @type {import(\"../layer/Layer.js\").default} */ (\r\n        layerState.layer\r\n      ).getSource();\r\n      if (!source) {\r\n        continue;\r\n      }\r\n\r\n      const attributionGetter = source.getAttributions();\r\n      if (!attributionGetter) {\r\n        continue;\r\n      }\r\n\r\n      const attributions = attributionGetter(frameState);\r\n      if (!attributions) {\r\n        continue;\r\n      }\r\n\r\n      collapsible =\r\n        collapsible && source.getAttributionsCollapsible() !== false;\r\n\r\n      if (Array.isArray(attributions)) {\r\n        for (let j = 0, jj = attributions.length; j < jj; ++j) {\r\n          if (!(attributions[j] in lookup)) {\r\n            visibleAttributions.push(attributions[j]);\r\n            lookup[attributions[j]] = true;\r\n          }\r\n        }\r\n      } else {\r\n        if (!(attributions in lookup)) {\r\n          visibleAttributions.push(attributions);\r\n          lookup[attributions] = true;\r\n        }\r\n      }\r\n    }\r\n    if (!this.overrideCollapsible_) {\r\n      this.setCollapsible(collapsible);\r\n    }\r\n    return visibleAttributions;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\r\n   */\r\n  updateElement_(frameState) {\r\n    if (!frameState) {\r\n      if (this.renderedVisible_) {\r\n        this.element.style.display = 'none';\r\n        this.renderedVisible_ = false;\r\n      }\r\n      return;\r\n    }\r\n\r\n    const attributions = this.collectSourceAttributions_(frameState);\r\n\r\n    const visible = attributions.length > 0;\r\n    if (this.renderedVisible_ != visible) {\r\n      this.element.style.display = visible ? '' : 'none';\r\n      this.renderedVisible_ = visible;\r\n    }\r\n\r\n    if (equals(attributions, this.renderedAttributions_)) {\r\n      return;\r\n    }\r\n\r\n    removeChildren(this.ulElement_);\r\n\r\n    // append the attributions\r\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\r\n      const element = document.createElement('li');\r\n      element.innerHTML = attributions[i];\r\n      this.ulElement_.appendChild(element);\r\n    }\r\n\r\n    this.renderedAttributions_ = attributions;\r\n  }\r\n\r\n  /**\r\n   * @param {MouseEvent} event The event to handle\r\n   * @private\r\n   */\r\n  handleClick_(event) {\r\n    event.preventDefault();\r\n    this.handleToggle_();\r\n    this.userCollapsed_ = this.collapsed_;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  handleToggle_() {\r\n    this.element.classList.toggle(CLASS_COLLAPSED);\r\n    if (this.collapsed_) {\r\n      replaceNode(this.collapseLabel_, this.label_);\r\n    } else {\r\n      replaceNode(this.label_, this.collapseLabel_);\r\n    }\r\n    this.collapsed_ = !this.collapsed_;\r\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\r\n  }\r\n\r\n  /**\r\n   * Return `true` if the attribution is collapsible, `false` otherwise.\r\n   * @return {boolean} True if the widget is collapsible.\r\n   * @api\r\n   */\r\n  getCollapsible() {\r\n    return this.collapsible_;\r\n  }\r\n\r\n  /**\r\n   * Set whether the attribution should be collapsible.\r\n   * @param {boolean} collapsible True if the widget is collapsible.\r\n   * @api\r\n   */\r\n  setCollapsible(collapsible) {\r\n    if (this.collapsible_ === collapsible) {\r\n      return;\r\n    }\r\n    this.collapsible_ = collapsible;\r\n    this.element.classList.toggle('ol-uncollapsible');\r\n    if (this.userCollapsed_) {\r\n      this.handleToggle_();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Collapse or expand the attribution according to the passed parameter. Will\r\n   * not do anything if the attribution isn't collapsible or if the current\r\n   * collapsed state is already the one requested.\r\n   * @param {boolean} collapsed True if the widget is collapsed.\r\n   * @api\r\n   */\r\n  setCollapsed(collapsed) {\r\n    this.userCollapsed_ = collapsed;\r\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\r\n      return;\r\n    }\r\n    this.handleToggle_();\r\n  }\r\n\r\n  /**\r\n   * Return `true` when the attribution is currently collapsed or `false`\r\n   * otherwise.\r\n   * @return {boolean} True if the widget is collapsed.\r\n   * @api\r\n   */\r\n  getCollapsed() {\r\n    return this.collapsed_;\r\n  }\r\n\r\n  /**\r\n   * Update the attribution element.\r\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\r\n   * @override\r\n   */\r\n  render(mapEvent) {\r\n    this.updateElement_(mapEvent.frameState);\r\n  }\r\n}\r\n\r\nexport default Attribution;\r\n","/**\r\n * @module ol/control/Rotate\r\n */\r\nimport Control from './Control.js';\r\nimport EventType from '../events/EventType.js';\r\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\r\nimport {easeOut} from '../easing.js';\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {string} [className='ol-rotate'] CSS class name.\r\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\r\n * Instead of text, also an element (e.g. a `span` element) can be used.\r\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\r\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\r\n * @property {number} [duration=250] Animation duration in milliseconds.\r\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\r\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\r\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\r\n * @property {function():void} [resetNorth] Function called when the control is clicked.\r\n * This will override the default `resetNorth`.\r\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\r\n * rendered outside of the map's viewport.\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * A button control to reset rotation to 0.\r\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\r\n * selector is added to the button when the rotation is 0.\r\n *\r\n * @api\r\n */\r\nclass Rotate extends Control {\r\n  /**\r\n   * @param {Options} [options] Rotate options.\r\n   */\r\n  constructor(options) {\r\n    options = options ? options : {};\r\n\r\n    super({\r\n      element: document.createElement('div'),\r\n      render: options.render,\r\n      target: options.target,\r\n    });\r\n\r\n    const className =\r\n      options.className !== undefined ? options.className : 'ol-rotate';\r\n\r\n    const label = options.label !== undefined ? options.label : '\\u21E7';\r\n\r\n    const compassClassName =\r\n      options.compassClassName !== undefined\r\n        ? options.compassClassName\r\n        : 'ol-compass';\r\n\r\n    /**\r\n     * @type {HTMLElement}\r\n     * @private\r\n     */\r\n    this.label_ = null;\r\n\r\n    if (typeof label === 'string') {\r\n      this.label_ = document.createElement('span');\r\n      this.label_.className = compassClassName;\r\n      this.label_.textContent = label;\r\n    } else {\r\n      this.label_ = label;\r\n      this.label_.classList.add(compassClassName);\r\n    }\r\n\r\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\r\n\r\n    const button = document.createElement('button');\r\n    button.className = className + '-reset';\r\n    button.setAttribute('type', 'button');\r\n    button.title = tipLabel;\r\n    button.appendChild(this.label_);\r\n\r\n    button.addEventListener(\r\n      EventType.CLICK,\r\n      this.handleClick_.bind(this),\r\n      false\r\n    );\r\n\r\n    const cssClasses =\r\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\r\n    const element = this.element;\r\n    element.className = cssClasses;\r\n    element.appendChild(button);\r\n\r\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\r\n\r\n    /**\r\n     * @type {boolean}\r\n     * @private\r\n     */\r\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.rotation_ = undefined;\r\n\r\n    if (this.autoHide_) {\r\n      this.element.classList.add(CLASS_HIDDEN);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {MouseEvent} event The event to handle\r\n   * @private\r\n   */\r\n  handleClick_(event) {\r\n    event.preventDefault();\r\n    if (this.callResetNorth_ !== undefined) {\r\n      this.callResetNorth_();\r\n    } else {\r\n      this.resetNorth_();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  resetNorth_() {\r\n    const map = this.getMap();\r\n    const view = map.getView();\r\n    if (!view) {\r\n      // the map does not have a view, so we can't act\r\n      // upon it\r\n      return;\r\n    }\r\n    const rotation = view.getRotation();\r\n    if (rotation !== undefined) {\r\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\r\n        view.animate({\r\n          rotation: 0,\r\n          duration: this.duration_,\r\n          easing: easeOut,\r\n        });\r\n      } else {\r\n        view.setRotation(0);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update the rotate control element.\r\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\r\n   * @override\r\n   */\r\n  render(mapEvent) {\r\n    const frameState = mapEvent.frameState;\r\n    if (!frameState) {\r\n      return;\r\n    }\r\n    const rotation = frameState.viewState.rotation;\r\n    if (rotation != this.rotation_) {\r\n      const transform = 'rotate(' + rotation + 'rad)';\r\n      if (this.autoHide_) {\r\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\r\n        if (!contains && rotation === 0) {\r\n          this.element.classList.add(CLASS_HIDDEN);\r\n        } else if (contains && rotation !== 0) {\r\n          this.element.classList.remove(CLASS_HIDDEN);\r\n        }\r\n      }\r\n      this.label_.style.transform = transform;\r\n    }\r\n    this.rotation_ = rotation;\r\n  }\r\n}\r\n\r\nexport default Rotate;\r\n","/**\r\n * @module ol/control/Zoom\r\n */\r\nimport Control from './Control.js';\r\nimport EventType from '../events/EventType.js';\r\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\r\nimport {easeOut} from '../easing.js';\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {number} [duration=250] Animation duration in milliseconds.\r\n * @property {string} [className='ol-zoom'] CSS class name.\r\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\r\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\r\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\r\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\r\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\r\n * Instead of text, also an element (e.g. a `span` element) can be used.\r\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\r\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\r\n * @property {number} [delta=1] The zoom delta applied on each click.\r\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\r\n * rendered outside of the map's viewport.\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * A control with 2 buttons, one for zoom in and one for zoom out.\r\n * This control is one of the default controls of a map. To style this control\r\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\r\n *\r\n * @api\r\n */\r\nclass Zoom extends Control {\r\n  /**\r\n   * @param {Options} [options] Zoom options.\r\n   */\r\n  constructor(options) {\r\n    options = options ? options : {};\r\n\r\n    super({\r\n      element: document.createElement('div'),\r\n      target: options.target,\r\n    });\r\n\r\n    const className =\r\n      options.className !== undefined ? options.className : 'ol-zoom';\r\n\r\n    const delta = options.delta !== undefined ? options.delta : 1;\r\n\r\n    const zoomInClassName =\r\n      options.zoomInClassName !== undefined\r\n        ? options.zoomInClassName\r\n        : className + '-in';\r\n\r\n    const zoomOutClassName =\r\n      options.zoomOutClassName !== undefined\r\n        ? options.zoomOutClassName\r\n        : className + '-out';\r\n\r\n    const zoomInLabel =\r\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\r\n    const zoomOutLabel =\r\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\r\n\r\n    const zoomInTipLabel =\r\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\r\n    const zoomOutTipLabel =\r\n      options.zoomOutTipLabel !== undefined\r\n        ? options.zoomOutTipLabel\r\n        : 'Zoom out';\r\n\r\n    const inElement = document.createElement('button');\r\n    inElement.className = zoomInClassName;\r\n    inElement.setAttribute('type', 'button');\r\n    inElement.title = zoomInTipLabel;\r\n    inElement.appendChild(\r\n      typeof zoomInLabel === 'string'\r\n        ? document.createTextNode(zoomInLabel)\r\n        : zoomInLabel\r\n    );\r\n\r\n    inElement.addEventListener(\r\n      EventType.CLICK,\r\n      this.handleClick_.bind(this, delta),\r\n      false\r\n    );\r\n\r\n    const outElement = document.createElement('button');\r\n    outElement.className = zoomOutClassName;\r\n    outElement.setAttribute('type', 'button');\r\n    outElement.title = zoomOutTipLabel;\r\n    outElement.appendChild(\r\n      typeof zoomOutLabel === 'string'\r\n        ? document.createTextNode(zoomOutLabel)\r\n        : zoomOutLabel\r\n    );\r\n\r\n    outElement.addEventListener(\r\n      EventType.CLICK,\r\n      this.handleClick_.bind(this, -delta),\r\n      false\r\n    );\r\n\r\n    const cssClasses =\r\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\r\n    const element = this.element;\r\n    element.className = cssClasses;\r\n    element.appendChild(inElement);\r\n    element.appendChild(outElement);\r\n\r\n    /**\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\r\n  }\r\n\r\n  /**\r\n   * @param {number} delta Zoom delta.\r\n   * @param {MouseEvent} event The event to handle\r\n   * @private\r\n   */\r\n  handleClick_(delta, event) {\r\n    event.preventDefault();\r\n    this.zoomByDelta_(delta);\r\n  }\r\n\r\n  /**\r\n   * @param {number} delta Zoom delta.\r\n   * @private\r\n   */\r\n  zoomByDelta_(delta) {\r\n    const map = this.getMap();\r\n    const view = map.getView();\r\n    if (!view) {\r\n      // the map does not have a view, so we can't act\r\n      // upon it\r\n      return;\r\n    }\r\n    const currentZoom = view.getZoom();\r\n    if (currentZoom !== undefined) {\r\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\r\n      if (this.duration_ > 0) {\r\n        if (view.getAnimating()) {\r\n          view.cancelAnimations();\r\n        }\r\n        view.animate({\r\n          zoom: newZoom,\r\n          duration: this.duration_,\r\n          easing: easeOut,\r\n        });\r\n      } else {\r\n        view.setZoom(newZoom);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default Zoom;\r\n","/**\r\n * @module ol/control/defaults\r\n */\r\nimport Attribution from './Attribution.js';\r\nimport Collection from '../Collection.js';\r\nimport Rotate from './Rotate.js';\r\nimport Zoom from './Zoom.js';\r\n\r\n/**\r\n * @typedef {Object} DefaultsOptions\r\n * @property {boolean} [attribution=true] Include\r\n * {@link module:ol/control/Attribution~Attribution}.\r\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\r\n * Options for {@link module:ol/control/Attribution~Attribution}.\r\n * @property {boolean} [rotate=true] Include\r\n * {@link module:ol/control/Rotate~Rotate}.\r\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\r\n * for {@link module:ol/control/Rotate~Rotate}.\r\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\r\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\r\n * {@link module:ol/control/Zoom~Zoom}.\r\n */\r\n\r\n/**\r\n * Set of controls included in maps by default. Unless configured otherwise,\r\n * this returns a collection containing an instance of each of the following\r\n * controls:\r\n * * {@link module:ol/control/Zoom~Zoom}\r\n * * {@link module:ol/control/Rotate~Rotate}\r\n * * {@link module:ol/control/Attribution~Attribution}\r\n *\r\n * @param {DefaultsOptions} [options] Options for the default controls.\r\n * @return {Collection<import(\"./Control.js\").default>} A collection of controls\r\n * to be used with the {@link module:ol/Map~Map} constructor's `controls` option.\r\n * @api\r\n */\r\nexport function defaults(options) {\r\n  options = options ? options : {};\r\n\r\n  /** @type {Collection<import(\"./Control.js\").default>} */\r\n  const controls = new Collection();\r\n\r\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\r\n  if (zoomControl) {\r\n    controls.push(new Zoom(options.zoomOptions));\r\n  }\r\n\r\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\r\n  if (rotateControl) {\r\n    controls.push(new Rotate(options.rotateOptions));\r\n  }\r\n\r\n  const attributionControl =\r\n    options.attribution !== undefined ? options.attribution : true;\r\n  if (attributionControl) {\r\n    controls.push(new Attribution(options.attributionOptions));\r\n  }\r\n\r\n  return controls;\r\n}\r\n","/**\r\n * @module ol/interaction/Property\r\n */\r\n\r\n/**\r\n * @enum {string}\r\n */\r\nexport default {\r\n  ACTIVE: 'active',\r\n};\r\n","/**\r\n * @module ol/interaction/Interaction\r\n */\r\nimport BaseObject from '../Object.js';\r\nimport InteractionProperty from './Property.js';\r\nimport {easeOut, linear} from '../easing.js';\r\n\r\n/***\r\n * @template Return\r\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\r\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\r\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\r\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\r\n *     'change:active', Return>} InteractionOnSignature\r\n */\r\n\r\n/**\r\n * Object literal with config options for interactions.\r\n * @typedef {Object} InteractionOptions\r\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\r\n * Method called by the map to notify the interaction that a browser event was\r\n * dispatched to the map. If the function returns a falsy value, propagation of\r\n * the event to other interactions in the map's interactions chain will be\r\n * prevented (this includes functions with no explicit return). The interactions\r\n * are traversed in reverse order of the interactions collection of the map.\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Abstract base class; normally only used for creating subclasses and not\r\n * instantiated in apps.\r\n * User actions that change the state of the map. Some are similar to controls,\r\n * but are not associated with a DOM element.\r\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\r\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\r\n * by a keyboard event not a button element event.\r\n * Although interactions do not have a DOM element, some of them do render\r\n * vectors and so are visible on the screen.\r\n * @api\r\n */\r\nclass Interaction extends BaseObject {\r\n  /**\r\n   * @param {InteractionOptions} [options] Options.\r\n   */\r\n  constructor(options) {\r\n    super();\r\n\r\n    /***\r\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\r\n     */\r\n    this.on;\r\n\r\n    /***\r\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\r\n     */\r\n    this.once;\r\n\r\n    /***\r\n     * @type {InteractionOnSignature<void>}\r\n     */\r\n    this.un;\r\n\r\n    if (options && options.handleEvent) {\r\n      this.handleEvent = options.handleEvent;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../Map.js\").default|null}\r\n     */\r\n    this.map_ = null;\r\n\r\n    this.setActive(true);\r\n  }\r\n\r\n  /**\r\n   * Return whether the interaction is currently active.\r\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\r\n   * @observable\r\n   * @api\r\n   */\r\n  getActive() {\r\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\r\n  }\r\n\r\n  /**\r\n   * Get the map associated with this interaction.\r\n   * @return {import(\"../Map.js\").default|null} Map.\r\n   * @api\r\n   */\r\n  getMap() {\r\n    return this.map_;\r\n  }\r\n\r\n  /**\r\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n   * @return {boolean} `false` to stop event propagation.\r\n   * @api\r\n   */\r\n  handleEvent(mapBrowserEvent) {\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Activate or deactivate the interaction.\r\n   * @param {boolean} active Active.\r\n   * @observable\r\n   * @api\r\n   */\r\n  setActive(active) {\r\n    this.set(InteractionProperty.ACTIVE, active);\r\n  }\r\n\r\n  /**\r\n   * Remove the interaction from its current map and attach it to the new map.\r\n   * Subclasses may set up event handlers to get notified about changes to\r\n   * the map here.\r\n   * @param {import(\"../Map.js\").default|null} map Map.\r\n   */\r\n  setMap(map) {\r\n    this.map_ = map;\r\n  }\r\n}\r\n\r\n/**\r\n * @param {import(\"../View.js\").default} view View.\r\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\r\n * @param {number} [duration] Duration.\r\n */\r\nexport function pan(view, delta, duration) {\r\n  const currentCenter = view.getCenterInternal();\r\n  if (currentCenter) {\r\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\r\n    view.animateInternal({\r\n      duration: duration !== undefined ? duration : 250,\r\n      easing: linear,\r\n      center: view.getConstrainedCenter(center),\r\n    });\r\n  }\r\n}\r\n\r\n/**\r\n * @param {import(\"../View.js\").default} view View.\r\n * @param {number} delta Delta from previous zoom level.\r\n * @param {import(\"../coordinate.js\").Coordinate} [anchor] Anchor coordinate in the user projection.\r\n * @param {number} [duration] Duration.\r\n */\r\nexport function zoomByDelta(view, delta, anchor, duration) {\r\n  const currentZoom = view.getZoom();\r\n\r\n  if (currentZoom === undefined) {\r\n    return;\r\n  }\r\n\r\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\r\n  const newResolution = view.getResolutionForZoom(newZoom);\r\n\r\n  if (view.getAnimating()) {\r\n    view.cancelAnimations();\r\n  }\r\n  view.animate({\r\n    resolution: newResolution,\r\n    anchor: anchor,\r\n    duration: duration !== undefined ? duration : 250,\r\n    easing: easeOut,\r\n  });\r\n}\r\n\r\nexport default Interaction;\r\n","/**\r\n * @module ol/interaction/DoubleClickZoom\r\n */\r\nimport Interaction, {zoomByDelta} from './Interaction.js';\r\nimport MapBrowserEventType from '../MapBrowserEventType.js';\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {number} [duration=250] Animation duration in milliseconds.\r\n * @property {number} [delta=1] The zoom delta applied on each double click.\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Allows the user to zoom by double-clicking on the map.\r\n * @api\r\n */\r\nclass DoubleClickZoom extends Interaction {\r\n  /**\r\n   * @param {Options} [options] Options.\r\n   */\r\n  constructor(options) {\r\n    super();\r\n\r\n    options = options ? options : {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.delta_ = options.delta ? options.delta : 1;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\r\n  }\r\n\r\n  /**\r\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a\r\n   * doubleclick) and eventually zooms the map.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n   * @return {boolean} `false` to stop event propagation.\r\n   */\r\n  handleEvent(mapBrowserEvent) {\r\n    let stopEvent = false;\r\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\r\n      const browserEvent = /** @type {MouseEvent} */ (\r\n        mapBrowserEvent.originalEvent\r\n      );\r\n      const map = mapBrowserEvent.map;\r\n      const anchor = mapBrowserEvent.coordinate;\r\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\r\n      const view = map.getView();\r\n      zoomByDelta(view, delta, anchor, this.duration_);\r\n      browserEvent.preventDefault();\r\n      stopEvent = true;\r\n    }\r\n    return !stopEvent;\r\n  }\r\n}\r\n\r\nexport default DoubleClickZoom;\r\n","/**\r\n * @module ol/interaction/Pointer\r\n */\r\nimport Interaction from './Interaction.js';\r\nimport MapBrowserEventType from '../MapBrowserEventType.js';\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\r\n * Function handling \"down\" events. If the function returns `true` then a drag\r\n * sequence is started.\r\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\r\n * Function handling \"drag\" events. This function is called on \"move\" events\r\n * during a drag sequence.\r\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\r\n * Method called by the map to notify the interaction that a browser event was\r\n * dispatched to the map. The function may return `false` to prevent the\r\n * propagation of the event to other interactions in the map's interactions\r\n * chain.\r\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\r\n * Function handling \"move\" events. This function is called on \"move\" events.\r\n * This functions is also called during a drag sequence, so during a drag\r\n * sequence both the `handleDragEvent` function and this function are called.\r\n * If `handleDownEvent` is defined and it returns true this function will not\r\n * be called during a drag sequence.\r\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\r\n *  Function handling \"up\" events. If the function returns `false` then the\r\n * current drag sequence is stopped.\r\n * @property {function(boolean):boolean} [stopDown]\r\n * Should the down event be propagated to other interactions, or should be\r\n * stopped?\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Base class that calls user-defined functions on `down`, `move` and `up`\r\n * events. This class also manages \"drag sequences\".\r\n *\r\n * When the `handleDownEvent` user function returns `true` a drag sequence is\r\n * started. During a drag sequence the `handleDragEvent` user function is\r\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\r\n * user function is called and returns `false`.\r\n * @api\r\n */\r\nclass PointerInteraction extends Interaction {\r\n  /**\r\n   * @param {Options} [options] Options.\r\n   */\r\n  constructor(options) {\r\n    options = options ? options : {};\r\n\r\n    super(\r\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\r\n    );\r\n\r\n    if (options.handleDownEvent) {\r\n      this.handleDownEvent = options.handleDownEvent;\r\n    }\r\n\r\n    if (options.handleDragEvent) {\r\n      this.handleDragEvent = options.handleDragEvent;\r\n    }\r\n\r\n    if (options.handleMoveEvent) {\r\n      this.handleMoveEvent = options.handleMoveEvent;\r\n    }\r\n\r\n    if (options.handleUpEvent) {\r\n      this.handleUpEvent = options.handleUpEvent;\r\n    }\r\n\r\n    if (options.stopDown) {\r\n      this.stopDown = options.stopDown;\r\n    }\r\n\r\n    /**\r\n     * @type {boolean}\r\n     * @protected\r\n     */\r\n    this.handlingDownUpSequence = false;\r\n\r\n    /**\r\n     * @type {Array<PointerEvent>}\r\n     * @protected\r\n     */\r\n    this.targetPointers = [];\r\n  }\r\n\r\n  /**\r\n   * Returns the current number of pointers involved in the interaction,\r\n   * e.g. `2` when two fingers are used.\r\n   * @return {number} The number of pointers.\r\n   * @api\r\n   */\r\n  getPointerCount() {\r\n    return this.targetPointers.length;\r\n  }\r\n\r\n  /**\r\n   * Handle pointer down events.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\r\n   * @return {boolean} If the event was consumed.\r\n   * @protected\r\n   */\r\n  handleDownEvent(mapBrowserEvent) {\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Handle pointer drag events.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\r\n   * @protected\r\n   */\r\n  handleDragEvent(mapBrowserEvent) {}\r\n\r\n  /**\r\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\r\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\r\n   * detected.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n   * @return {boolean} `false` to stop event propagation.\r\n   * @api\r\n   */\r\n  handleEvent(mapBrowserEvent) {\r\n    if (!mapBrowserEvent.originalEvent) {\r\n      return true;\r\n    }\r\n\r\n    let stopEvent = false;\r\n    this.updateTrackedPointers_(mapBrowserEvent);\r\n    if (this.handlingDownUpSequence) {\r\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\r\n        this.handleDragEvent(mapBrowserEvent);\r\n        // prevent page scrolling during dragging\r\n        mapBrowserEvent.originalEvent.preventDefault();\r\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\r\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\r\n        this.handlingDownUpSequence =\r\n          handledUp && this.targetPointers.length > 0;\r\n      }\r\n    } else {\r\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\r\n        const handled = this.handleDownEvent(mapBrowserEvent);\r\n        this.handlingDownUpSequence = handled;\r\n        stopEvent = this.stopDown(handled);\r\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\r\n        this.handleMoveEvent(mapBrowserEvent);\r\n      }\r\n    }\r\n    return !stopEvent;\r\n  }\r\n\r\n  /**\r\n   * Handle pointer move events.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\r\n   * @protected\r\n   */\r\n  handleMoveEvent(mapBrowserEvent) {}\r\n\r\n  /**\r\n   * Handle pointer up events.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\r\n   * @return {boolean} If the event was consumed.\r\n   * @protected\r\n   */\r\n  handleUpEvent(mapBrowserEvent) {\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * This function is used to determine if \"down\" events should be propagated\r\n   * to other interactions or should be stopped.\r\n   * @param {boolean} handled Was the event handled by the interaction?\r\n   * @return {boolean} Should the `down` event be stopped?\r\n   */\r\n  stopDown(handled) {\r\n    return handled;\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\r\n   * @private\r\n   */\r\n  updateTrackedPointers_(mapBrowserEvent) {\r\n    if (mapBrowserEvent.activePointers) {\r\n      this.targetPointers = mapBrowserEvent.activePointers;\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * @param {Array<PointerEvent>} pointerEvents List of events.\r\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\r\n */\r\nexport function centroid(pointerEvents) {\r\n  const length = pointerEvents.length;\r\n  let clientX = 0;\r\n  let clientY = 0;\r\n  for (let i = 0; i < length; i++) {\r\n    clientX += pointerEvents[i].clientX;\r\n    clientY += pointerEvents[i].clientY;\r\n  }\r\n  return [clientX / length, clientY / length];\r\n}\r\n\r\nexport default PointerInteraction;\r\n","/**\r\n * @module ol/events/condition\r\n */\r\nimport MapBrowserEventType from '../MapBrowserEventType.js';\r\nimport {FALSE, TRUE} from '../functions.js';\r\nimport {MAC, WEBKIT} from '../has.js';\r\nimport {assert} from '../asserts.js';\r\n\r\n/**\r\n * A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\r\n * `{boolean}`. If the condition is met, true should be returned.\r\n *\r\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\r\n */\r\n\r\n/**\r\n * Creates a condition function that passes when all provided conditions pass.\r\n * @param {...Condition} var_args Conditions to check.\r\n * @return {Condition} Condition function.\r\n */\r\nexport function all(var_args) {\r\n  const conditions = arguments;\r\n  /**\r\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\r\n   * @return {boolean} All conditions passed.\r\n   */\r\n  return function (event) {\r\n    let pass = true;\r\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\r\n      pass = pass && conditions[i](event);\r\n      if (!pass) {\r\n        break;\r\n      }\r\n    }\r\n    return pass;\r\n  };\r\n}\r\n\r\n/**\r\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\r\n * additionally the shift-key is pressed).\r\n *\r\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n * @return {boolean} True if only the alt key is pressed.\r\n * @api\r\n */\r\nexport const altKeyOnly = function (mapBrowserEvent) {\r\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\r\n    mapBrowserEvent.originalEvent\r\n  );\r\n  return (\r\n    originalEvent.altKey &&\r\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\r\n    !originalEvent.shiftKey\r\n  );\r\n};\r\n\r\n/**\r\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\r\n * (e.g. when additionally the platform-modifier-key is pressed).\r\n *\r\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n * @return {boolean} True if only the alt and shift keys are pressed.\r\n * @api\r\n */\r\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\r\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\r\n    mapBrowserEvent.originalEvent\r\n  );\r\n  return (\r\n    originalEvent.altKey &&\r\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\r\n    originalEvent.shiftKey\r\n  );\r\n};\r\n\r\n/**\r\n * Return `true` if the map has the focus. This condition requires a map target\r\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\r\n *\r\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\r\n * @return {boolean} The map has the focus.\r\n * @api\r\n */\r\nexport const focus = function (event) {\r\n  const targetElement = event.map.getTargetElement();\r\n  const activeElement = event.map.getOwnerDocument().activeElement;\r\n  return targetElement.contains(activeElement);\r\n};\r\n\r\n/**\r\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\r\n *\r\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\r\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\r\n */\r\nexport const focusWithTabindex = function (event) {\r\n  return event.map.getTargetElement().hasAttribute('tabindex')\r\n    ? focus(event)\r\n    : true;\r\n};\r\n\r\n/**\r\n * Return always true.\r\n *\r\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n * @return {boolean} True.\r\n * @api\r\n */\r\nexport const always = TRUE;\r\n\r\n/**\r\n * Return `true` if the event is a `click` event, `false` otherwise.\r\n *\r\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n * @return {boolean} True if the event is a map `click` event.\r\n * @api\r\n */\r\nexport const click = function (mapBrowserEvent) {\r\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\r\n};\r\n\r\n/**\r\n * Return `true` if the event has an \"action\"-producing mouse button.\r\n *\r\n * By definition, this includes left-click on windows/linux, and left-click\r\n * without the ctrl key on Macs.\r\n *\r\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n * @return {boolean} The result.\r\n */\r\nexport const mouseActionButton = function (mapBrowserEvent) {\r\n  const originalEvent = /** @type {MouseEvent} */ (\r\n    mapBrowserEvent.originalEvent\r\n  );\r\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\r\n};\r\n\r\n/**\r\n * Return always false.\r\n *\r\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n * @return {boolean} False.\r\n * @api\r\n */\r\nexport const never = FALSE;\r\n\r\n/**\r\n * Return `true` if the browser event is a `pointermove` event, `false`\r\n * otherwise.\r\n *\r\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n * @return {boolean} True if the browser event is a `pointermove` event.\r\n * @api\r\n */\r\nexport const pointerMove = function (mapBrowserEvent) {\r\n  return mapBrowserEvent.type == 'pointermove';\r\n};\r\n\r\n/**\r\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\r\n *\r\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n * @return {boolean} True if the event is a map `singleclick` event.\r\n * @api\r\n */\r\nexport const singleClick = function (mapBrowserEvent) {\r\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\r\n};\r\n\r\n/**\r\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\r\n *\r\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n * @return {boolean} True if the event is a map `dblclick` event.\r\n * @api\r\n */\r\nexport const doubleClick = function (mapBrowserEvent) {\r\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\r\n};\r\n\r\n/**\r\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\r\n * pressed.\r\n *\r\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n * @return {boolean} True only if there no modifier keys are pressed.\r\n * @api\r\n */\r\nexport const noModifierKeys = function (mapBrowserEvent) {\r\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\r\n    mapBrowserEvent.originalEvent\r\n  );\r\n  return (\r\n    !originalEvent.altKey &&\r\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\r\n    !originalEvent.shiftKey\r\n  );\r\n};\r\n\r\n/**\r\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\r\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\r\n * the shift-key is pressed).\r\n *\r\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n * @return {boolean} True if only the platform modifier key is pressed.\r\n * @api\r\n */\r\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\r\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\r\n    mapBrowserEvent.originalEvent\r\n  );\r\n  return (\r\n    !originalEvent.altKey &&\r\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\r\n    !originalEvent.shiftKey\r\n  );\r\n};\r\n\r\n/**\r\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\r\n * additionally the alt-key is pressed).\r\n *\r\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n * @return {boolean} True if only the shift key is pressed.\r\n * @api\r\n */\r\nexport const shiftKeyOnly = function (mapBrowserEvent) {\r\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\r\n    mapBrowserEvent.originalEvent\r\n  );\r\n  return (\r\n    !originalEvent.altKey &&\r\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\r\n    originalEvent.shiftKey\r\n  );\r\n};\r\n\r\n/**\r\n * Return `true` if the target element is not editable, i.e. not an `input`,\r\n * `select`, or `textarea` element and no `contenteditable` attribute is\r\n * set or inherited, `false` otherwise.\r\n *\r\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n * @return {boolean} True only if the target element is not editable.\r\n * @api\r\n */\r\nexport const targetNotEditable = function (mapBrowserEvent) {\r\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\r\n    mapBrowserEvent.originalEvent\r\n  );\r\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\r\n  return (\r\n    tagName !== 'INPUT' &&\r\n    tagName !== 'SELECT' &&\r\n    tagName !== 'TEXTAREA' &&\r\n    // `isContentEditable` is only available on `HTMLElement`, but it may also be a\r\n    // different type like `SVGElement`.\r\n    // @ts-ignore\r\n    !originalEvent.target.isContentEditable\r\n  );\r\n};\r\n\r\n/**\r\n * Return `true` if the event originates from a mouse device.\r\n *\r\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n * @return {boolean} True if the event originates from a mouse device.\r\n * @api\r\n */\r\nexport const mouseOnly = function (mapBrowserEvent) {\r\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\r\n    mapBrowserEvent\r\n  ).originalEvent;\r\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\r\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\r\n  return pointerEvent.pointerType == 'mouse';\r\n};\r\n\r\n/**\r\n * Return `true` if the event originates from a touchable device.\r\n *\r\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n * @return {boolean} True if the event originates from a touchable device.\r\n * @api\r\n */\r\nexport const touchOnly = function (mapBrowserEvent) {\r\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\r\n    mapBrowserEvent\r\n  ).originalEvent;\r\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\r\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\r\n  return pointerEvt.pointerType === 'touch';\r\n};\r\n\r\n/**\r\n * Return `true` if the event originates from a digital pen.\r\n *\r\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n * @return {boolean} True if the event originates from a digital pen.\r\n * @api\r\n */\r\nexport const penOnly = function (mapBrowserEvent) {\r\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\r\n    mapBrowserEvent\r\n  ).originalEvent;\r\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\r\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\r\n  return pointerEvt.pointerType === 'pen';\r\n};\r\n\r\n/**\r\n * Return `true` if the event originates from a primary pointer in\r\n * contact with the surface or if the left mouse button is pressed.\r\n * See https://www.w3.org/TR/pointerevents/#button-states.\r\n *\r\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n * @return {boolean} True if the event originates from a primary pointer.\r\n * @api\r\n */\r\nexport const primaryAction = function (mapBrowserEvent) {\r\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\r\n    mapBrowserEvent\r\n  ).originalEvent;\r\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\r\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\r\n};\r\n","/**\r\n * @module ol/interaction/DragPan\r\n */\r\nimport PointerInteraction, {\r\n  centroid as centroidFromPointers,\r\n} from './Pointer.js';\r\nimport {FALSE} from '../functions.js';\r\nimport {\r\n  all,\r\n  focusWithTabindex,\r\n  noModifierKeys,\r\n  primaryAction,\r\n} from '../events/condition.js';\r\nimport {easeOut} from '../easing.js';\r\nimport {\r\n  rotate as rotateCoordinate,\r\n  scale as scaleCoordinate,\r\n} from '../coordinate.js';\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\r\n * to indicate whether that event should be handled.\r\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\r\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\r\n * the interaction will only handle events when the map has the focus.\r\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Allows the user to pan the map by dragging the map.\r\n * @api\r\n */\r\nclass DragPan extends PointerInteraction {\r\n  /**\r\n   * @param {Options} [options] Options.\r\n   */\r\n  constructor(options) {\r\n    super({\r\n      stopDown: FALSE,\r\n    });\r\n\r\n    options = options ? options : {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../Kinetic.js\").default|undefined}\r\n     */\r\n    this.kinetic_ = options.kinetic;\r\n\r\n    /**\r\n     * @type {import(\"../pixel.js\").Pixel}\r\n     */\r\n    this.lastCentroid = null;\r\n\r\n    /**\r\n     * @type {number}\r\n     */\r\n    this.lastPointersCount_;\r\n\r\n    /**\r\n     * @type {boolean}\r\n     */\r\n    this.panning_ = false;\r\n\r\n    const condition = options.condition\r\n      ? options.condition\r\n      : all(noModifierKeys, primaryAction);\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../events/condition.js\").Condition}\r\n     */\r\n    this.condition_ = options.onFocusOnly\r\n      ? all(focusWithTabindex, condition)\r\n      : condition;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.noKinetic_ = false;\r\n  }\r\n\r\n  /**\r\n   * Handle pointer drag events.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\r\n   */\r\n  handleDragEvent(mapBrowserEvent) {\r\n    if (!this.panning_) {\r\n      this.panning_ = true;\r\n      this.getMap().getView().beginInteraction();\r\n    }\r\n    const targetPointers = this.targetPointers;\r\n    const centroid = centroidFromPointers(targetPointers);\r\n    if (targetPointers.length == this.lastPointersCount_) {\r\n      if (this.kinetic_) {\r\n        this.kinetic_.update(centroid[0], centroid[1]);\r\n      }\r\n      if (this.lastCentroid) {\r\n        const delta = [\r\n          this.lastCentroid[0] - centroid[0],\r\n          centroid[1] - this.lastCentroid[1],\r\n        ];\r\n        const map = mapBrowserEvent.map;\r\n        const view = map.getView();\r\n        scaleCoordinate(delta, view.getResolution());\r\n        rotateCoordinate(delta, view.getRotation());\r\n        view.adjustCenterInternal(delta);\r\n      }\r\n    } else if (this.kinetic_) {\r\n      // reset so we don't overestimate the kinetic energy after\r\n      // after one finger down, tiny drag, second finger down\r\n      this.kinetic_.begin();\r\n    }\r\n    this.lastCentroid = centroid;\r\n    this.lastPointersCount_ = targetPointers.length;\r\n    mapBrowserEvent.originalEvent.preventDefault();\r\n  }\r\n\r\n  /**\r\n   * Handle pointer up events.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\r\n   * @return {boolean} If the event was consumed.\r\n   */\r\n  handleUpEvent(mapBrowserEvent) {\r\n    const map = mapBrowserEvent.map;\r\n    const view = map.getView();\r\n    if (this.targetPointers.length === 0) {\r\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\r\n        const distance = this.kinetic_.getDistance();\r\n        const angle = this.kinetic_.getAngle();\r\n        const center = view.getCenterInternal();\r\n        const centerpx = map.getPixelFromCoordinateInternal(center);\r\n        const dest = map.getCoordinateFromPixelInternal([\r\n          centerpx[0] - distance * Math.cos(angle),\r\n          centerpx[1] - distance * Math.sin(angle),\r\n        ]);\r\n        view.animateInternal({\r\n          center: view.getConstrainedCenter(dest),\r\n          duration: 500,\r\n          easing: easeOut,\r\n        });\r\n      }\r\n      if (this.panning_) {\r\n        this.panning_ = false;\r\n        view.endInteraction();\r\n      }\r\n      return false;\r\n    } else {\r\n      if (this.kinetic_) {\r\n        // reset so we don't overestimate the kinetic energy after\r\n        // after one finger up, tiny drag, second finger up\r\n        this.kinetic_.begin();\r\n      }\r\n      this.lastCentroid = null;\r\n      return true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle pointer down events.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\r\n   * @return {boolean} If the event was consumed.\r\n   */\r\n  handleDownEvent(mapBrowserEvent) {\r\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\r\n      const map = mapBrowserEvent.map;\r\n      const view = map.getView();\r\n      this.lastCentroid = null;\r\n      // stop any current animation\r\n      if (view.getAnimating()) {\r\n        view.cancelAnimations();\r\n      }\r\n      if (this.kinetic_) {\r\n        this.kinetic_.begin();\r\n      }\r\n      // No kinetic as soon as more than one pointer on the screen is\r\n      // detected. This is to prevent nasty pans after pinch.\r\n      this.noKinetic_ = this.targetPointers.length > 1;\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n}\r\n\r\nexport default DragPan;\r\n","/**\r\n * @module ol/interaction/DragRotate\r\n */\r\nimport PointerInteraction from './Pointer.js';\r\nimport {FALSE} from '../functions.js';\r\nimport {\r\n  altShiftKeysOnly,\r\n  mouseActionButton,\r\n  mouseOnly,\r\n} from '../events/condition.js';\r\nimport {disable} from '../rotationconstraint.js';\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\r\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\r\n * to indicate whether that event should be handled.\r\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\r\n * @property {number} [duration=250] Animation duration in milliseconds.\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Allows the user to rotate the map by clicking and dragging on the map,\r\n * normally combined with an {@link module:ol/events/condition} that limits\r\n * it to when the alt and shift keys are held down.\r\n *\r\n * This interaction is only supported for mouse devices.\r\n * @api\r\n */\r\nclass DragRotate extends PointerInteraction {\r\n  /**\r\n   * @param {Options} [options] Options.\r\n   */\r\n  constructor(options) {\r\n    options = options ? options : {};\r\n\r\n    super({\r\n      stopDown: FALSE,\r\n    });\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../events/condition.js\").Condition}\r\n     */\r\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.lastAngle_ = undefined;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\r\n  }\r\n\r\n  /**\r\n   * Handle pointer drag events.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\r\n   */\r\n  handleDragEvent(mapBrowserEvent) {\r\n    if (!mouseOnly(mapBrowserEvent)) {\r\n      return;\r\n    }\r\n\r\n    const map = mapBrowserEvent.map;\r\n    const view = map.getView();\r\n    if (view.getConstraints().rotation === disable) {\r\n      return;\r\n    }\r\n    const size = map.getSize();\r\n    const offset = mapBrowserEvent.pixel;\r\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\r\n    if (this.lastAngle_ !== undefined) {\r\n      const delta = theta - this.lastAngle_;\r\n      view.adjustRotationInternal(-delta);\r\n    }\r\n    this.lastAngle_ = theta;\r\n  }\r\n\r\n  /**\r\n   * Handle pointer up events.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\r\n   * @return {boolean} If the event was consumed.\r\n   */\r\n  handleUpEvent(mapBrowserEvent) {\r\n    if (!mouseOnly(mapBrowserEvent)) {\r\n      return true;\r\n    }\r\n\r\n    const map = mapBrowserEvent.map;\r\n    const view = map.getView();\r\n    view.endInteraction(this.duration_);\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Handle pointer down events.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\r\n   * @return {boolean} If the event was consumed.\r\n   */\r\n  handleDownEvent(mapBrowserEvent) {\r\n    if (!mouseOnly(mapBrowserEvent)) {\r\n      return false;\r\n    }\r\n\r\n    if (\r\n      mouseActionButton(mapBrowserEvent) &&\r\n      this.condition_(mapBrowserEvent)\r\n    ) {\r\n      const map = mapBrowserEvent.map;\r\n      map.getView().beginInteraction();\r\n      this.lastAngle_ = undefined;\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n}\r\n\r\nexport default DragRotate;\r\n","/**\r\n * @module ol/render/Box\r\n */\r\n\r\nimport Disposable from '../Disposable.js';\r\nimport Polygon from '../geom/Polygon.js';\r\n\r\nclass RenderBox extends Disposable {\r\n  /**\r\n   * @param {string} className CSS class name.\r\n   */\r\n  constructor(className) {\r\n    super();\r\n\r\n    /**\r\n     * @type {import(\"../geom/Polygon.js\").default}\r\n     * @private\r\n     */\r\n    this.geometry_ = null;\r\n\r\n    /**\r\n     * @type {HTMLDivElement}\r\n     * @private\r\n     */\r\n    this.element_ = document.createElement('div');\r\n    this.element_.style.position = 'absolute';\r\n    this.element_.style.pointerEvents = 'auto';\r\n    this.element_.className = 'ol-box ' + className;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../Map.js\").default|null}\r\n     */\r\n    this.map_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../pixel.js\").Pixel}\r\n     */\r\n    this.startPixel_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../pixel.js\").Pixel}\r\n     */\r\n    this.endPixel_ = null;\r\n  }\r\n\r\n  /**\r\n   * Clean up.\r\n   */\r\n  disposeInternal() {\r\n    this.setMap(null);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  render_() {\r\n    const startPixel = this.startPixel_;\r\n    const endPixel = this.endPixel_;\r\n    const px = 'px';\r\n    const style = this.element_.style;\r\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\r\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\r\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\r\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../Map.js\").default|null} map Map.\r\n   */\r\n  setMap(map) {\r\n    if (this.map_) {\r\n      this.map_.getOverlayContainer().removeChild(this.element_);\r\n      const style = this.element_.style;\r\n      style.left = 'inherit';\r\n      style.top = 'inherit';\r\n      style.width = 'inherit';\r\n      style.height = 'inherit';\r\n    }\r\n    this.map_ = map;\r\n    if (this.map_) {\r\n      this.map_.getOverlayContainer().appendChild(this.element_);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\r\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\r\n   */\r\n  setPixels(startPixel, endPixel) {\r\n    this.startPixel_ = startPixel;\r\n    this.endPixel_ = endPixel;\r\n    this.createOrUpdateGeometry();\r\n    this.render_();\r\n  }\r\n\r\n  /**\r\n   * Creates or updates the cached geometry.\r\n   */\r\n  createOrUpdateGeometry() {\r\n    const startPixel = this.startPixel_;\r\n    const endPixel = this.endPixel_;\r\n    const pixels = [\r\n      startPixel,\r\n      [startPixel[0], endPixel[1]],\r\n      endPixel,\r\n      [endPixel[0], startPixel[1]],\r\n    ];\r\n    const coordinates = pixels.map(\r\n      this.map_.getCoordinateFromPixelInternal,\r\n      this.map_\r\n    );\r\n    // close the polygon\r\n    coordinates[4] = coordinates[0].slice();\r\n    if (!this.geometry_) {\r\n      this.geometry_ = new Polygon([coordinates]);\r\n    } else {\r\n      this.geometry_.setCoordinates([coordinates]);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\r\n   */\r\n  getGeometry() {\r\n    return this.geometry_;\r\n  }\r\n}\r\n\r\nexport default RenderBox;\r\n","/**\r\n * @module ol/interaction/DragBox\r\n */\r\n// FIXME draw drag box\r\nimport Event from '../events/Event.js';\r\nimport PointerInteraction from './Pointer.js';\r\nimport RenderBox from '../render/Box.js';\r\nimport {mouseActionButton} from '../events/condition.js';\r\n\r\n/**\r\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\r\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\r\n * true should be returned.\r\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\r\n */\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\r\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\r\n * to indicate whether that event should be handled.\r\n * Default is {@link ol/events/condition~mouseActionButton}.\r\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\r\n * `boxEndCondition` function.\r\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\r\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\r\n * Default is `true` if the area of the box is bigger than the `minArea` option.\r\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\r\n * before `boxend` is fired.\r\n */\r\n\r\n/**\r\n * @enum {string}\r\n */\r\nconst DragBoxEventType = {\r\n  /**\r\n   * Triggered upon drag box start.\r\n   * @event DragBoxEvent#boxstart\r\n   * @api\r\n   */\r\n  BOXSTART: 'boxstart',\r\n\r\n  /**\r\n   * Triggered on drag when box is active.\r\n   * @event DragBoxEvent#boxdrag\r\n   * @api\r\n   */\r\n  BOXDRAG: 'boxdrag',\r\n\r\n  /**\r\n   * Triggered upon drag box end.\r\n   * @event DragBoxEvent#boxend\r\n   * @api\r\n   */\r\n  BOXEND: 'boxend',\r\n\r\n  /**\r\n   * Triggered upon drag box canceled.\r\n   * @event DragBoxEvent#boxcancel\r\n   * @api\r\n   */\r\n  BOXCANCEL: 'boxcancel',\r\n};\r\n\r\n/**\r\n * @classdesc\r\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\r\n * this type.\r\n */\r\nexport class DragBoxEvent extends Event {\r\n  /**\r\n   * @param {string} type The event type.\r\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\r\n   */\r\n  constructor(type, coordinate, mapBrowserEvent) {\r\n    super(type);\r\n\r\n    /**\r\n     * The coordinate of the drag event.\r\n     * @const\r\n     * @type {import(\"../coordinate.js\").Coordinate}\r\n     * @api\r\n     */\r\n    this.coordinate = coordinate;\r\n\r\n    /**\r\n     * @const\r\n     * @type {import(\"../MapBrowserEvent.js\").default}\r\n     * @api\r\n     */\r\n    this.mapBrowserEvent = mapBrowserEvent;\r\n  }\r\n}\r\n\r\n/***\r\n * @template Return\r\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\r\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\r\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\r\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\r\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\r\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Allows the user to draw a vector box by clicking and dragging on the map,\r\n * normally combined with an {@link module:ol/events/condition} that limits\r\n * it to when the shift or other key is held down. This is used, for example,\r\n * for zooming to a specific area of the map\r\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\r\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\r\n *\r\n * @fires DragBoxEvent\r\n * @api\r\n */\r\nclass DragBox extends PointerInteraction {\r\n  /**\r\n   * @param {Options} [options] Options.\r\n   */\r\n  constructor(options) {\r\n    super();\r\n\r\n    /***\r\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\r\n     */\r\n    this.on;\r\n\r\n    /***\r\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\r\n     */\r\n    this.once;\r\n\r\n    /***\r\n     * @type {DragBoxOnSignature<void>}\r\n     */\r\n    this.un;\r\n\r\n    options = options ? options : {};\r\n\r\n    /**\r\n     * @type {import(\"../render/Box.js\").default}\r\n     * @private\r\n     */\r\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\r\n\r\n    /**\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\r\n\r\n    if (options.onBoxEnd) {\r\n      this.onBoxEnd = options.onBoxEnd;\r\n    }\r\n\r\n    /**\r\n     * @type {import(\"../pixel.js\").Pixel}\r\n     * @private\r\n     */\r\n    this.startPixel_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../events/condition.js\").Condition}\r\n     */\r\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\r\n\r\n    /**\r\n     * @private\r\n     * @type {EndCondition}\r\n     */\r\n    this.boxEndCondition_ = options.boxEndCondition\r\n      ? options.boxEndCondition\r\n      : this.defaultBoxEndCondition;\r\n  }\r\n\r\n  /**\r\n   * The default condition for determining whether the boxend event\r\n   * should fire.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\r\n   *     leading to the box end.\r\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\r\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\r\n   * @return {boolean} Whether or not the boxend condition should be fired.\r\n   */\r\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\r\n    const width = endPixel[0] - startPixel[0];\r\n    const height = endPixel[1] - startPixel[1];\r\n    return width * width + height * height >= this.minArea_;\r\n  }\r\n\r\n  /**\r\n   * Returns geometry of last drawn box.\r\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\r\n   * @api\r\n   */\r\n  getGeometry() {\r\n    return this.box_.getGeometry();\r\n  }\r\n\r\n  /**\r\n   * Handle pointer drag events.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\r\n   */\r\n  handleDragEvent(mapBrowserEvent) {\r\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\r\n\r\n    this.dispatchEvent(\r\n      new DragBoxEvent(\r\n        DragBoxEventType.BOXDRAG,\r\n        mapBrowserEvent.coordinate,\r\n        mapBrowserEvent\r\n      )\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Handle pointer up events.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\r\n   * @return {boolean} If the event was consumed.\r\n   */\r\n  handleUpEvent(mapBrowserEvent) {\r\n    this.box_.setMap(null);\r\n\r\n    const completeBox = this.boxEndCondition_(\r\n      mapBrowserEvent,\r\n      this.startPixel_,\r\n      mapBrowserEvent.pixel\r\n    );\r\n    if (completeBox) {\r\n      this.onBoxEnd(mapBrowserEvent);\r\n    }\r\n    this.dispatchEvent(\r\n      new DragBoxEvent(\r\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\r\n        mapBrowserEvent.coordinate,\r\n        mapBrowserEvent\r\n      )\r\n    );\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Handle pointer down events.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\r\n   * @return {boolean} If the event was consumed.\r\n   */\r\n  handleDownEvent(mapBrowserEvent) {\r\n    if (this.condition_(mapBrowserEvent)) {\r\n      this.startPixel_ = mapBrowserEvent.pixel;\r\n      this.box_.setMap(mapBrowserEvent.map);\r\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\r\n      this.dispatchEvent(\r\n        new DragBoxEvent(\r\n          DragBoxEventType.BOXSTART,\r\n          mapBrowserEvent.coordinate,\r\n          mapBrowserEvent\r\n        )\r\n      );\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Function to execute just before `onboxend` is fired\r\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\r\n   */\r\n  onBoxEnd(event) {}\r\n}\r\n\r\nexport default DragBox;\r\n","/**\r\n * @module ol/interaction/DragZoom\r\n */\r\nimport DragBox from './DragBox.js';\r\nimport {easeOut} from '../easing.js';\r\nimport {shiftKeyOnly} from '../events/condition.js';\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\r\n * box.\r\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\r\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\r\n * boolean to indicate whether that event should be handled.\r\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\r\n * @property {number} [duration=200] Animation duration in milliseconds.\r\n * @property {boolean} [out=false] Use interaction for zooming out.\r\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\r\n * `boxEndCondition` function.\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Allows the user to zoom the map by clicking and dragging on the map,\r\n * normally combined with an {@link module:ol/events/condition} that limits\r\n * it to when a key, shift by default, is held down.\r\n *\r\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\r\n * your custom one configured with `className`.\r\n * @api\r\n */\r\nclass DragZoom extends DragBox {\r\n  /**\r\n   * @param {Options} [options] Options.\r\n   */\r\n  constructor(options) {\r\n    options = options ? options : {};\r\n\r\n    const condition = options.condition ? options.condition : shiftKeyOnly;\r\n\r\n    super({\r\n      condition: condition,\r\n      className: options.className || 'ol-dragzoom',\r\n      minArea: options.minArea,\r\n    });\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.out_ = options.out !== undefined ? options.out : false;\r\n  }\r\n\r\n  /**\r\n   * Function to execute just before `onboxend` is fired\r\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\r\n   */\r\n  onBoxEnd(event) {\r\n    const map = this.getMap();\r\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\r\n    let geometry = this.getGeometry();\r\n\r\n    if (this.out_) {\r\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\r\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\r\n      const factor = view.getResolution() / resolution;\r\n      geometry = geometry.clone();\r\n      geometry.scale(factor * factor);\r\n    }\r\n\r\n    view.fitInternal(geometry, {\r\n      duration: this.duration_,\r\n      easing: easeOut,\r\n    });\r\n  }\r\n}\r\n\r\nexport default DragZoom;\r\n","/**\r\n * @module ol/events/KeyCode\r\n */\r\n\r\n/**\r\n * @enum {number}\r\n * @const\r\n */\r\nexport default {\r\n  LEFT: 37,\r\n  UP: 38,\r\n  RIGHT: 39,\r\n  DOWN: 40,\r\n};\r\n","/**\r\n * @module ol/interaction/KeyboardPan\r\n */\r\nimport EventType from '../events/EventType.js';\r\nimport Interaction, {pan} from './Interaction.js';\r\nimport KeyCode from '../events/KeyCode.js';\r\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\r\nimport {rotate as rotateCoordinate} from '../coordinate.js';\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\r\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\r\n * boolean to indicate whether that event should be handled. Default is\r\n * {@link module:ol/events/condition.noModifierKeys} and\r\n * {@link module:ol/events/condition.targetNotEditable}.\r\n * @property {number} [duration=100] Animation duration in milliseconds.\r\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\r\n * press.\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Allows the user to pan the map using keyboard arrows.\r\n * Note that, although this interaction is by default included in maps,\r\n * the keys can only be used when browser focus is on the element to which\r\n * the keyboard events are attached. By default, this is the map div,\r\n * though you can change this with the `keyboardEventTarget` in\r\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\r\n * element, focus will have to be on, and returned to, this element if the keys\r\n * are to function.\r\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\r\n * @api\r\n */\r\nclass KeyboardPan extends Interaction {\r\n  /**\r\n   * @param {Options} [options] Options.\r\n   */\r\n  constructor(options) {\r\n    super();\r\n\r\n    options = options || {};\r\n\r\n    /**\r\n     * @private\r\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\r\n     * @return {boolean} Combined condition result.\r\n     */\r\n    this.defaultCondition_ = function (mapBrowserEvent) {\r\n      return (\r\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\r\n      );\r\n    };\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../events/condition.js\").Condition}\r\n     */\r\n    this.condition_ =\r\n      options.condition !== undefined\r\n        ? options.condition\r\n        : this.defaultCondition_;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.pixelDelta_ =\r\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\r\n  }\r\n\r\n  /**\r\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\r\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\r\n   * pressed).\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n   * @return {boolean} `false` to stop event propagation.\r\n   * @this {KeyboardPan}\r\n   */\r\n  handleEvent(mapBrowserEvent) {\r\n    let stopEvent = false;\r\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\r\n      const keyEvent = /** @type {KeyboardEvent} */ (\r\n        mapBrowserEvent.originalEvent\r\n      );\r\n      const keyCode = keyEvent.keyCode;\r\n      if (\r\n        this.condition_(mapBrowserEvent) &&\r\n        (keyCode == KeyCode.DOWN ||\r\n          keyCode == KeyCode.LEFT ||\r\n          keyCode == KeyCode.RIGHT ||\r\n          keyCode == KeyCode.UP)\r\n      ) {\r\n        const map = mapBrowserEvent.map;\r\n        const view = map.getView();\r\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\r\n        let deltaX = 0,\r\n          deltaY = 0;\r\n        if (keyCode == KeyCode.DOWN) {\r\n          deltaY = -mapUnitsDelta;\r\n        } else if (keyCode == KeyCode.LEFT) {\r\n          deltaX = -mapUnitsDelta;\r\n        } else if (keyCode == KeyCode.RIGHT) {\r\n          deltaX = mapUnitsDelta;\r\n        } else {\r\n          deltaY = mapUnitsDelta;\r\n        }\r\n        const delta = [deltaX, deltaY];\r\n        rotateCoordinate(delta, view.getRotation());\r\n        pan(view, delta, this.duration_);\r\n        keyEvent.preventDefault();\r\n        stopEvent = true;\r\n      }\r\n    }\r\n    return !stopEvent;\r\n  }\r\n}\r\n\r\nexport default KeyboardPan;\r\n","/**\r\n * @module ol/interaction/KeyboardZoom\r\n */\r\nimport EventType from '../events/EventType.js';\r\nimport Interaction, {zoomByDelta} from './Interaction.js';\r\nimport {targetNotEditable} from '../events/condition.js';\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {number} [duration=100] Animation duration in milliseconds.\r\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\r\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\r\n * boolean to indicate whether that event should be handled. Default is\r\n * {@link module:ol/events/condition.targetNotEditable}.\r\n * @property {number} [delta=1] The zoom level delta on each key press.\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Allows the user to zoom the map using keyboard + and -.\r\n * Note that, although this interaction is by default included in maps,\r\n * the keys can only be used when browser focus is on the element to which\r\n * the keyboard events are attached. By default, this is the map div,\r\n * though you can change this with the `keyboardEventTarget` in\r\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\r\n * element, focus will have to be on, and returned to, this element if the keys\r\n * are to function.\r\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\r\n * @api\r\n */\r\nclass KeyboardZoom extends Interaction {\r\n  /**\r\n   * @param {Options} [options] Options.\r\n   */\r\n  constructor(options) {\r\n    super();\r\n\r\n    options = options ? options : {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../events/condition.js\").Condition}\r\n     */\r\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.delta_ = options.delta ? options.delta : 1;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\r\n  }\r\n\r\n  /**\r\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\r\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\r\n   * key pressed was '+' or '-').\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n   * @return {boolean} `false` to stop event propagation.\r\n   * @this {KeyboardZoom}\r\n   */\r\n  handleEvent(mapBrowserEvent) {\r\n    let stopEvent = false;\r\n    if (\r\n      mapBrowserEvent.type == EventType.KEYDOWN ||\r\n      mapBrowserEvent.type == EventType.KEYPRESS\r\n    ) {\r\n      const keyEvent = /** @type {KeyboardEvent} */ (\r\n        mapBrowserEvent.originalEvent\r\n      );\r\n      const charCode = keyEvent.charCode;\r\n      if (\r\n        this.condition_(mapBrowserEvent) &&\r\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))\r\n      ) {\r\n        const map = mapBrowserEvent.map;\r\n        const delta =\r\n          charCode == '+'.charCodeAt(0) ? this.delta_ : -this.delta_;\r\n        const view = map.getView();\r\n        zoomByDelta(view, delta, undefined, this.duration_);\r\n        keyEvent.preventDefault();\r\n        stopEvent = true;\r\n      }\r\n    }\r\n    return !stopEvent;\r\n  }\r\n}\r\n\r\nexport default KeyboardZoom;\r\n","/**\r\n * @module ol/Kinetic\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Implementation of inertial deceleration for map movement.\r\n *\r\n * @api\r\n */\r\nclass Kinetic {\r\n  /**\r\n   * @param {number} decay Rate of decay (must be negative).\r\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\r\n   * @param {number} delay Delay to consider to calculate the kinetic\r\n   *     initial values (milliseconds).\r\n   */\r\n  constructor(decay, minVelocity, delay) {\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.decay_ = decay;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.minVelocity_ = minVelocity;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.delay_ = delay;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<number>}\r\n     */\r\n    this.points_ = [];\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.angle_ = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.initialVelocity_ = 0;\r\n  }\r\n\r\n  /**\r\n   * FIXME empty description for jsdoc\r\n   */\r\n  begin() {\r\n    this.points_.length = 0;\r\n    this.angle_ = 0;\r\n    this.initialVelocity_ = 0;\r\n  }\r\n\r\n  /**\r\n   * @param {number} x X.\r\n   * @param {number} y Y.\r\n   */\r\n  update(x, y) {\r\n    this.points_.push(x, y, Date.now());\r\n  }\r\n\r\n  /**\r\n   * @return {boolean} Whether we should do kinetic animation.\r\n   */\r\n  end() {\r\n    if (this.points_.length < 6) {\r\n      // at least 2 points are required (i.e. there must be at least 6 elements\r\n      // in the array)\r\n      return false;\r\n    }\r\n    const delay = Date.now() - this.delay_;\r\n    const lastIndex = this.points_.length - 3;\r\n    if (this.points_[lastIndex + 2] < delay) {\r\n      // the last tracked point is too old, which means that the user stopped\r\n      // panning before releasing the map\r\n      return false;\r\n    }\r\n\r\n    // get the first point which still falls into the delay time\r\n    let firstIndex = lastIndex - 3;\r\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\r\n      firstIndex -= 3;\r\n    }\r\n\r\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\r\n    // we don't want a duration of 0 (divide by zero)\r\n    // we also make sure the user panned for a duration of at least one frame\r\n    // (1/60s) to compute sane displacement values\r\n    if (duration < 1000 / 60) {\r\n      return false;\r\n    }\r\n\r\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\r\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\r\n    this.angle_ = Math.atan2(dy, dx);\r\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\r\n    return this.initialVelocity_ > this.minVelocity_;\r\n  }\r\n\r\n  /**\r\n   * @return {number} Total distance travelled (pixels).\r\n   */\r\n  getDistance() {\r\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\r\n  }\r\n\r\n  /**\r\n   * @return {number} Angle of the kinetic panning animation (radians).\r\n   */\r\n  getAngle() {\r\n    return this.angle_;\r\n  }\r\n}\r\n\r\nexport default Kinetic;\r\n","/**\r\n * @module ol/interaction/MouseWheelZoom\r\n */\r\nimport EventType from '../events/EventType.js';\r\nimport Interaction, {zoomByDelta} from './Interaction.js';\r\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\r\nimport {all, always, focusWithTabindex} from '../events/condition.js';\r\nimport {clamp} from '../math.js';\r\n\r\n/**\r\n * @typedef {'trackpad' | 'wheel'} Mode\r\n */\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\r\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\r\n * boolean to indicate whether that event should be handled. Default is\r\n * {@link module:ol/events/condition.always}.\r\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\r\n * the interaction will only handle events when the map has the focus.\r\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\r\n * @property {number} [duration=250] Animation duration in milliseconds.\r\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\r\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\r\n * location as the anchor. When set to `false`, zooming in and out will zoom to\r\n * the center of the screen instead of zooming on the mouse's location.\r\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\r\n * event will always animate to the closest zoom level after an interaction;\r\n * false means intermediary zoom levels are allowed.\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Allows the user to zoom the map by scrolling the mouse wheel.\r\n * @api\r\n */\r\nclass MouseWheelZoom extends Interaction {\r\n  /**\r\n   * @param {Options} [options] Options.\r\n   */\r\n  constructor(options) {\r\n    options = options ? options : {};\r\n\r\n    super(\r\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\r\n    );\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.totalDelta_ = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.lastDelta_ = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.useAnchor_ =\r\n      options.useAnchor !== undefined ? options.useAnchor : true;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.constrainResolution_ =\r\n      options.constrainResolution !== undefined\r\n        ? options.constrainResolution\r\n        : false;\r\n\r\n    const condition = options.condition ? options.condition : always;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../events/condition.js\").Condition}\r\n     */\r\n    this.condition_ = options.onFocusOnly\r\n      ? all(focusWithTabindex, condition)\r\n      : condition;\r\n\r\n    /**\r\n     * @private\r\n     * @type {?import(\"../coordinate.js\").Coordinate}\r\n     */\r\n    this.lastAnchor_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.startTime_ = undefined;\r\n\r\n    /**\r\n     * @private\r\n     * @type {?}\r\n     */\r\n    this.timeoutId_;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Mode|undefined}\r\n     */\r\n    this.mode_ = undefined;\r\n\r\n    /**\r\n     * Trackpad events separated by this delay will be considered separate\r\n     * interactions.\r\n     * @type {number}\r\n     */\r\n    this.trackpadEventGap_ = 400;\r\n\r\n    /**\r\n     * @type {?}\r\n     */\r\n    this.trackpadTimeoutId_;\r\n\r\n    /**\r\n     * The number of delta values per zoom level\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.deltaPerZoom_ = 300;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  endInteraction_() {\r\n    this.trackpadTimeoutId_ = undefined;\r\n    const map = this.getMap();\r\n    if (!map) {\r\n      return;\r\n    }\r\n    const view = map.getView();\r\n    view.endInteraction(\r\n      undefined,\r\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\r\n      this.lastAnchor_\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\r\n   * zooms the map.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n   * @return {boolean} `false` to stop event propagation.\r\n   */\r\n  handleEvent(mapBrowserEvent) {\r\n    if (!this.condition_(mapBrowserEvent)) {\r\n      return true;\r\n    }\r\n    const type = mapBrowserEvent.type;\r\n    if (type !== EventType.WHEEL) {\r\n      return true;\r\n    }\r\n\r\n    const map = mapBrowserEvent.map;\r\n    const wheelEvent = /** @type {WheelEvent} */ (\r\n      mapBrowserEvent.originalEvent\r\n    );\r\n    wheelEvent.preventDefault();\r\n\r\n    if (this.useAnchor_) {\r\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\r\n    }\r\n\r\n    // Delta normalisation inspired by\r\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\r\n    let delta;\r\n    if (mapBrowserEvent.type == EventType.WHEEL) {\r\n      delta = wheelEvent.deltaY;\r\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\r\n        delta /= DEVICE_PIXEL_RATIO;\r\n      }\r\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\r\n        delta *= 40;\r\n      }\r\n    }\r\n\r\n    if (delta === 0) {\r\n      return false;\r\n    } else {\r\n      this.lastDelta_ = delta;\r\n    }\r\n\r\n    const now = Date.now();\r\n\r\n    if (this.startTime_ === undefined) {\r\n      this.startTime_ = now;\r\n    }\r\n\r\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\r\n      this.mode_ = Math.abs(delta) < 4 ? 'trackpad' : 'wheel';\r\n    }\r\n\r\n    const view = map.getView();\r\n    if (\r\n      this.mode_ === 'trackpad' &&\r\n      !(view.getConstrainResolution() || this.constrainResolution_)\r\n    ) {\r\n      if (this.trackpadTimeoutId_) {\r\n        clearTimeout(this.trackpadTimeoutId_);\r\n      } else {\r\n        if (view.getAnimating()) {\r\n          view.cancelAnimations();\r\n        }\r\n        view.beginInteraction();\r\n      }\r\n      this.trackpadTimeoutId_ = setTimeout(\r\n        this.endInteraction_.bind(this),\r\n        this.timeout_\r\n      );\r\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\r\n      this.startTime_ = now;\r\n      return false;\r\n    }\r\n\r\n    this.totalDelta_ += delta;\r\n\r\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\r\n\r\n    clearTimeout(this.timeoutId_);\r\n    this.timeoutId_ = setTimeout(\r\n      this.handleWheelZoom_.bind(this, map),\r\n      timeLeft\r\n    );\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {import(\"../Map.js\").default} map Map.\r\n   */\r\n  handleWheelZoom_(map) {\r\n    const view = map.getView();\r\n    if (view.getAnimating()) {\r\n      view.cancelAnimations();\r\n    }\r\n    let delta =\r\n      -clamp(\r\n        this.totalDelta_,\r\n        -this.maxDelta_ * this.deltaPerZoom_,\r\n        this.maxDelta_ * this.deltaPerZoom_\r\n      ) / this.deltaPerZoom_;\r\n    if (view.getConstrainResolution() || this.constrainResolution_) {\r\n      // view has a zoom constraint, zoom by 1\r\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\r\n    }\r\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\r\n\r\n    this.mode_ = undefined;\r\n    this.totalDelta_ = 0;\r\n    this.lastAnchor_ = null;\r\n    this.startTime_ = undefined;\r\n    this.timeoutId_ = undefined;\r\n  }\r\n\r\n  /**\r\n   * Enable or disable using the mouse's location as an anchor when zooming\r\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\r\n   * to zoom to the center of the map\r\n   * @api\r\n   */\r\n  setMouseAnchor(useAnchor) {\r\n    this.useAnchor_ = useAnchor;\r\n    if (!useAnchor) {\r\n      this.lastAnchor_ = null;\r\n    }\r\n  }\r\n}\r\n\r\nexport default MouseWheelZoom;\r\n","/**\r\n * @module ol/interaction/PinchRotate\r\n */\r\nimport PointerInteraction, {\r\n  centroid as centroidFromPointers,\r\n} from './Pointer.js';\r\nimport {FALSE} from '../functions.js';\r\nimport {disable} from '../rotationconstraint.js';\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {number} [duration=250] The duration of the animation in\r\n * milliseconds.\r\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Allows the user to rotate the map by twisting with two fingers\r\n * on a touch screen.\r\n * @api\r\n */\r\nclass PinchRotate extends PointerInteraction {\r\n  /**\r\n   * @param {Options} [options] Options.\r\n   */\r\n  constructor(options) {\r\n    options = options ? options : {};\r\n\r\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\r\n      options\r\n    );\r\n\r\n    if (!pointerOptions.stopDown) {\r\n      pointerOptions.stopDown = FALSE;\r\n    }\r\n\r\n    super(pointerOptions);\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../coordinate.js\").Coordinate}\r\n     */\r\n    this.anchor_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.lastAngle_ = undefined;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.rotating_ = false;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.rotationDelta_ = 0.0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\r\n  }\r\n\r\n  /**\r\n   * Handle pointer drag events.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\r\n   */\r\n  handleDragEvent(mapBrowserEvent) {\r\n    let rotationDelta = 0.0;\r\n\r\n    const touch0 = this.targetPointers[0];\r\n    const touch1 = this.targetPointers[1];\r\n\r\n    // angle between touches\r\n    const angle = Math.atan2(\r\n      touch1.clientY - touch0.clientY,\r\n      touch1.clientX - touch0.clientX\r\n    );\r\n\r\n    if (this.lastAngle_ !== undefined) {\r\n      const delta = angle - this.lastAngle_;\r\n      this.rotationDelta_ += delta;\r\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\r\n        this.rotating_ = true;\r\n      }\r\n      rotationDelta = delta;\r\n    }\r\n    this.lastAngle_ = angle;\r\n\r\n    const map = mapBrowserEvent.map;\r\n    const view = map.getView();\r\n    if (view.getConstraints().rotation === disable) {\r\n      return;\r\n    }\r\n\r\n    // rotate anchor point.\r\n    // FIXME: should be the intersection point between the lines:\r\n    //     touch0,touch1 and previousTouch0,previousTouch1\r\n    const viewportPosition = map.getViewport().getBoundingClientRect();\r\n    const centroid = centroidFromPointers(this.targetPointers);\r\n    centroid[0] -= viewportPosition.left;\r\n    centroid[1] -= viewportPosition.top;\r\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\r\n\r\n    // rotate\r\n    if (this.rotating_) {\r\n      map.render();\r\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle pointer up events.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\r\n   * @return {boolean} If the event was consumed.\r\n   */\r\n  handleUpEvent(mapBrowserEvent) {\r\n    if (this.targetPointers.length < 2) {\r\n      const map = mapBrowserEvent.map;\r\n      const view = map.getView();\r\n      view.endInteraction(this.duration_);\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle pointer down events.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\r\n   * @return {boolean} If the event was consumed.\r\n   */\r\n  handleDownEvent(mapBrowserEvent) {\r\n    if (this.targetPointers.length >= 2) {\r\n      const map = mapBrowserEvent.map;\r\n      this.anchor_ = null;\r\n      this.lastAngle_ = undefined;\r\n      this.rotating_ = false;\r\n      this.rotationDelta_ = 0.0;\r\n      if (!this.handlingDownUpSequence) {\r\n        map.getView().beginInteraction();\r\n      }\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n}\r\n\r\nexport default PinchRotate;\r\n","/**\r\n * @module ol/interaction/PinchZoom\r\n */\r\nimport PointerInteraction, {\r\n  centroid as centroidFromPointers,\r\n} from './Pointer.js';\r\nimport {FALSE} from '../functions.js';\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {number} [duration=400] Animation duration in milliseconds.\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Allows the user to zoom the map by pinching with two fingers\r\n * on a touch screen.\r\n * @api\r\n */\r\nclass PinchZoom extends PointerInteraction {\r\n  /**\r\n   * @param {Options} [options] Options.\r\n   */\r\n  constructor(options) {\r\n    options = options ? options : {};\r\n\r\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\r\n      options\r\n    );\r\n\r\n    if (!pointerOptions.stopDown) {\r\n      pointerOptions.stopDown = FALSE;\r\n    }\r\n\r\n    super(pointerOptions);\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../coordinate.js\").Coordinate}\r\n     */\r\n    this.anchor_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.lastDistance_ = undefined;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.lastScaleDelta_ = 1;\r\n  }\r\n\r\n  /**\r\n   * Handle pointer drag events.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\r\n   */\r\n  handleDragEvent(mapBrowserEvent) {\r\n    let scaleDelta = 1.0;\r\n\r\n    const touch0 = this.targetPointers[0];\r\n    const touch1 = this.targetPointers[1];\r\n    const dx = touch0.clientX - touch1.clientX;\r\n    const dy = touch0.clientY - touch1.clientY;\r\n\r\n    // distance between touches\r\n    const distance = Math.sqrt(dx * dx + dy * dy);\r\n\r\n    if (this.lastDistance_ !== undefined) {\r\n      scaleDelta = this.lastDistance_ / distance;\r\n    }\r\n    this.lastDistance_ = distance;\r\n\r\n    const map = mapBrowserEvent.map;\r\n    const view = map.getView();\r\n\r\n    if (scaleDelta != 1.0) {\r\n      this.lastScaleDelta_ = scaleDelta;\r\n    }\r\n\r\n    // scale anchor point.\r\n    const viewportPosition = map.getViewport().getBoundingClientRect();\r\n    const centroid = centroidFromPointers(this.targetPointers);\r\n    centroid[0] -= viewportPosition.left;\r\n    centroid[1] -= viewportPosition.top;\r\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\r\n\r\n    // scale, bypass the resolution constraint\r\n    map.render();\r\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\r\n  }\r\n\r\n  /**\r\n   * Handle pointer up events.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\r\n   * @return {boolean} If the event was consumed.\r\n   */\r\n  handleUpEvent(mapBrowserEvent) {\r\n    if (this.targetPointers.length < 2) {\r\n      const map = mapBrowserEvent.map;\r\n      const view = map.getView();\r\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\r\n      view.endInteraction(this.duration_, direction);\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle pointer down events.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\r\n   * @return {boolean} If the event was consumed.\r\n   */\r\n  handleDownEvent(mapBrowserEvent) {\r\n    if (this.targetPointers.length >= 2) {\r\n      const map = mapBrowserEvent.map;\r\n      this.anchor_ = null;\r\n      this.lastDistance_ = undefined;\r\n      this.lastScaleDelta_ = 1;\r\n      if (!this.handlingDownUpSequence) {\r\n        map.getView().beginInteraction();\r\n      }\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n}\r\n\r\nexport default PinchZoom;\r\n","/**\r\n * @module ol/interaction/defaults\r\n */\r\nimport Collection from '../Collection.js';\r\nimport DoubleClickZoom from './DoubleClickZoom.js';\r\nimport DragPan from './DragPan.js';\r\nimport DragRotate from './DragRotate.js';\r\nimport DragZoom from './DragZoom.js';\r\nimport KeyboardPan from './KeyboardPan.js';\r\nimport KeyboardZoom from './KeyboardZoom.js';\r\nimport Kinetic from '../Kinetic.js';\r\nimport MouseWheelZoom from './MouseWheelZoom.js';\r\nimport PinchRotate from './PinchRotate.js';\r\nimport PinchZoom from './PinchZoom.js';\r\n\r\n/**\r\n * @typedef {Object} DefaultsOptions\r\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\r\n * desired.\r\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\r\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\r\n * useful when page scroll is desired for maps that do not have the browser's\r\n * focus.\r\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\r\n * desired.\r\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\r\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\r\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\r\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\r\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\r\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\r\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\r\n * @property {number} [zoomDuration] Duration of the zoom animation in\r\n * milliseconds.\r\n */\r\n\r\n/**\r\n * Set of interactions included in maps by default. Specific interactions can be\r\n * excluded by setting the appropriate option to false in the constructor\r\n * options, but the order of the interactions is fixed.  If you want to specify\r\n * a different order for interactions, you will need to create your own\r\n * {@link module:ol/interaction/Interaction~Interaction} instances and insert\r\n * them into a {@link module:ol/Collection~Collection} in the order you want\r\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\r\n * be of interest if the event propagation needs to be stopped at a point.\r\n * The default set of interactions, in sequence, is:\r\n * * {@link module:ol/interaction/DragRotate~DragRotate}\r\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\r\n * * {@link module:ol/interaction/DragPan~DragPan}\r\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\r\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\r\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\r\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\r\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\r\n * * {@link module:ol/interaction/DragZoom~DragZoom}\r\n *\r\n * @param {DefaultsOptions} [options] Defaults options.\r\n * @return {Collection<import(\"./Interaction.js\").default>}\r\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\r\n * constructor's `interactions` option.\r\n * @api\r\n */\r\nexport function defaults(options) {\r\n  options = options ? options : {};\r\n\r\n  /** @type {Collection<import(\"./Interaction.js\").default>} */\r\n  const interactions = new Collection();\r\n\r\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\r\n\r\n  const altShiftDragRotate =\r\n    options.altShiftDragRotate !== undefined\r\n      ? options.altShiftDragRotate\r\n      : true;\r\n  if (altShiftDragRotate) {\r\n    interactions.push(new DragRotate());\r\n  }\r\n\r\n  const doubleClickZoom =\r\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\r\n  if (doubleClickZoom) {\r\n    interactions.push(\r\n      new DoubleClickZoom({\r\n        delta: options.zoomDelta,\r\n        duration: options.zoomDuration,\r\n      })\r\n    );\r\n  }\r\n\r\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\r\n  if (dragPan) {\r\n    interactions.push(\r\n      new DragPan({\r\n        onFocusOnly: options.onFocusOnly,\r\n        kinetic: kinetic,\r\n      })\r\n    );\r\n  }\r\n\r\n  const pinchRotate =\r\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\r\n  if (pinchRotate) {\r\n    interactions.push(new PinchRotate());\r\n  }\r\n\r\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\r\n  if (pinchZoom) {\r\n    interactions.push(\r\n      new PinchZoom({\r\n        duration: options.zoomDuration,\r\n      })\r\n    );\r\n  }\r\n\r\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\r\n  if (keyboard) {\r\n    interactions.push(new KeyboardPan());\r\n    interactions.push(\r\n      new KeyboardZoom({\r\n        delta: options.zoomDelta,\r\n        duration: options.zoomDuration,\r\n      })\r\n    );\r\n  }\r\n\r\n  const mouseWheelZoom =\r\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\r\n  if (mouseWheelZoom) {\r\n    interactions.push(\r\n      new MouseWheelZoom({\r\n        onFocusOnly: options.onFocusOnly,\r\n        duration: options.zoomDuration,\r\n      })\r\n    );\r\n  }\r\n\r\n  const shiftDragZoom =\r\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\r\n  if (shiftDragZoom) {\r\n    interactions.push(\r\n      new DragZoom({\r\n        duration: options.zoomDuration,\r\n      })\r\n    );\r\n  }\r\n\r\n  return interactions;\r\n}\r\n","/**\r\n * @module ol/size\r\n */\r\n\r\n/**\r\n * An array of numbers representing a size: `[width, height]`.\r\n * @typedef {Array<number>} Size\r\n * @api\r\n */\r\n\r\n/**\r\n * Returns a buffered size.\r\n * @param {Size} size Size.\r\n * @param {number} num The amount by which to buffer.\r\n * @param {Size} [dest] Optional reusable size array.\r\n * @return {Size} The buffered size.\r\n */\r\nexport function buffer(size, num, dest) {\r\n  if (dest === undefined) {\r\n    dest = [0, 0];\r\n  }\r\n  dest[0] = size[0] + 2 * num;\r\n  dest[1] = size[1] + 2 * num;\r\n  return dest;\r\n}\r\n\r\n/**\r\n * Determines if a size has a positive area.\r\n * @param {Size} size The size to test.\r\n * @return {boolean} The size has a positive area.\r\n */\r\nexport function hasArea(size) {\r\n  return size[0] > 0 && size[1] > 0;\r\n}\r\n\r\n/**\r\n * Returns a size scaled by a ratio. The result will be an array of integers.\r\n * @param {Size} size Size.\r\n * @param {number} ratio Ratio.\r\n * @param {Size} [dest] Optional reusable size array.\r\n * @return {Size} The scaled size.\r\n */\r\nexport function scale(size, ratio, dest) {\r\n  if (dest === undefined) {\r\n    dest = [0, 0];\r\n  }\r\n  dest[0] = (size[0] * ratio + 0.5) | 0;\r\n  dest[1] = (size[1] * ratio + 0.5) | 0;\r\n  return dest;\r\n}\r\n\r\n/**\r\n * Returns an `Size` array for the passed in number (meaning: square) or\r\n * `Size` array.\r\n * (meaning: non-square),\r\n * @param {number|Size} size Width and height.\r\n * @param {Size} [dest] Optional reusable size array.\r\n * @return {Size} Size.\r\n * @api\r\n */\r\nexport function toSize(size, dest) {\r\n  if (Array.isArray(size)) {\r\n    return size;\r\n  } else {\r\n    if (dest === undefined) {\r\n      dest = [size, size];\r\n    } else {\r\n      dest[0] = size;\r\n      dest[1] = size;\r\n    }\r\n    return dest;\r\n  }\r\n}\r\n","/**\r\n * @module ol/Map\r\n */\r\nimport BaseObject from './Object.js';\r\nimport Collection from './Collection.js';\r\nimport CollectionEventType from './CollectionEventType.js';\r\nimport CompositeMapRenderer from './renderer/Composite.js';\r\nimport EventType from './events/EventType.js';\r\nimport Layer from './layer/Layer.js';\r\nimport LayerGroup, {GroupEvent} from './layer/Group.js';\r\nimport MapBrowserEvent from './MapBrowserEvent.js';\r\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\r\nimport MapBrowserEventType from './MapBrowserEventType.js';\r\nimport MapEvent from './MapEvent.js';\r\nimport MapEventType from './MapEventType.js';\r\nimport MapProperty from './MapProperty.js';\r\nimport ObjectEventType from './ObjectEventType.js';\r\nimport PointerEventType from './pointer/EventType.js';\r\nimport RenderEventType from './render/EventType.js';\r\nimport TileQueue, {getTilePriority} from './TileQueue.js';\r\nimport View from './View.js';\r\nimport ViewHint from './ViewHint.js';\r\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\r\nimport {TRUE} from './functions.js';\r\nimport {\r\n  apply as applyTransform,\r\n  create as createTransform,\r\n} from './transform.js';\r\nimport {assert} from './asserts.js';\r\nimport {\r\n  clone,\r\n  createOrUpdateEmpty,\r\n  equals,\r\n  getForViewAndSize,\r\n  isEmpty,\r\n} from './extent.js';\r\nimport {defaults as defaultControls} from './control/defaults.js';\r\nimport {defaults as defaultInteractions} from './interaction/defaults.js';\r\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\r\nimport {getUid} from './util.js';\r\nimport {hasArea} from './size.js';\r\nimport {listen, unlistenByKey} from './events.js';\r\nimport {removeNode} from './dom.js';\r\n\r\n/**\r\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\r\n * be used in applications.\r\n * @typedef {Object} FrameState\r\n * @property {number} pixelRatio The pixel ratio of the frame.\r\n * @property {number} time The time when rendering of the frame was requested.\r\n * @property {import(\"./View.js\").State} viewState The state of the current view.\r\n * @property {boolean} animate Animate.\r\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\r\n * @property {import(\"rbush\").default} declutterTree DeclutterTree.\r\n * @property {null|import(\"./extent.js\").Extent} extent Extent.\r\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\r\n * @property {number} index Index.\r\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\r\n * @property {number} layerIndex LayerIndex.\r\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\r\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\r\n * @property {import(\"./size.js\").Size} size Size.\r\n * @property {TileQueue} tileQueue TileQueue.\r\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\r\n * @property {Array<number>} viewHints ViewHints.\r\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\r\n * @property {string} mapId The id of the map.\r\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\r\n */\r\n\r\n/**\r\n * @typedef {function(Map, ?FrameState): any} PostRenderFunction\r\n */\r\n\r\n/**\r\n * @typedef {Object} AtPixelOptions\r\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\r\n * function. The filter function will receive one argument, the\r\n * {@link module:ol/layer/Layer~Layer layer-candidate} and it should return a boolean value.\r\n * Only layers which are visible and for which this function returns `true`\r\n * will be tested for features. By default, all visible layers will be tested.\r\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\r\n * inside the radius around the given position will be checked for features.\r\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for wrapped geometries inside the range of\r\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\r\n */\r\n\r\n/**\r\n * @typedef {Object} MapOptionsInternal\r\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\r\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\r\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\r\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\r\n * @property {Object<string, *>} values Values.\r\n */\r\n\r\n/**\r\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\r\n */\r\n\r\n/***\r\n * @template Return\r\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\r\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\r\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\r\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\r\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\r\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\r\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\r\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} MapEventHandler\r\n */\r\n\r\n/**\r\n * Object literal with config options for the map.\r\n * @typedef {Object} MapOptions\r\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\r\n * Controls initially added to the map. If not specified,\r\n * {@link module:ol/control/defaults.defaults} is used.\r\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\r\n * physical pixels and device-independent pixels (dips) on the device.\r\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\r\n * Interactions that are initially added to the map. If not specified,\r\n * {@link module:ol/interaction/defaults.defaults} is used.\r\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\r\n * listen to keyboard events on. This determines when the `KeyboardPan` and\r\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\r\n * `document` the keyboard interactions will always trigger. If this option is\r\n * not specified, the element the library listens to keyboard events on is the\r\n * map target (i.e. the user-provided div for the map). If this is not\r\n * `document`, the target element needs to be focused for key events to be\r\n * emitted, requiring that the target element has a `tabindex` attribute.\r\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\r\n * Layers. If this is not defined, a map with no layers will be rendered. Note\r\n * that layers are rendered in the order supplied, so if you want, for example,\r\n * a vector layer to appear on top of a tile layer, it must come after the tile\r\n * layer.\r\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\r\n * simultaneously.\r\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\r\n * cursor must move to be detected as a map move event instead of a click.\r\n * Increasing this value can make it easier to click on the map.\r\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\r\n * Overlays initially added to the map. By default, no overlays are added.\r\n * @property {HTMLElement|string} [target] The container for the map, either the\r\n * element itself or the `id` of the element. If not specified at construction\r\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\r\n * rendered. If passed by element, the container can be in a secondary document.\r\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\r\n * fetched unless this is specified at construction time or through\r\n * {@link module:ol/Map~Map#setView}.\r\n */\r\n\r\n/**\r\n * @param {import(\"./layer/Base.js\").default} layer Layer.\r\n */\r\nfunction removeLayerMapProperty(layer) {\r\n  if (layer instanceof Layer) {\r\n    layer.setMapInternal(null);\r\n    return;\r\n  }\r\n  if (layer instanceof LayerGroup) {\r\n    layer.getLayers().forEach(removeLayerMapProperty);\r\n  }\r\n}\r\n\r\n/**\r\n * @param {import(\"./layer/Base.js\").default} layer Layer.\r\n * @param {Map} map Map.\r\n */\r\nfunction setLayerMapProperty(layer, map) {\r\n  if (layer instanceof Layer) {\r\n    layer.setMapInternal(map);\r\n    return;\r\n  }\r\n  if (layer instanceof LayerGroup) {\r\n    const layers = layer.getLayers().getArray();\r\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\r\n      setLayerMapProperty(layers[i], map);\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * @classdesc\r\n * The map is the core component of OpenLayers. For a map to render, a view,\r\n * one or more layers, and a target container are needed:\r\n *\r\n *     import Map from 'ol/Map';\r\n *     import View from 'ol/View';\r\n *     import TileLayer from 'ol/layer/Tile';\r\n *     import OSM from 'ol/source/OSM';\r\n *\r\n *     const map = new Map({\r\n *       view: new View({\r\n *         center: [0, 0],\r\n *         zoom: 1,\r\n *       }),\r\n *       layers: [\r\n *         new TileLayer({\r\n *           source: new OSM(),\r\n *         }),\r\n *       ],\r\n *       target: 'map',\r\n *     });\r\n *\r\n * The above snippet creates a map using a {@link module:ol/layer/Tile~TileLayer} to\r\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\r\n * element with the id `map`.\r\n *\r\n * The constructor places a viewport container (with CSS class name\r\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\r\n * further elements within the viewport: one with CSS class name\r\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\r\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\r\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\r\n * itself is placed in a further element within the viewport.\r\n *\r\n * Layers are stored as a {@link module:ol/Collection~Collection} in\r\n * layerGroups. A top-level group is provided by the library. This is what is\r\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\r\n * options are added to this group, and `addLayer` and `removeLayer` change the\r\n * layer collection in the group. `getLayers` is a convenience function for\r\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~LayerGroup}\r\n * is a subclass of {@link module:ol/layer/Base~BaseLayer}, so layers entered in the\r\n * options or added with `addLayer` can be groups, which can contain further\r\n * groups, and so on.\r\n *\r\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\r\n * @fires import(\"./MapEvent.js\").MapEvent\r\n * @fires import(\"./render/Event.js\").default#precompose\r\n * @fires import(\"./render/Event.js\").default#postcompose\r\n * @fires import(\"./render/Event.js\").default#rendercomplete\r\n * @api\r\n */\r\nclass Map extends BaseObject {\r\n  /**\r\n   * @param {MapOptions} [options] Map options.\r\n   */\r\n  constructor(options) {\r\n    super();\r\n\r\n    options = options || {};\r\n\r\n    /***\r\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\r\n     */\r\n    this.on;\r\n\r\n    /***\r\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\r\n     */\r\n    this.once;\r\n\r\n    /***\r\n     * @type {MapEventHandler<void>}\r\n     */\r\n    this.un;\r\n\r\n    const optionsInternal = createOptionsInternal(options);\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean|undefined}\r\n     */\r\n    this.renderComplete_;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.loaded_ = true;\r\n\r\n    /** @private */\r\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\r\n\r\n    /**\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.maxTilesLoading_ =\r\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.pixelRatio_ =\r\n      options.pixelRatio !== undefined\r\n        ? options.pixelRatio\r\n        : DEVICE_PIXEL_RATIO;\r\n\r\n    /**\r\n     * @private\r\n     * @type {*}\r\n     */\r\n    this.postRenderTimeoutHandle_;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.animationDelayKey_;\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    this.animationDelay_ = this.animationDelay_.bind(this);\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"./transform.js\").Transform}\r\n     */\r\n    this.coordinateToPixelTransform_ = createTransform();\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"./transform.js\").Transform}\r\n     */\r\n    this.pixelToCoordinateTransform_ = createTransform();\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.frameIndex_ = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {?FrameState}\r\n     */\r\n    this.frameState_ = null;\r\n\r\n    /**\r\n     * The extent at the previous 'moveend' event.\r\n     * @private\r\n     * @type {import(\"./extent.js\").Extent}\r\n     */\r\n    this.previousExtent_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {?import(\"./events.js\").EventsKey}\r\n     */\r\n    this.viewPropertyListenerKey_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {?import(\"./events.js\").EventsKey}\r\n     */\r\n    this.viewChangeListenerKey_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {?Array<import(\"./events.js\").EventsKey>}\r\n     */\r\n    this.layerGroupPropertyListenerKeys_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {!HTMLElement}\r\n     */\r\n    this.viewport_ = document.createElement('div');\r\n    this.viewport_.className =\r\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\r\n    this.viewport_.style.position = 'relative';\r\n    this.viewport_.style.overflow = 'hidden';\r\n    this.viewport_.style.width = '100%';\r\n    this.viewport_.style.height = '100%';\r\n\r\n    /**\r\n     * @private\r\n     * @type {!HTMLElement}\r\n     */\r\n    this.overlayContainer_ = document.createElement('div');\r\n    this.overlayContainer_.style.position = 'absolute';\r\n    this.overlayContainer_.style.zIndex = '0';\r\n    this.overlayContainer_.style.width = '100%';\r\n    this.overlayContainer_.style.height = '100%';\r\n    this.overlayContainer_.style.pointerEvents = 'none';\r\n    this.overlayContainer_.className = 'ol-overlaycontainer';\r\n    this.viewport_.appendChild(this.overlayContainer_);\r\n\r\n    /**\r\n     * @private\r\n     * @type {!HTMLElement}\r\n     */\r\n    this.overlayContainerStopEvent_ = document.createElement('div');\r\n    this.overlayContainerStopEvent_.style.position = 'absolute';\r\n    this.overlayContainerStopEvent_.style.zIndex = '0';\r\n    this.overlayContainerStopEvent_.style.width = '100%';\r\n    this.overlayContainerStopEvent_.style.height = '100%';\r\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\r\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\r\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\r\n\r\n    /**\r\n     * @private\r\n     * @type {MapBrowserEventHandler}\r\n     */\r\n    this.mapBrowserEventHandler_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.moveTolerance_ = options.moveTolerance;\r\n\r\n    /**\r\n     * @private\r\n     * @type {HTMLElement|Document}\r\n     */\r\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\r\n\r\n    /**\r\n     * @private\r\n     * @type {?Array<import(\"./events.js\").EventsKey>}\r\n     */\r\n    this.targetChangeHandlerKeys_ = null;\r\n\r\n    /**\r\n     * @type {Collection<import(\"./control/Control.js\").default>}\r\n     * @protected\r\n     */\r\n    this.controls = optionsInternal.controls || defaultControls();\r\n\r\n    /**\r\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\r\n     * @protected\r\n     */\r\n    this.interactions =\r\n      optionsInternal.interactions ||\r\n      defaultInteractions({\r\n        onFocusOnly: true,\r\n      });\r\n\r\n    /**\r\n     * @type {Collection<import(\"./Overlay.js\").default>}\r\n     * @private\r\n     */\r\n    this.overlays_ = optionsInternal.overlays;\r\n\r\n    /**\r\n     * A lookup of overlays by id.\r\n     * @private\r\n     * @type {Object<string, import(\"./Overlay.js\").default>}\r\n     */\r\n    this.overlayIdIndex_ = {};\r\n\r\n    /**\r\n     * @type {import(\"./renderer/Map.js\").default|null}\r\n     * @private\r\n     */\r\n    this.renderer_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {!Array<PostRenderFunction>}\r\n     */\r\n    this.postRenderFunctions_ = [];\r\n\r\n    /**\r\n     * @private\r\n     * @type {TileQueue}\r\n     */\r\n    this.tileQueue_ = new TileQueue(\r\n      this.getTilePriority.bind(this),\r\n      this.handleTileChange_.bind(this)\r\n    );\r\n\r\n    this.addChangeListener(\r\n      MapProperty.LAYERGROUP,\r\n      this.handleLayerGroupChanged_\r\n    );\r\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\r\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\r\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\r\n\r\n    // setProperties will trigger the rendering of the map if the map\r\n    // is \"defined\" already.\r\n    this.setProperties(optionsInternal.values);\r\n\r\n    const map = this;\r\n    if (options.view && !(options.view instanceof View)) {\r\n      options.view.then(function (viewOptions) {\r\n        map.setView(new View(viewOptions));\r\n      });\r\n    }\r\n\r\n    this.controls.addEventListener(\r\n      CollectionEventType.ADD,\r\n      /**\r\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent\r\n       */\r\n      function (event) {\r\n        event.element.setMap(this);\r\n      }.bind(this)\r\n    );\r\n\r\n    this.controls.addEventListener(\r\n      CollectionEventType.REMOVE,\r\n      /**\r\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent.\r\n       */\r\n      function (event) {\r\n        event.element.setMap(null);\r\n      }.bind(this)\r\n    );\r\n\r\n    this.interactions.addEventListener(\r\n      CollectionEventType.ADD,\r\n      /**\r\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\r\n       */\r\n      function (event) {\r\n        event.element.setMap(this);\r\n      }.bind(this)\r\n    );\r\n\r\n    this.interactions.addEventListener(\r\n      CollectionEventType.REMOVE,\r\n      /**\r\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\r\n       */\r\n      function (event) {\r\n        event.element.setMap(null);\r\n      }.bind(this)\r\n    );\r\n\r\n    this.overlays_.addEventListener(\r\n      CollectionEventType.ADD,\r\n      /**\r\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\r\n       */\r\n      function (event) {\r\n        this.addOverlayInternal_(event.element);\r\n      }.bind(this)\r\n    );\r\n\r\n    this.overlays_.addEventListener(\r\n      CollectionEventType.REMOVE,\r\n      /**\r\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\r\n       */\r\n      function (event) {\r\n        const id = event.element.getId();\r\n        if (id !== undefined) {\r\n          delete this.overlayIdIndex_[id.toString()];\r\n        }\r\n        event.element.setMap(null);\r\n      }.bind(this)\r\n    );\r\n\r\n    this.controls.forEach(\r\n      /**\r\n       * @param {import(\"./control/Control.js\").default} control Control.\r\n       * @this {Map}\r\n       */\r\n      function (control) {\r\n        control.setMap(this);\r\n      }.bind(this)\r\n    );\r\n\r\n    this.interactions.forEach(\r\n      /**\r\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\r\n       * @this {Map}\r\n       */\r\n      function (interaction) {\r\n        interaction.setMap(this);\r\n      }.bind(this)\r\n    );\r\n\r\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\r\n  }\r\n\r\n  /**\r\n   * Add the given control to the map.\r\n   * @param {import(\"./control/Control.js\").default} control Control.\r\n   * @api\r\n   */\r\n  addControl(control) {\r\n    this.getControls().push(control);\r\n  }\r\n\r\n  /**\r\n   * Add the given interaction to the map. If you want to add an interaction\r\n   * at another point of the collection use `getInteractions()` and the methods\r\n   * available on {@link module:ol/Collection~Collection}. This can be used to\r\n   * stop the event propagation from the handleEvent function. The interactions\r\n   * get to handle the events in the reverse order of this collection.\r\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\r\n   * @api\r\n   */\r\n  addInteraction(interaction) {\r\n    this.getInteractions().push(interaction);\r\n  }\r\n\r\n  /**\r\n   * Adds the given layer to the top of this map. If you want to add a layer\r\n   * elsewhere in the stack, use `getLayers()` and the methods available on\r\n   * {@link module:ol/Collection~Collection}.\r\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\r\n   * @api\r\n   */\r\n  addLayer(layer) {\r\n    const layers = this.getLayerGroup().getLayers();\r\n    layers.push(layer);\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\r\n   * @private\r\n   */\r\n  handleLayerAdd_(event) {\r\n    setLayerMapProperty(event.layer, this);\r\n  }\r\n\r\n  /**\r\n   * Add the given overlay to the map.\r\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\r\n   * @api\r\n   */\r\n  addOverlay(overlay) {\r\n    this.getOverlays().push(overlay);\r\n  }\r\n\r\n  /**\r\n   * This deals with map's overlay collection changes.\r\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\r\n   * @private\r\n   */\r\n  addOverlayInternal_(overlay) {\r\n    const id = overlay.getId();\r\n    if (id !== undefined) {\r\n      this.overlayIdIndex_[id.toString()] = overlay;\r\n    }\r\n    overlay.setMap(this);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Clean up.\r\n   */\r\n  disposeInternal() {\r\n    this.controls.clear();\r\n    this.interactions.clear();\r\n    this.overlays_.clear();\r\n    this.setTarget(null);\r\n    super.disposeInternal();\r\n  }\r\n\r\n  /**\r\n   * Detect features that intersect a pixel on the viewport, and execute a\r\n   * callback with each intersecting feature. Layers included in the detection can\r\n   * be configured through the `layerFilter` option in `options`.\r\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\r\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\r\n   *     called with two arguments. The first argument is one\r\n   *     {@link module:ol/Feature~Feature feature} or\r\n   *     {@link module:ol/render/Feature~RenderFeature render feature} at the pixel, the second is\r\n   *     the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\r\n   *     unmanaged layers. To stop detection, callback functions can return a\r\n   *     truthy value.\r\n   * @param {AtPixelOptions} [options] Optional options.\r\n   * @return {T|undefined} Callback result, i.e. the return value of last\r\n   * callback execution, or the first truthy callback return value.\r\n   * @template T\r\n   * @api\r\n   */\r\n  forEachFeatureAtPixel(pixel, callback, options) {\r\n    if (!this.frameState_ || !this.renderer_) {\r\n      return;\r\n    }\r\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\r\n    options = options !== undefined ? options : {};\r\n    const hitTolerance =\r\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\r\n    const layerFilter =\r\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\r\n    const checkWrapped = options.checkWrapped !== false;\r\n    return this.renderer_.forEachFeatureAtCoordinate(\r\n      coordinate,\r\n      this.frameState_,\r\n      hitTolerance,\r\n      checkWrapped,\r\n      callback,\r\n      null,\r\n      layerFilter,\r\n      null\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Get all features that intersect a pixel on the viewport.\r\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\r\n   * @param {AtPixelOptions} [options] Optional options.\r\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\r\n   * an empty array if none were found.\r\n   * @api\r\n   */\r\n  getFeaturesAtPixel(pixel, options) {\r\n    const features = [];\r\n    this.forEachFeatureAtPixel(\r\n      pixel,\r\n      function (feature) {\r\n        features.push(feature);\r\n      },\r\n      options\r\n    );\r\n    return features;\r\n  }\r\n\r\n  /**\r\n   * Get all layers from all layer groups.\r\n   * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\r\n   * @api\r\n   */\r\n  getAllLayers() {\r\n    const layers = [];\r\n    function addLayersFrom(layerGroup) {\r\n      layerGroup.forEach(function (layer) {\r\n        if (layer instanceof LayerGroup) {\r\n          addLayersFrom(layer.getLayers());\r\n        } else {\r\n          layers.push(layer);\r\n        }\r\n      });\r\n    }\r\n    addLayersFrom(this.getLayers());\r\n    return layers;\r\n  }\r\n\r\n  /**\r\n   * Detect if features intersect a pixel on the viewport. Layers included in the\r\n   * detection can be configured through the `layerFilter` option.\r\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\r\n   * @param {AtPixelOptions} [options] Optional options.\r\n   * @return {boolean} Is there a feature at the given pixel?\r\n   * @api\r\n   */\r\n  hasFeatureAtPixel(pixel, options) {\r\n    if (!this.frameState_ || !this.renderer_) {\r\n      return false;\r\n    }\r\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\r\n    options = options !== undefined ? options : {};\r\n    const layerFilter =\r\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\r\n    const hitTolerance =\r\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\r\n    const checkWrapped = options.checkWrapped !== false;\r\n    return this.renderer_.hasFeatureAtCoordinate(\r\n      coordinate,\r\n      this.frameState_,\r\n      hitTolerance,\r\n      checkWrapped,\r\n      layerFilter,\r\n      null\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Returns the coordinate in user projection for a browser event.\r\n   * @param {MouseEvent} event Event.\r\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\r\n   * @api\r\n   */\r\n  getEventCoordinate(event) {\r\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\r\n  }\r\n\r\n  /**\r\n   * Returns the coordinate in view projection for a browser event.\r\n   * @param {MouseEvent} event Event.\r\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\r\n   */\r\n  getEventCoordinateInternal(event) {\r\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\r\n  }\r\n\r\n  /**\r\n   * Returns the map pixel position for a browser event relative to the viewport.\r\n   * @param {UIEvent} event Event.\r\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\r\n   * @api\r\n   */\r\n  getEventPixel(event) {\r\n    const viewportPosition = this.viewport_.getBoundingClientRect();\r\n    const eventPosition =\r\n      //FIXME Are we really calling this with a TouchEvent anywhere?\r\n      'changedTouches' in event\r\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\r\n        : /** @type {MouseEvent} */ (event);\r\n\r\n    return [\r\n      eventPosition.clientX - viewportPosition.left,\r\n      eventPosition.clientY - viewportPosition.top,\r\n    ];\r\n  }\r\n\r\n  /**\r\n   * Get the target in which this map is rendered.\r\n   * Note that this returns what is entered as an option or in setTarget:\r\n   * if that was an element, it returns an element; if a string, it returns that.\r\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\r\n   *     map is rendered in.\r\n   * @observable\r\n   * @api\r\n   */\r\n  getTarget() {\r\n    return /** @type {HTMLElement|string|undefined} */ (\r\n      this.get(MapProperty.TARGET)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Get the DOM element into which this map is rendered. In contrast to\r\n   * `getTarget` this method always return an `Element`, or `null` if the\r\n   * map has no target.\r\n   * @return {HTMLElement} The element that the map is rendered in.\r\n   * @api\r\n   */\r\n  getTargetElement() {\r\n    const target = this.getTarget();\r\n    if (target !== undefined) {\r\n      return typeof target === 'string'\r\n        ? document.getElementById(target)\r\n        : target;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\r\n   * user projection.\r\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\r\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\r\n   * @api\r\n   */\r\n  getCoordinateFromPixel(pixel) {\r\n    return toUserCoordinate(\r\n      this.getCoordinateFromPixelInternal(pixel),\r\n      this.getView().getProjection()\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\r\n   * map view projection.\r\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\r\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\r\n   */\r\n  getCoordinateFromPixelInternal(pixel) {\r\n    const frameState = this.frameState_;\r\n    if (!frameState) {\r\n      return null;\r\n    } else {\r\n      return applyTransform(\r\n        frameState.pixelToCoordinateTransform,\r\n        pixel.slice()\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get the map controls. Modifying this collection changes the controls\r\n   * associated with the map.\r\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\r\n   * @api\r\n   */\r\n  getControls() {\r\n    return this.controls;\r\n  }\r\n\r\n  /**\r\n   * Get the map overlays. Modifying this collection changes the overlays\r\n   * associated with the map.\r\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\r\n   * @api\r\n   */\r\n  getOverlays() {\r\n    return this.overlays_;\r\n  }\r\n\r\n  /**\r\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\r\n   * Note that the index treats string and numeric identifiers as the same. So\r\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\r\n   * @param {string|number} id Overlay identifier.\r\n   * @return {import(\"./Overlay.js\").default} Overlay.\r\n   * @api\r\n   */\r\n  getOverlayById(id) {\r\n    const overlay = this.overlayIdIndex_[id.toString()];\r\n    return overlay !== undefined ? overlay : null;\r\n  }\r\n\r\n  /**\r\n   * Get the map interactions. Modifying this collection changes the interactions\r\n   * associated with the map.\r\n   *\r\n   * Interactions are used for e.g. pan, zoom and rotate.\r\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\r\n   * @api\r\n   */\r\n  getInteractions() {\r\n    return this.interactions;\r\n  }\r\n\r\n  /**\r\n   * Get the layergroup associated with this map.\r\n   * @return {LayerGroup} A layer group containing the layers in this map.\r\n   * @observable\r\n   * @api\r\n   */\r\n  getLayerGroup() {\r\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\r\n  }\r\n\r\n  /**\r\n   * Clear any existing layers and add layers to the map.\r\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\r\n   * @api\r\n   */\r\n  setLayers(layers) {\r\n    const group = this.getLayerGroup();\r\n    if (layers instanceof Collection) {\r\n      group.setLayers(layers);\r\n      return;\r\n    }\r\n\r\n    const collection = group.getLayers();\r\n    collection.clear();\r\n    collection.extend(layers);\r\n  }\r\n\r\n  /**\r\n   * Get the collection of layers associated with this map.\r\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\r\n   * @api\r\n   */\r\n  getLayers() {\r\n    const layers = this.getLayerGroup().getLayers();\r\n    return layers;\r\n  }\r\n\r\n  /**\r\n   * @return {boolean} Layers have sources that are still loading.\r\n   */\r\n  getLoadingOrNotReady() {\r\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\r\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\r\n      const state = layerStatesArray[i];\r\n      if (!state.visible) {\r\n        continue;\r\n      }\r\n      const renderer = state.layer.getRenderer();\r\n      if (renderer && !renderer.ready) {\r\n        return true;\r\n      }\r\n      const source = state.layer.getSource();\r\n      if (source && source.loading) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\r\n   * projection and returns the corresponding pixel.\r\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\r\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\r\n   * @api\r\n   */\r\n  getPixelFromCoordinate(coordinate) {\r\n    const viewCoordinate = fromUserCoordinate(\r\n      coordinate,\r\n      this.getView().getProjection()\r\n    );\r\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\r\n  }\r\n\r\n  /**\r\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\r\n   * projection and returns the corresponding pixel.\r\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\r\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\r\n   */\r\n  getPixelFromCoordinateInternal(coordinate) {\r\n    const frameState = this.frameState_;\r\n    if (!frameState) {\r\n      return null;\r\n    } else {\r\n      return applyTransform(\r\n        frameState.coordinateToPixelTransform,\r\n        coordinate.slice(0, 2)\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get the map renderer.\r\n   * @return {import(\"./renderer/Map.js\").default|null} Renderer\r\n   */\r\n  getRenderer() {\r\n    return this.renderer_;\r\n  }\r\n\r\n  /**\r\n   * Get the size of this map.\r\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\r\n   * @observable\r\n   * @api\r\n   */\r\n  getSize() {\r\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\r\n      this.get(MapProperty.SIZE)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Get the view associated with this map. A view manages properties such as\r\n   * center and resolution.\r\n   * @return {View} The view that controls this map.\r\n   * @observable\r\n   * @api\r\n   */\r\n  getView() {\r\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\r\n  }\r\n\r\n  /**\r\n   * Get the element that serves as the map viewport.\r\n   * @return {HTMLElement} Viewport.\r\n   * @api\r\n   */\r\n  getViewport() {\r\n    return this.viewport_;\r\n  }\r\n\r\n  /**\r\n   * Get the element that serves as the container for overlays.  Elements added to\r\n   * this container will let mousedown and touchstart events through to the map,\r\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\r\n   * events.\r\n   * @return {!HTMLElement} The map's overlay container.\r\n   */\r\n  getOverlayContainer() {\r\n    return this.overlayContainer_;\r\n  }\r\n\r\n  /**\r\n   * Get the element that serves as a container for overlays that don't allow\r\n   * event propagation. Elements added to this container won't let mousedown and\r\n   * touchstart events through to the map, so clicks and gestures on an overlay\r\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\r\n   * @return {!HTMLElement} The map's overlay container that stops events.\r\n   */\r\n  getOverlayContainerStopEvent() {\r\n    return this.overlayContainerStopEvent_;\r\n  }\r\n\r\n  /**\r\n   * @return {!Document} The document where the map is displayed.\r\n   */\r\n  getOwnerDocument() {\r\n    const targetElement = this.getTargetElement();\r\n    return targetElement ? targetElement.ownerDocument : document;\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"./Tile.js\").default} tile Tile.\r\n   * @param {string} tileSourceKey Tile source key.\r\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\r\n   * @param {number} tileResolution Tile resolution.\r\n   * @return {number} Tile priority.\r\n   */\r\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\r\n    return getTilePriority(\r\n      this.frameState_,\r\n      tile,\r\n      tileSourceKey,\r\n      tileCenter,\r\n      tileResolution\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @param {UIEvent} browserEvent Browser event.\r\n   * @param {string} [type] Type.\r\n   */\r\n  handleBrowserEvent(browserEvent, type) {\r\n    type = type || browserEvent.type;\r\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\r\n    this.handleMapBrowserEvent(mapBrowserEvent);\r\n  }\r\n\r\n  /**\r\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\r\n   */\r\n  handleMapBrowserEvent(mapBrowserEvent) {\r\n    if (!this.frameState_) {\r\n      // With no view defined, we cannot translate pixels into geographical\r\n      // coordinates so interactions cannot be used.\r\n      return;\r\n    }\r\n    const originalEvent = /** @type {PointerEvent} */ (\r\n      mapBrowserEvent.originalEvent\r\n    );\r\n    const eventType = originalEvent.type;\r\n    if (\r\n      eventType === PointerEventType.POINTERDOWN ||\r\n      eventType === EventType.WHEEL ||\r\n      eventType === EventType.KEYDOWN\r\n    ) {\r\n      const doc = this.getOwnerDocument();\r\n      const rootNode = this.viewport_.getRootNode\r\n        ? this.viewport_.getRootNode()\r\n        : doc;\r\n      const target = /** @type {Node} */ (originalEvent.target);\r\n      if (\r\n        // Abort if the target is a child of the container for elements whose events are not meant\r\n        // to be handled by map interactions.\r\n        this.overlayContainerStopEvent_.contains(target) ||\r\n        // Abort if the event target is a child of the container that is no longer in the page.\r\n        // It's possible for the target to no longer be in the page if it has been removed in an\r\n        // event listener, this might happen in a Control that recreates it's content based on\r\n        // user interaction either manually or via a render in something like https://reactjs.org/\r\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\r\n      ) {\r\n        return;\r\n      }\r\n    }\r\n    mapBrowserEvent.frameState = this.frameState_;\r\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\r\n      const interactionsArray = this.getInteractions().getArray().slice();\r\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\r\n        const interaction = interactionsArray[i];\r\n        if (\r\n          interaction.getMap() !== this ||\r\n          !interaction.getActive() ||\r\n          !this.getTargetElement()\r\n        ) {\r\n          continue;\r\n        }\r\n        const cont = interaction.handleEvent(mapBrowserEvent);\r\n        if (!cont || mapBrowserEvent.propagationStopped) {\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @protected\r\n   */\r\n  handlePostRender() {\r\n    const frameState = this.frameState_;\r\n\r\n    // Manage the tile queue\r\n    // Image loads are expensive and a limited resource, so try to use them\r\n    // efficiently:\r\n    // * When the view is static we allow a large number of parallel tile loads\r\n    //   to complete the frame as quickly as possible.\r\n    // * When animating or interacting, image loads can cause janks, so we reduce\r\n    //   the maximum number of loads per frame and limit the number of parallel\r\n    //   tile loads to remain reactive to view changes and to reduce the chance of\r\n    //   loading tiles that will quickly disappear from view.\r\n    const tileQueue = this.tileQueue_;\r\n    if (!tileQueue.isEmpty()) {\r\n      let maxTotalLoading = this.maxTilesLoading_;\r\n      let maxNewLoads = maxTotalLoading;\r\n      if (frameState) {\r\n        const hints = frameState.viewHints;\r\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\r\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\r\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\r\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\r\n        }\r\n      }\r\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\r\n        tileQueue.reprioritize(); // FIXME only call if view has changed\r\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\r\n      }\r\n    }\r\n\r\n    if (frameState && this.renderer_ && !frameState.animate) {\r\n      if (this.renderComplete_ === true) {\r\n        if (this.hasListener(RenderEventType.RENDERCOMPLETE)) {\r\n          this.renderer_.dispatchRenderEvent(\r\n            RenderEventType.RENDERCOMPLETE,\r\n            frameState\r\n          );\r\n        }\r\n        if (this.loaded_ === false) {\r\n          this.loaded_ = true;\r\n          this.dispatchEvent(\r\n            new MapEvent(MapEventType.LOADEND, this, frameState)\r\n          );\r\n        }\r\n      } else if (this.loaded_ === true) {\r\n        this.loaded_ = false;\r\n        this.dispatchEvent(\r\n          new MapEvent(MapEventType.LOADSTART, this, frameState)\r\n        );\r\n      }\r\n    }\r\n\r\n    const postRenderFunctions = this.postRenderFunctions_;\r\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\r\n      postRenderFunctions[i](this, frameState);\r\n    }\r\n    postRenderFunctions.length = 0;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  handleSizeChanged_() {\r\n    if (this.getView() && !this.getView().getAnimating()) {\r\n      this.getView().resolveConstraints(0);\r\n    }\r\n\r\n    this.render();\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  handleTargetChanged_() {\r\n    if (this.mapBrowserEventHandler_) {\r\n      for (let i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\r\n        unlistenByKey(this.targetChangeHandlerKeys_[i]);\r\n      }\r\n      this.targetChangeHandlerKeys_ = null;\r\n      this.viewport_.removeEventListener(\r\n        EventType.CONTEXTMENU,\r\n        this.boundHandleBrowserEvent_\r\n      );\r\n      this.viewport_.removeEventListener(\r\n        EventType.WHEEL,\r\n        this.boundHandleBrowserEvent_\r\n      );\r\n      this.mapBrowserEventHandler_.dispose();\r\n      this.mapBrowserEventHandler_ = null;\r\n      removeNode(this.viewport_);\r\n    }\r\n\r\n    // target may be undefined, null, a string or an Element.\r\n    // If it's a string we convert it to an Element before proceeding.\r\n    // If it's not now an Element we remove the viewport from the DOM.\r\n    // If it's an Element we append the viewport element to it.\r\n\r\n    const targetElement = this.getTargetElement();\r\n    if (!targetElement) {\r\n      if (this.renderer_) {\r\n        clearTimeout(this.postRenderTimeoutHandle_);\r\n        this.postRenderTimeoutHandle_ = undefined;\r\n        this.postRenderFunctions_.length = 0;\r\n        this.renderer_.dispose();\r\n        this.renderer_ = null;\r\n      }\r\n      if (this.animationDelayKey_) {\r\n        cancelAnimationFrame(this.animationDelayKey_);\r\n        this.animationDelayKey_ = undefined;\r\n      }\r\n    } else {\r\n      targetElement.appendChild(this.viewport_);\r\n      if (!this.renderer_) {\r\n        this.renderer_ = new CompositeMapRenderer(this);\r\n      }\r\n\r\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\r\n        this,\r\n        this.moveTolerance_\r\n      );\r\n      for (const key in MapBrowserEventType) {\r\n        this.mapBrowserEventHandler_.addEventListener(\r\n          MapBrowserEventType[key],\r\n          this.handleMapBrowserEvent.bind(this)\r\n        );\r\n      }\r\n      this.viewport_.addEventListener(\r\n        EventType.CONTEXTMENU,\r\n        this.boundHandleBrowserEvent_,\r\n        false\r\n      );\r\n      this.viewport_.addEventListener(\r\n        EventType.WHEEL,\r\n        this.boundHandleBrowserEvent_,\r\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false\r\n      );\r\n\r\n      const defaultView = this.getOwnerDocument().defaultView;\r\n      const keyboardEventTarget = !this.keyboardEventTarget_\r\n        ? targetElement\r\n        : this.keyboardEventTarget_;\r\n      this.targetChangeHandlerKeys_ = [\r\n        listen(\r\n          keyboardEventTarget,\r\n          EventType.KEYDOWN,\r\n          this.handleBrowserEvent,\r\n          this\r\n        ),\r\n        listen(\r\n          keyboardEventTarget,\r\n          EventType.KEYPRESS,\r\n          this.handleBrowserEvent,\r\n          this\r\n        ),\r\n        listen(defaultView, EventType.RESIZE, this.updateSize, this),\r\n      ];\r\n    }\r\n\r\n    this.updateSize();\r\n    // updateSize calls setSize, so no need to call this.render\r\n    // ourselves here.\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  handleTileChange_() {\r\n    this.render();\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  handleViewPropertyChanged_() {\r\n    this.render();\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  handleViewChanged_() {\r\n    if (this.viewPropertyListenerKey_) {\r\n      unlistenByKey(this.viewPropertyListenerKey_);\r\n      this.viewPropertyListenerKey_ = null;\r\n    }\r\n    if (this.viewChangeListenerKey_) {\r\n      unlistenByKey(this.viewChangeListenerKey_);\r\n      this.viewChangeListenerKey_ = null;\r\n    }\r\n    const view = this.getView();\r\n    if (view) {\r\n      this.updateViewportSize_();\r\n\r\n      this.viewPropertyListenerKey_ = listen(\r\n        view,\r\n        ObjectEventType.PROPERTYCHANGE,\r\n        this.handleViewPropertyChanged_,\r\n        this\r\n      );\r\n      this.viewChangeListenerKey_ = listen(\r\n        view,\r\n        EventType.CHANGE,\r\n        this.handleViewPropertyChanged_,\r\n        this\r\n      );\r\n\r\n      view.resolveConstraints(0);\r\n    }\r\n    this.render();\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  handleLayerGroupChanged_() {\r\n    if (this.layerGroupPropertyListenerKeys_) {\r\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\r\n      this.layerGroupPropertyListenerKeys_ = null;\r\n    }\r\n    const layerGroup = this.getLayerGroup();\r\n    if (layerGroup) {\r\n      this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\r\n      this.layerGroupPropertyListenerKeys_ = [\r\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\r\n        listen(layerGroup, EventType.CHANGE, this.render, this),\r\n        listen(layerGroup, 'addlayer', this.handleLayerAdd_, this),\r\n        listen(layerGroup, 'removelayer', this.handleLayerRemove_, this),\r\n      ];\r\n    }\r\n    this.render();\r\n  }\r\n\r\n  /**\r\n   * @return {boolean} Is rendered.\r\n   */\r\n  isRendered() {\r\n    return !!this.frameState_;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  animationDelay_() {\r\n    this.animationDelayKey_ = undefined;\r\n    this.renderFrame_(Date.now());\r\n  }\r\n\r\n  /**\r\n   * Requests an immediate render in a synchronous manner.\r\n   * @api\r\n   */\r\n  renderSync() {\r\n    if (this.animationDelayKey_) {\r\n      cancelAnimationFrame(this.animationDelayKey_);\r\n    }\r\n    this.animationDelay_();\r\n  }\r\n\r\n  /**\r\n   * Redraws all text after new fonts have loaded\r\n   */\r\n  redrawText() {\r\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\r\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\r\n      const layer = layerStates[i].layer;\r\n      if (layer.hasRenderer()) {\r\n        layer.getRenderer().handleFontsChanged();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Request a map rendering (at the next animation frame).\r\n   * @api\r\n   */\r\n  render() {\r\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\r\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Remove the given control from the map.\r\n   * @param {import(\"./control/Control.js\").default} control Control.\r\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\r\n   *     if the control was not found).\r\n   * @api\r\n   */\r\n  removeControl(control) {\r\n    return this.getControls().remove(control);\r\n  }\r\n\r\n  /**\r\n   * Remove the given interaction from the map.\r\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\r\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\r\n   *     undefined if the interaction was not found).\r\n   * @api\r\n   */\r\n  removeInteraction(interaction) {\r\n    return this.getInteractions().remove(interaction);\r\n  }\r\n\r\n  /**\r\n   * Removes the given layer from the map.\r\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\r\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\r\n   *     layer was not found).\r\n   * @api\r\n   */\r\n  removeLayer(layer) {\r\n    const layers = this.getLayerGroup().getLayers();\r\n    return layers.remove(layer);\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\r\n   * @private\r\n   */\r\n  handleLayerRemove_(event) {\r\n    removeLayerMapProperty(event.layer);\r\n  }\r\n\r\n  /**\r\n   * Remove the given overlay from the map.\r\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\r\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\r\n   *     if the overlay was not found).\r\n   * @api\r\n   */\r\n  removeOverlay(overlay) {\r\n    return this.getOverlays().remove(overlay);\r\n  }\r\n\r\n  /**\r\n   * @param {number} time Time.\r\n   * @private\r\n   */\r\n  renderFrame_(time) {\r\n    const size = this.getSize();\r\n    const view = this.getView();\r\n    const previousFrameState = this.frameState_;\r\n    /** @type {?FrameState} */\r\n    let frameState = null;\r\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\r\n      const viewHints = view.getHints(\r\n        this.frameState_ ? this.frameState_.viewHints : undefined\r\n      );\r\n      const viewState = view.getState();\r\n      frameState = {\r\n        animate: false,\r\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\r\n        declutterTree: null,\r\n        extent: getForViewAndSize(\r\n          viewState.center,\r\n          viewState.resolution,\r\n          viewState.rotation,\r\n          size\r\n        ),\r\n        index: this.frameIndex_++,\r\n        layerIndex: 0,\r\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\r\n        pixelRatio: this.pixelRatio_,\r\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\r\n        postRenderFunctions: [],\r\n        size: size,\r\n        tileQueue: this.tileQueue_,\r\n        time: time,\r\n        usedTiles: {},\r\n        viewState: viewState,\r\n        viewHints: viewHints,\r\n        wantedTiles: {},\r\n        mapId: getUid(this),\r\n        renderTargets: {},\r\n      };\r\n      if (viewState.nextCenter && viewState.nextResolution) {\r\n        const rotation = isNaN(viewState.nextRotation)\r\n          ? viewState.rotation\r\n          : viewState.nextRotation;\r\n\r\n        frameState.nextExtent = getForViewAndSize(\r\n          viewState.nextCenter,\r\n          viewState.nextResolution,\r\n          rotation,\r\n          size\r\n        );\r\n      }\r\n    }\r\n\r\n    this.frameState_ = frameState;\r\n    this.renderer_.renderFrame(frameState);\r\n\r\n    if (frameState) {\r\n      if (frameState.animate) {\r\n        this.render();\r\n      }\r\n      Array.prototype.push.apply(\r\n        this.postRenderFunctions_,\r\n        frameState.postRenderFunctions\r\n      );\r\n\r\n      if (previousFrameState) {\r\n        const moveStart =\r\n          !this.previousExtent_ ||\r\n          (!isEmpty(this.previousExtent_) &&\r\n            !equals(frameState.extent, this.previousExtent_));\r\n        if (moveStart) {\r\n          this.dispatchEvent(\r\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState)\r\n          );\r\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\r\n        }\r\n      }\r\n\r\n      const idle =\r\n        this.previousExtent_ &&\r\n        !frameState.viewHints[ViewHint.ANIMATING] &&\r\n        !frameState.viewHints[ViewHint.INTERACTING] &&\r\n        !equals(frameState.extent, this.previousExtent_);\r\n\r\n      if (idle) {\r\n        this.dispatchEvent(\r\n          new MapEvent(MapEventType.MOVEEND, this, frameState)\r\n        );\r\n        clone(frameState.extent, this.previousExtent_);\r\n      }\r\n    }\r\n\r\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\r\n\r\n    this.renderComplete_ =\r\n      this.hasListener(MapEventType.LOADSTART) ||\r\n      this.hasListener(MapEventType.LOADEND) ||\r\n      this.hasListener(RenderEventType.RENDERCOMPLETE)\r\n        ? !this.tileQueue_.getTilesLoading() &&\r\n          !this.tileQueue_.getCount() &&\r\n          !this.getLoadingOrNotReady()\r\n        : undefined;\r\n\r\n    if (!this.postRenderTimeoutHandle_) {\r\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\r\n        this.postRenderTimeoutHandle_ = undefined;\r\n        this.handlePostRender();\r\n      }, 0);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sets the layergroup of this map.\r\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\r\n   * @observable\r\n   * @api\r\n   */\r\n  setLayerGroup(layerGroup) {\r\n    const oldLayerGroup = this.getLayerGroup();\r\n    if (oldLayerGroup) {\r\n      this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\r\n    }\r\n    this.set(MapProperty.LAYERGROUP, layerGroup);\r\n  }\r\n\r\n  /**\r\n   * Set the size of this map.\r\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\r\n   * @observable\r\n   * @api\r\n   */\r\n  setSize(size) {\r\n    this.set(MapProperty.SIZE, size);\r\n  }\r\n\r\n  /**\r\n   * Set the target element to render this map into.\r\n   * @param {HTMLElement|string} [target] The Element or id of the Element\r\n   *     that the map is rendered in.\r\n   * @observable\r\n   * @api\r\n   */\r\n  setTarget(target) {\r\n    this.set(MapProperty.TARGET, target);\r\n  }\r\n\r\n  /**\r\n   * Set the view for this map.\r\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\r\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\r\n   * alternative allows view properties to be resolved by sources or other components that load\r\n   * view-related metadata.\r\n   * @observable\r\n   * @api\r\n   */\r\n  setView(view) {\r\n    if (!view || view instanceof View) {\r\n      this.set(MapProperty.VIEW, view);\r\n      return;\r\n    }\r\n    this.set(MapProperty.VIEW, new View());\r\n\r\n    const map = this;\r\n    view.then(function (viewOptions) {\r\n      map.setView(new View(viewOptions));\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Force a recalculation of the map viewport size.  This should be called when\r\n   * third-party code changes the size of the map viewport.\r\n   * @api\r\n   */\r\n  updateSize() {\r\n    const targetElement = this.getTargetElement();\r\n\r\n    let size = undefined;\r\n    if (targetElement) {\r\n      const computedStyle = getComputedStyle(targetElement);\r\n      const width =\r\n        targetElement.offsetWidth -\r\n        parseFloat(computedStyle['borderLeftWidth']) -\r\n        parseFloat(computedStyle['paddingLeft']) -\r\n        parseFloat(computedStyle['paddingRight']) -\r\n        parseFloat(computedStyle['borderRightWidth']);\r\n      const height =\r\n        targetElement.offsetHeight -\r\n        parseFloat(computedStyle['borderTopWidth']) -\r\n        parseFloat(computedStyle['paddingTop']) -\r\n        parseFloat(computedStyle['paddingBottom']) -\r\n        parseFloat(computedStyle['borderBottomWidth']);\r\n      if (!isNaN(width) && !isNaN(height)) {\r\n        size = [width, height];\r\n        if (\r\n          !hasArea(size) &&\r\n          !!(\r\n            targetElement.offsetWidth ||\r\n            targetElement.offsetHeight ||\r\n            targetElement.getClientRects().length\r\n          )\r\n        ) {\r\n          // eslint-disable-next-line\r\n          console.warn(\r\n            \"No map visible because the map container's width or height are 0.\"\r\n          );\r\n        }\r\n      }\r\n    }\r\n\r\n    this.setSize(size);\r\n    this.updateViewportSize_();\r\n  }\r\n\r\n  /**\r\n   * Recomputes the viewport size and save it on the view object (if any)\r\n   * @private\r\n   */\r\n  updateViewportSize_() {\r\n    const view = this.getView();\r\n    if (view) {\r\n      let size = undefined;\r\n      const computedStyle = getComputedStyle(this.viewport_);\r\n      if (computedStyle.width && computedStyle.height) {\r\n        size = [\r\n          parseInt(computedStyle.width, 10),\r\n          parseInt(computedStyle.height, 10),\r\n        ];\r\n      }\r\n      view.setViewportSize(size);\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * @param {MapOptions} options Map options.\r\n * @return {MapOptionsInternal} Internal map options.\r\n */\r\nfunction createOptionsInternal(options) {\r\n  /**\r\n   * @type {HTMLElement|Document}\r\n   */\r\n  let keyboardEventTarget = null;\r\n  if (options.keyboardEventTarget !== undefined) {\r\n    keyboardEventTarget =\r\n      typeof options.keyboardEventTarget === 'string'\r\n        ? document.getElementById(options.keyboardEventTarget)\r\n        : options.keyboardEventTarget;\r\n  }\r\n\r\n  /**\r\n   * @type {Object<string, *>}\r\n   */\r\n  const values = {};\r\n\r\n  const layerGroup =\r\n    options.layers &&\r\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\r\n      ? /** @type {LayerGroup} */ (options.layers)\r\n      : new LayerGroup({\r\n          layers:\r\n            /** @type {Collection<import(\"./layer/Base.js\").default>|Array<import(\"./layer/Base.js\").default>} */ (\r\n              options.layers\r\n            ),\r\n        });\r\n  values[MapProperty.LAYERGROUP] = layerGroup;\r\n\r\n  values[MapProperty.TARGET] = options.target;\r\n\r\n  values[MapProperty.VIEW] =\r\n    options.view instanceof View ? options.view : new View();\r\n\r\n  /** @type {Collection<import(\"./control/Control.js\").default>} */\r\n  let controls;\r\n  if (options.controls !== undefined) {\r\n    if (Array.isArray(options.controls)) {\r\n      controls = new Collection(options.controls.slice());\r\n    } else {\r\n      assert(\r\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\r\n        47\r\n      ); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\r\n      controls = options.controls;\r\n    }\r\n  }\r\n\r\n  /** @type {Collection<import(\"./interaction/Interaction\").default>} */\r\n  let interactions;\r\n  if (options.interactions !== undefined) {\r\n    if (Array.isArray(options.interactions)) {\r\n      interactions = new Collection(options.interactions.slice());\r\n    } else {\r\n      assert(\r\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\r\n          'function',\r\n        48\r\n      ); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\r\n      interactions = options.interactions;\r\n    }\r\n  }\r\n\r\n  /** @type {Collection<import(\"./Overlay.js\").default>} */\r\n  let overlays;\r\n  if (options.overlays !== undefined) {\r\n    if (Array.isArray(options.overlays)) {\r\n      overlays = new Collection(options.overlays.slice());\r\n    } else {\r\n      assert(\r\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\r\n        49\r\n      ); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\r\n      overlays = options.overlays;\r\n    }\r\n  } else {\r\n    overlays = new Collection();\r\n  }\r\n\r\n  return {\r\n    controls: controls,\r\n    interactions: interactions,\r\n    keyboardEventTarget: keyboardEventTarget,\r\n    overlays: overlays,\r\n    values: values,\r\n  };\r\n}\r\nexport default Map;\r\n","\r\nexport default function quickselect(arr, k, left, right, compare) {\r\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\r\n}\r\n\r\nfunction quickselectStep(arr, k, left, right, compare) {\r\n\r\n    while (right > left) {\r\n        if (right - left > 600) {\r\n            var n = right - left + 1;\r\n            var m = k - left + 1;\r\n            var z = Math.log(n);\r\n            var s = 0.5 * Math.exp(2 * z / 3);\r\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\r\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\r\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\r\n            quickselectStep(arr, k, newLeft, newRight, compare);\r\n        }\r\n\r\n        var t = arr[k];\r\n        var i = left;\r\n        var j = right;\r\n\r\n        swap(arr, left, k);\r\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\r\n\r\n        while (i < j) {\r\n            swap(arr, i, j);\r\n            i++;\r\n            j--;\r\n            while (compare(arr[i], t) < 0) i++;\r\n            while (compare(arr[j], t) > 0) j--;\r\n        }\r\n\r\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\r\n        else {\r\n            j++;\r\n            swap(arr, j, right);\r\n        }\r\n\r\n        if (j <= k) left = j + 1;\r\n        if (k <= j) right = j - 1;\r\n    }\r\n}\r\n\r\nfunction swap(arr, i, j) {\r\n    var tmp = arr[i];\r\n    arr[i] = arr[j];\r\n    arr[j] = tmp;\r\n}\r\n\r\nfunction defaultCompare(a, b) {\r\n    return a < b ? -1 : a > b ? 1 : 0;\r\n}\r\n","import quickselect from 'quickselect';\r\n\r\nexport default class RBush {\r\n    constructor(maxEntries = 9) {\r\n        // max entries in a node is 9 by default; min node fill is 40% for best performance\r\n        this._maxEntries = Math.max(4, maxEntries);\r\n        this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\r\n        this.clear();\r\n    }\r\n\r\n    all() {\r\n        return this._all(this.data, []);\r\n    }\r\n\r\n    search(bbox) {\r\n        let node = this.data;\r\n        const result = [];\r\n\r\n        if (!intersects(bbox, node)) return result;\r\n\r\n        const toBBox = this.toBBox;\r\n        const nodesToSearch = [];\r\n\r\n        while (node) {\r\n            for (let i = 0; i < node.children.length; i++) {\r\n                const child = node.children[i];\r\n                const childBBox = node.leaf ? toBBox(child) : child;\r\n\r\n                if (intersects(bbox, childBBox)) {\r\n                    if (node.leaf) result.push(child);\r\n                    else if (contains(bbox, childBBox)) this._all(child, result);\r\n                    else nodesToSearch.push(child);\r\n                }\r\n            }\r\n            node = nodesToSearch.pop();\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    collides(bbox) {\r\n        let node = this.data;\r\n\r\n        if (!intersects(bbox, node)) return false;\r\n\r\n        const nodesToSearch = [];\r\n        while (node) {\r\n            for (let i = 0; i < node.children.length; i++) {\r\n                const child = node.children[i];\r\n                const childBBox = node.leaf ? this.toBBox(child) : child;\r\n\r\n                if (intersects(bbox, childBBox)) {\r\n                    if (node.leaf || contains(bbox, childBBox)) return true;\r\n                    nodesToSearch.push(child);\r\n                }\r\n            }\r\n            node = nodesToSearch.pop();\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    load(data) {\r\n        if (!(data && data.length)) return this;\r\n\r\n        if (data.length < this._minEntries) {\r\n            for (let i = 0; i < data.length; i++) {\r\n                this.insert(data[i]);\r\n            }\r\n            return this;\r\n        }\r\n\r\n        // recursively build the tree with the given data from scratch using OMT algorithm\r\n        let node = this._build(data.slice(), 0, data.length - 1, 0);\r\n\r\n        if (!this.data.children.length) {\r\n            // save as is if tree is empty\r\n            this.data = node;\r\n\r\n        } else if (this.data.height === node.height) {\r\n            // split root if trees have the same height\r\n            this._splitRoot(this.data, node);\r\n\r\n        } else {\r\n            if (this.data.height < node.height) {\r\n                // swap trees if inserted one is bigger\r\n                const tmpNode = this.data;\r\n                this.data = node;\r\n                node = tmpNode;\r\n            }\r\n\r\n            // insert the small tree into the large tree at appropriate level\r\n            this._insert(node, this.data.height - node.height - 1, true);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    insert(item) {\r\n        if (item) this._insert(item, this.data.height - 1);\r\n        return this;\r\n    }\r\n\r\n    clear() {\r\n        this.data = createNode([]);\r\n        return this;\r\n    }\r\n\r\n    remove(item, equalsFn) {\r\n        if (!item) return this;\r\n\r\n        let node = this.data;\r\n        const bbox = this.toBBox(item);\r\n        const path = [];\r\n        const indexes = [];\r\n        let i, parent, goingUp;\r\n\r\n        // depth-first iterative tree traversal\r\n        while (node || path.length) {\r\n\r\n            if (!node) { // go up\r\n                node = path.pop();\r\n                parent = path[path.length - 1];\r\n                i = indexes.pop();\r\n                goingUp = true;\r\n            }\r\n\r\n            if (node.leaf) { // check current node\r\n                const index = findItem(item, node.children, equalsFn);\r\n\r\n                if (index !== -1) {\r\n                    // item found, remove the item and condense tree upwards\r\n                    node.children.splice(index, 1);\r\n                    path.push(node);\r\n                    this._condense(path);\r\n                    return this;\r\n                }\r\n            }\r\n\r\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\r\n                path.push(node);\r\n                indexes.push(i);\r\n                i = 0;\r\n                parent = node;\r\n                node = node.children[0];\r\n\r\n            } else if (parent) { // go right\r\n                i++;\r\n                node = parent.children[i];\r\n                goingUp = false;\r\n\r\n            } else node = null; // nothing found\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    toBBox(item) { return item; }\r\n\r\n    compareMinX(a, b) { return a.minX - b.minX; }\r\n    compareMinY(a, b) { return a.minY - b.minY; }\r\n\r\n    toJSON() { return this.data; }\r\n\r\n    fromJSON(data) {\r\n        this.data = data;\r\n        return this;\r\n    }\r\n\r\n    _all(node, result) {\r\n        const nodesToSearch = [];\r\n        while (node) {\r\n            if (node.leaf) result.push(...node.children);\r\n            else nodesToSearch.push(...node.children);\r\n\r\n            node = nodesToSearch.pop();\r\n        }\r\n        return result;\r\n    }\r\n\r\n    _build(items, left, right, height) {\r\n\r\n        const N = right - left + 1;\r\n        let M = this._maxEntries;\r\n        let node;\r\n\r\n        if (N <= M) {\r\n            // reached leaf level; return leaf\r\n            node = createNode(items.slice(left, right + 1));\r\n            calcBBox(node, this.toBBox);\r\n            return node;\r\n        }\r\n\r\n        if (!height) {\r\n            // target height of the bulk-loaded tree\r\n            height = Math.ceil(Math.log(N) / Math.log(M));\r\n\r\n            // target number of root entries to maximize storage utilization\r\n            M = Math.ceil(N / Math.pow(M, height - 1));\r\n        }\r\n\r\n        node = createNode([]);\r\n        node.leaf = false;\r\n        node.height = height;\r\n\r\n        // split the items into M mostly square tiles\r\n\r\n        const N2 = Math.ceil(N / M);\r\n        const N1 = N2 * Math.ceil(Math.sqrt(M));\r\n\r\n        multiSelect(items, left, right, N1, this.compareMinX);\r\n\r\n        for (let i = left; i <= right; i += N1) {\r\n\r\n            const right2 = Math.min(i + N1 - 1, right);\r\n\r\n            multiSelect(items, i, right2, N2, this.compareMinY);\r\n\r\n            for (let j = i; j <= right2; j += N2) {\r\n\r\n                const right3 = Math.min(j + N2 - 1, right2);\r\n\r\n                // pack each entry recursively\r\n                node.children.push(this._build(items, j, right3, height - 1));\r\n            }\r\n        }\r\n\r\n        calcBBox(node, this.toBBox);\r\n\r\n        return node;\r\n    }\r\n\r\n    _chooseSubtree(bbox, node, level, path) {\r\n        while (true) {\r\n            path.push(node);\r\n\r\n            if (node.leaf || path.length - 1 === level) break;\r\n\r\n            let minArea = Infinity;\r\n            let minEnlargement = Infinity;\r\n            let targetNode;\r\n\r\n            for (let i = 0; i < node.children.length; i++) {\r\n                const child = node.children[i];\r\n                const area = bboxArea(child);\r\n                const enlargement = enlargedArea(bbox, child) - area;\r\n\r\n                // choose entry with the least area enlargement\r\n                if (enlargement < minEnlargement) {\r\n                    minEnlargement = enlargement;\r\n                    minArea = area < minArea ? area : minArea;\r\n                    targetNode = child;\r\n\r\n                } else if (enlargement === minEnlargement) {\r\n                    // otherwise choose one with the smallest area\r\n                    if (area < minArea) {\r\n                        minArea = area;\r\n                        targetNode = child;\r\n                    }\r\n                }\r\n            }\r\n\r\n            node = targetNode || node.children[0];\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    _insert(item, level, isNode) {\r\n        const bbox = isNode ? item : this.toBBox(item);\r\n        const insertPath = [];\r\n\r\n        // find the best node for accommodating the item, saving all nodes along the path too\r\n        const node = this._chooseSubtree(bbox, this.data, level, insertPath);\r\n\r\n        // put the item into the node\r\n        node.children.push(item);\r\n        extend(node, bbox);\r\n\r\n        // split on node overflow; propagate upwards if necessary\r\n        while (level >= 0) {\r\n            if (insertPath[level].children.length > this._maxEntries) {\r\n                this._split(insertPath, level);\r\n                level--;\r\n            } else break;\r\n        }\r\n\r\n        // adjust bboxes along the insertion path\r\n        this._adjustParentBBoxes(bbox, insertPath, level);\r\n    }\r\n\r\n    // split overflowed node into two\r\n    _split(insertPath, level) {\r\n        const node = insertPath[level];\r\n        const M = node.children.length;\r\n        const m = this._minEntries;\r\n\r\n        this._chooseSplitAxis(node, m, M);\r\n\r\n        const splitIndex = this._chooseSplitIndex(node, m, M);\r\n\r\n        const newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\r\n        newNode.height = node.height;\r\n        newNode.leaf = node.leaf;\r\n\r\n        calcBBox(node, this.toBBox);\r\n        calcBBox(newNode, this.toBBox);\r\n\r\n        if (level) insertPath[level - 1].children.push(newNode);\r\n        else this._splitRoot(node, newNode);\r\n    }\r\n\r\n    _splitRoot(node, newNode) {\r\n        // split root node\r\n        this.data = createNode([node, newNode]);\r\n        this.data.height = node.height + 1;\r\n        this.data.leaf = false;\r\n        calcBBox(this.data, this.toBBox);\r\n    }\r\n\r\n    _chooseSplitIndex(node, m, M) {\r\n        let index;\r\n        let minOverlap = Infinity;\r\n        let minArea = Infinity;\r\n\r\n        for (let i = m; i <= M - m; i++) {\r\n            const bbox1 = distBBox(node, 0, i, this.toBBox);\r\n            const bbox2 = distBBox(node, i, M, this.toBBox);\r\n\r\n            const overlap = intersectionArea(bbox1, bbox2);\r\n            const area = bboxArea(bbox1) + bboxArea(bbox2);\r\n\r\n            // choose distribution with minimum overlap\r\n            if (overlap < minOverlap) {\r\n                minOverlap = overlap;\r\n                index = i;\r\n\r\n                minArea = area < minArea ? area : minArea;\r\n\r\n            } else if (overlap === minOverlap) {\r\n                // otherwise choose distribution with minimum area\r\n                if (area < minArea) {\r\n                    minArea = area;\r\n                    index = i;\r\n                }\r\n            }\r\n        }\r\n\r\n        return index || M - m;\r\n    }\r\n\r\n    // sorts node children by the best axis for split\r\n    _chooseSplitAxis(node, m, M) {\r\n        const compareMinX = node.leaf ? this.compareMinX : compareNodeMinX;\r\n        const compareMinY = node.leaf ? this.compareMinY : compareNodeMinY;\r\n        const xMargin = this._allDistMargin(node, m, M, compareMinX);\r\n        const yMargin = this._allDistMargin(node, m, M, compareMinY);\r\n\r\n        // if total distributions margin value is minimal for x, sort by minX,\r\n        // otherwise it's already sorted by minY\r\n        if (xMargin < yMargin) node.children.sort(compareMinX);\r\n    }\r\n\r\n    // total margin of all possible split distributions where each node is at least m full\r\n    _allDistMargin(node, m, M, compare) {\r\n        node.children.sort(compare);\r\n\r\n        const toBBox = this.toBBox;\r\n        const leftBBox = distBBox(node, 0, m, toBBox);\r\n        const rightBBox = distBBox(node, M - m, M, toBBox);\r\n        let margin = bboxMargin(leftBBox) + bboxMargin(rightBBox);\r\n\r\n        for (let i = m; i < M - m; i++) {\r\n            const child = node.children[i];\r\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\r\n            margin += bboxMargin(leftBBox);\r\n        }\r\n\r\n        for (let i = M - m - 1; i >= m; i--) {\r\n            const child = node.children[i];\r\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\r\n            margin += bboxMargin(rightBBox);\r\n        }\r\n\r\n        return margin;\r\n    }\r\n\r\n    _adjustParentBBoxes(bbox, path, level) {\r\n        // adjust bboxes along the given tree path\r\n        for (let i = level; i >= 0; i--) {\r\n            extend(path[i], bbox);\r\n        }\r\n    }\r\n\r\n    _condense(path) {\r\n        // go through the path, removing empty nodes and updating bboxes\r\n        for (let i = path.length - 1, siblings; i >= 0; i--) {\r\n            if (path[i].children.length === 0) {\r\n                if (i > 0) {\r\n                    siblings = path[i - 1].children;\r\n                    siblings.splice(siblings.indexOf(path[i]), 1);\r\n\r\n                } else this.clear();\r\n\r\n            } else calcBBox(path[i], this.toBBox);\r\n        }\r\n    }\r\n}\r\n\r\nfunction findItem(item, items, equalsFn) {\r\n    if (!equalsFn) return items.indexOf(item);\r\n\r\n    for (let i = 0; i < items.length; i++) {\r\n        if (equalsFn(item, items[i])) return i;\r\n    }\r\n    return -1;\r\n}\r\n\r\n// calculate node's bbox from bboxes of its children\r\nfunction calcBBox(node, toBBox) {\r\n    distBBox(node, 0, node.children.length, toBBox, node);\r\n}\r\n\r\n// min bounding rectangle of node children from k to p-1\r\nfunction distBBox(node, k, p, toBBox, destNode) {\r\n    if (!destNode) destNode = createNode(null);\r\n    destNode.minX = Infinity;\r\n    destNode.minY = Infinity;\r\n    destNode.maxX = -Infinity;\r\n    destNode.maxY = -Infinity;\r\n\r\n    for (let i = k; i < p; i++) {\r\n        const child = node.children[i];\r\n        extend(destNode, node.leaf ? toBBox(child) : child);\r\n    }\r\n\r\n    return destNode;\r\n}\r\n\r\nfunction extend(a, b) {\r\n    a.minX = Math.min(a.minX, b.minX);\r\n    a.minY = Math.min(a.minY, b.minY);\r\n    a.maxX = Math.max(a.maxX, b.maxX);\r\n    a.maxY = Math.max(a.maxY, b.maxY);\r\n    return a;\r\n}\r\n\r\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\r\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\r\n\r\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\r\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\r\n\r\nfunction enlargedArea(a, b) {\r\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\r\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\r\n}\r\n\r\nfunction intersectionArea(a, b) {\r\n    const minX = Math.max(a.minX, b.minX);\r\n    const minY = Math.max(a.minY, b.minY);\r\n    const maxX = Math.min(a.maxX, b.maxX);\r\n    const maxY = Math.min(a.maxY, b.maxY);\r\n\r\n    return Math.max(0, maxX - minX) *\r\n           Math.max(0, maxY - minY);\r\n}\r\n\r\nfunction contains(a, b) {\r\n    return a.minX <= b.minX &&\r\n           a.minY <= b.minY &&\r\n           b.maxX <= a.maxX &&\r\n           b.maxY <= a.maxY;\r\n}\r\n\r\nfunction intersects(a, b) {\r\n    return b.minX <= a.maxX &&\r\n           b.minY <= a.maxY &&\r\n           b.maxX >= a.minX &&\r\n           b.maxY >= a.minY;\r\n}\r\n\r\nfunction createNode(children) {\r\n    return {\r\n        children,\r\n        height: 1,\r\n        leaf: true,\r\n        minX: Infinity,\r\n        minY: Infinity,\r\n        maxX: -Infinity,\r\n        maxY: -Infinity\r\n    };\r\n}\r\n\r\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\r\n// combines selection algorithm with binary divide & conquer approach\r\n\r\nfunction multiSelect(arr, left, right, n, compare) {\r\n    const stack = [left, right];\r\n\r\n    while (stack.length) {\r\n        right = stack.pop();\r\n        left = stack.pop();\r\n\r\n        if (right - left <= n) continue;\r\n\r\n        const mid = left + Math.ceil((right - left) / n / 2) * n;\r\n        quickselect(arr, mid, left, right, compare);\r\n\r\n        stack.push(left, mid, mid, right);\r\n    }\r\n}\r\n","/**\r\n * @module ol/ImageState\r\n */\r\n\r\n/**\r\n * @enum {number}\r\n */\r\nexport default {\r\n  IDLE: 0,\r\n  LOADING: 1,\r\n  LOADED: 2,\r\n  ERROR: 3,\r\n  EMPTY: 4,\r\n};\r\n","/**\r\n * @module ol/style/Image\r\n */\r\nimport {abstract} from '../util.js';\r\nimport {toSize} from '../size.js';\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {number} opacity Opacity.\r\n * @property {boolean} rotateWithView If the image should get rotated with the view.\r\n * @property {number} rotation Rotation.\r\n * @property {number|import(\"../size.js\").Size} scale Scale.\r\n * @property {Array<number>} displacement Displacement.\r\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} declutterMode Declutter mode: `declutter`, `obstacle`, 'none */\r\n\r\n/**\r\n * @classdesc\r\n * A base class used for creating subclasses and not instantiated in\r\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\r\n * {@link module:ol/style/RegularShape~RegularShape}.\r\n * @abstract\r\n * @api\r\n */\r\nclass ImageStyle {\r\n  /**\r\n   * @param {Options} options Options.\r\n   */\r\n  constructor(options) {\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.opacity_ = options.opacity;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.rotateWithView_ = options.rotateWithView;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.rotation_ = options.rotation;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|import(\"../size.js\").Size}\r\n     */\r\n    this.scale_ = options.scale;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../size.js\").Size}\r\n     */\r\n    this.scaleArray_ = toSize(options.scale);\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<number>}\r\n     */\r\n    this.displacement_ = options.displacement;\r\n\r\n    /**\r\n     * @private\r\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\r\n     */\r\n    this.declutterMode_ = options.declutterMode;\r\n  }\r\n\r\n  /**\r\n   * Clones the style.\r\n   * @return {ImageStyle} The cloned style.\r\n   * @api\r\n   */\r\n  clone() {\r\n    const scale = this.getScale();\r\n    return new ImageStyle({\r\n      opacity: this.getOpacity(),\r\n      scale: Array.isArray(scale) ? scale.slice() : scale,\r\n      rotation: this.getRotation(),\r\n      rotateWithView: this.getRotateWithView(),\r\n      displacement: this.getDisplacement().slice(),\r\n      declutterMode: this.getDeclutterMode(),\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get the symbolizer opacity.\r\n   * @return {number} Opacity.\r\n   * @api\r\n   */\r\n  getOpacity() {\r\n    return this.opacity_;\r\n  }\r\n\r\n  /**\r\n   * Determine whether the symbolizer rotates with the map.\r\n   * @return {boolean} Rotate with map.\r\n   * @api\r\n   */\r\n  getRotateWithView() {\r\n    return this.rotateWithView_;\r\n  }\r\n\r\n  /**\r\n   * Get the symoblizer rotation.\r\n   * @return {number} Rotation.\r\n   * @api\r\n   */\r\n  getRotation() {\r\n    return this.rotation_;\r\n  }\r\n\r\n  /**\r\n   * Get the symbolizer scale.\r\n   * @return {number|import(\"../size.js\").Size} Scale.\r\n   * @api\r\n   */\r\n  getScale() {\r\n    return this.scale_;\r\n  }\r\n\r\n  /**\r\n   * Get the symbolizer scale array.\r\n   * @return {import(\"../size.js\").Size} Scale array.\r\n   */\r\n  getScaleArray() {\r\n    return this.scaleArray_;\r\n  }\r\n\r\n  /**\r\n   * Get the displacement of the shape\r\n   * @return {Array<number>} Shape's center displacement\r\n   * @api\r\n   */\r\n  getDisplacement() {\r\n    return this.displacement_;\r\n  }\r\n\r\n  /**\r\n   * Get the declutter mode of the shape\r\n   * @return {\"declutter\"|\"obstacle\"|\"none\"|undefined} Shape's declutter mode\r\n   * @api\r\n   */\r\n  getDeclutterMode() {\r\n    return this.declutterMode_;\r\n  }\r\n\r\n  /**\r\n   * Get the anchor point in pixels. The anchor determines the center point for the\r\n   * symbolizer.\r\n   * @abstract\r\n   * @return {Array<number>} Anchor.\r\n   */\r\n  getAnchor() {\r\n    return abstract();\r\n  }\r\n\r\n  /**\r\n   * Get the image element for the symbolizer.\r\n   * @abstract\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\r\n   */\r\n  getImage(pixelRatio) {\r\n    return abstract();\r\n  }\r\n\r\n  /**\r\n   * @abstract\r\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\r\n   */\r\n  getHitDetectionImage() {\r\n    return abstract();\r\n  }\r\n\r\n  /**\r\n   * Get the image pixel ratio.\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   * @return {number} Pixel ratio.\r\n   */\r\n  getPixelRatio(pixelRatio) {\r\n    return 1;\r\n  }\r\n\r\n  /**\r\n   * @abstract\r\n   * @return {import(\"../ImageState.js\").default} Image state.\r\n   */\r\n  getImageState() {\r\n    return abstract();\r\n  }\r\n\r\n  /**\r\n   * @abstract\r\n   * @return {import(\"../size.js\").Size} Image size.\r\n   */\r\n  getImageSize() {\r\n    return abstract();\r\n  }\r\n\r\n  /**\r\n   * Get the origin of the symbolizer.\r\n   * @abstract\r\n   * @return {Array<number>} Origin.\r\n   */\r\n  getOrigin() {\r\n    return abstract();\r\n  }\r\n\r\n  /**\r\n   * Get the size of the symbolizer (in pixels).\r\n   * @abstract\r\n   * @return {import(\"../size.js\").Size} Size.\r\n   */\r\n  getSize() {\r\n    return abstract();\r\n  }\r\n\r\n  /**\r\n   * Set the displacement.\r\n   *\r\n   * @param {Array<number>} displacement Displacement.\r\n   * @api\r\n   */\r\n  setDisplacement(displacement) {\r\n    this.displacement_ = displacement;\r\n  }\r\n\r\n  /**\r\n   * Set the opacity.\r\n   *\r\n   * @param {number} opacity Opacity.\r\n   * @api\r\n   */\r\n  setOpacity(opacity) {\r\n    this.opacity_ = opacity;\r\n  }\r\n\r\n  /**\r\n   * Set whether to rotate the style with the view.\r\n   *\r\n   * @param {boolean} rotateWithView Rotate with map.\r\n   * @api\r\n   */\r\n  setRotateWithView(rotateWithView) {\r\n    this.rotateWithView_ = rotateWithView;\r\n  }\r\n\r\n  /**\r\n   * Set the rotation.\r\n   *\r\n   * @param {number} rotation Rotation.\r\n   * @api\r\n   */\r\n  setRotation(rotation) {\r\n    this.rotation_ = rotation;\r\n  }\r\n  /**\r\n   * Set the scale.\r\n   *\r\n   * @param {number|import(\"../size.js\").Size} scale Scale.\r\n   * @api\r\n   */\r\n  setScale(scale) {\r\n    this.scale_ = scale;\r\n    this.scaleArray_ = toSize(scale);\r\n  }\r\n\r\n  /**\r\n   * @abstract\r\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\r\n   */\r\n  listenImageChange(listener) {\r\n    abstract();\r\n  }\r\n\r\n  /**\r\n   * Load not yet loaded URI.\r\n   * @abstract\r\n   */\r\n  load() {\r\n    abstract();\r\n  }\r\n\r\n  /**\r\n   * @abstract\r\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\r\n   */\r\n  unlistenImageChange(listener) {\r\n    abstract();\r\n  }\r\n}\r\n\r\nexport default ImageStyle;\r\n","/**\r\n * @module ol/colorlike\r\n */\r\nimport {toString} from './color.js';\r\n\r\n/**\r\n * A type accepted by CanvasRenderingContext2D.fillStyle\r\n * or CanvasRenderingContext2D.strokeStyle.\r\n * Represents a color, pattern, or gradient. The origin for patterns and\r\n * gradients as fill style is an increment of 512 css pixels from map coordinate\r\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\r\n * must be a factor of two (2, 4, 8, ..., 512).\r\n *\r\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\r\n * @api\r\n */\r\n\r\n/**\r\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\r\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\r\n * @api\r\n */\r\nexport function asColorLike(color) {\r\n  if (Array.isArray(color)) {\r\n    return toString(color);\r\n  } else {\r\n    return color;\r\n  }\r\n}\r\n","/**\r\n * @module ol/style/RegularShape\r\n */\r\n\r\nimport ImageState from '../ImageState.js';\r\nimport ImageStyle from './Image.js';\r\nimport {asArray} from '../color.js';\r\nimport {asColorLike} from '../colorlike.js';\r\nimport {createCanvasContext2D} from '../dom.js';\r\nimport {\r\n  defaultFillStyle,\r\n  defaultLineJoin,\r\n  defaultLineWidth,\r\n  defaultMiterLimit,\r\n  defaultStrokeStyle,\r\n} from '../render/canvas.js';\r\n\r\n/**\r\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\r\n * @typedef {Object} Options\r\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\r\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\r\n * is the number of sides.\r\n * @property {number} [radius] Radius of a regular polygon.\r\n * @property {number} [radius1] First radius of a star. Ignored if radius is set.\r\n * @property {number} [radius2] Second radius of a star.\r\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's points facing up.\r\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the shape in pixels.\r\n * Positive values will shift the shape right and up.\r\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\r\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\r\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\r\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\r\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\r\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\r\n */\r\n\r\n/**\r\n * @typedef {Object} RenderOptions\r\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\r\n * @property {number} strokeWidth StrokeWidth.\r\n * @property {number} size Size.\r\n * @property {Array<number>|null} lineDash LineDash.\r\n * @property {number} lineDashOffset LineDashOffset.\r\n * @property {CanvasLineJoin} lineJoin LineJoin.\r\n * @property {number} miterLimit MiterLimit.\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Set regular shape style for vector features. The resulting shape will be\r\n * a regular polygon when `radius` is provided, or a star when `radius1` and\r\n * `radius2` are provided.\r\n * @api\r\n */\r\nclass RegularShape extends ImageStyle {\r\n  /**\r\n   * @param {Options} options Options.\r\n   */\r\n  constructor(options) {\r\n    /**\r\n     * @type {boolean}\r\n     */\r\n    const rotateWithView =\r\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\r\n\r\n    super({\r\n      opacity: 1,\r\n      rotateWithView: rotateWithView,\r\n      rotation: options.rotation !== undefined ? options.rotation : 0,\r\n      scale: options.scale !== undefined ? options.scale : 1,\r\n      displacement:\r\n        options.displacement !== undefined ? options.displacement : [0, 0],\r\n      declutterMode: options.declutterMode,\r\n    });\r\n\r\n    /**\r\n     * @private\r\n     * @type {Object<number, HTMLCanvasElement>}\r\n     */\r\n    this.canvas_ = undefined;\r\n\r\n    /**\r\n     * @private\r\n     * @type {HTMLCanvasElement}\r\n     */\r\n    this.hitDetectionCanvas_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"./Fill.js\").default}\r\n     */\r\n    this.fill_ = options.fill !== undefined ? options.fill : null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<number>}\r\n     */\r\n    this.origin_ = [0, 0];\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.points_ = options.points;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {number}\r\n     */\r\n    this.radius_ =\r\n      options.radius !== undefined ? options.radius : options.radius1;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.radius2_ = options.radius2;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"./Stroke.js\").default}\r\n     */\r\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../size.js\").Size}\r\n     */\r\n    this.size_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {RenderOptions}\r\n     */\r\n    this.renderOptions_ = null;\r\n\r\n    this.render();\r\n  }\r\n\r\n  /**\r\n   * Clones the style.\r\n   * @return {RegularShape} The cloned style.\r\n   * @api\r\n   */\r\n  clone() {\r\n    const scale = this.getScale();\r\n    const style = new RegularShape({\r\n      fill: this.getFill() ? this.getFill().clone() : undefined,\r\n      points: this.getPoints(),\r\n      radius: this.getRadius(),\r\n      radius2: this.getRadius2(),\r\n      angle: this.getAngle(),\r\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\r\n      rotation: this.getRotation(),\r\n      rotateWithView: this.getRotateWithView(),\r\n      scale: Array.isArray(scale) ? scale.slice() : scale,\r\n      displacement: this.getDisplacement().slice(),\r\n      declutterMode: this.getDeclutterMode(),\r\n    });\r\n    style.setOpacity(this.getOpacity());\r\n    return style;\r\n  }\r\n\r\n  /**\r\n   * Get the anchor point in pixels. The anchor determines the center point for the\r\n   * symbolizer.\r\n   * @return {Array<number>} Anchor.\r\n   * @api\r\n   */\r\n  getAnchor() {\r\n    const size = this.size_;\r\n    if (!size) {\r\n      return null;\r\n    }\r\n    const displacement = this.getDisplacement();\r\n    const scale = this.getScaleArray();\r\n    // anchor is scaled by renderer but displacement should not be scaled\r\n    // so divide by scale here\r\n    return [\r\n      size[0] / 2 - displacement[0] / scale[0],\r\n      size[1] / 2 + displacement[1] / scale[1],\r\n    ];\r\n  }\r\n\r\n  /**\r\n   * Get the angle used in generating the shape.\r\n   * @return {number} Shape's rotation in radians.\r\n   * @api\r\n   */\r\n  getAngle() {\r\n    return this.angle_;\r\n  }\r\n\r\n  /**\r\n   * Get the fill style for the shape.\r\n   * @return {import(\"./Fill.js\").default} Fill style.\r\n   * @api\r\n   */\r\n  getFill() {\r\n    return this.fill_;\r\n  }\r\n\r\n  /**\r\n   * Set the fill style.\r\n   * @param {import(\"./Fill.js\").default} fill Fill style.\r\n   * @api\r\n   */\r\n  setFill(fill) {\r\n    this.fill_ = fill;\r\n    this.render();\r\n  }\r\n\r\n  /**\r\n   * @return {HTMLCanvasElement} Image element.\r\n   */\r\n  getHitDetectionImage() {\r\n    if (!this.hitDetectionCanvas_) {\r\n      this.createHitDetectionCanvas_(this.renderOptions_);\r\n    }\r\n    return this.hitDetectionCanvas_;\r\n  }\r\n\r\n  /**\r\n   * Get the image icon.\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   * @return {HTMLCanvasElement} Image or Canvas element.\r\n   * @api\r\n   */\r\n  getImage(pixelRatio) {\r\n    let image = this.canvas_[pixelRatio];\r\n    if (!image) {\r\n      const renderOptions = this.renderOptions_;\r\n      const context = createCanvasContext2D(\r\n        renderOptions.size * pixelRatio,\r\n        renderOptions.size * pixelRatio\r\n      );\r\n      this.draw_(renderOptions, context, pixelRatio);\r\n\r\n      image = context.canvas;\r\n      this.canvas_[pixelRatio] = image;\r\n    }\r\n    return image;\r\n  }\r\n\r\n  /**\r\n   * Get the image pixel ratio.\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   * @return {number} Pixel ratio.\r\n   */\r\n  getPixelRatio(pixelRatio) {\r\n    return pixelRatio;\r\n  }\r\n\r\n  /**\r\n   * @return {import(\"../size.js\").Size} Image size.\r\n   */\r\n  getImageSize() {\r\n    return this.size_;\r\n  }\r\n\r\n  /**\r\n   * @return {import(\"../ImageState.js\").default} Image state.\r\n   */\r\n  getImageState() {\r\n    return ImageState.LOADED;\r\n  }\r\n\r\n  /**\r\n   * Get the origin of the symbolizer.\r\n   * @return {Array<number>} Origin.\r\n   * @api\r\n   */\r\n  getOrigin() {\r\n    return this.origin_;\r\n  }\r\n\r\n  /**\r\n   * Get the number of points for generating the shape.\r\n   * @return {number} Number of points for stars and regular polygons.\r\n   * @api\r\n   */\r\n  getPoints() {\r\n    return this.points_;\r\n  }\r\n\r\n  /**\r\n   * Get the (primary) radius for the shape.\r\n   * @return {number} Radius.\r\n   * @api\r\n   */\r\n  getRadius() {\r\n    return this.radius_;\r\n  }\r\n\r\n  /**\r\n   * Get the secondary radius for the shape.\r\n   * @return {number|undefined} Radius2.\r\n   * @api\r\n   */\r\n  getRadius2() {\r\n    return this.radius2_;\r\n  }\r\n\r\n  /**\r\n   * Get the size of the symbolizer (in pixels).\r\n   * @return {import(\"../size.js\").Size} Size.\r\n   * @api\r\n   */\r\n  getSize() {\r\n    return this.size_;\r\n  }\r\n\r\n  /**\r\n   * Get the stroke style for the shape.\r\n   * @return {import(\"./Stroke.js\").default} Stroke style.\r\n   * @api\r\n   */\r\n  getStroke() {\r\n    return this.stroke_;\r\n  }\r\n\r\n  /**\r\n   * Set the stroke style.\r\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\r\n   * @api\r\n   */\r\n  setStroke(stroke) {\r\n    this.stroke_ = stroke;\r\n    this.render();\r\n  }\r\n\r\n  /**\r\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\r\n   */\r\n  listenImageChange(listener) {}\r\n\r\n  /**\r\n   * Load not yet loaded URI.\r\n   */\r\n  load() {}\r\n\r\n  /**\r\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\r\n   */\r\n  unlistenImageChange(listener) {}\r\n\r\n  /**\r\n   * Calculate additional canvas size needed for the miter.\r\n   * @param {string} lineJoin Line join\r\n   * @param {number} strokeWidth Stroke width\r\n   * @param {number} miterLimit Miter limit\r\n   * @return {number} Additional canvas size needed\r\n   * @private\r\n   */\r\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\r\n    if (\r\n      strokeWidth === 0 ||\r\n      this.points_ === Infinity ||\r\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\r\n    ) {\r\n      return strokeWidth;\r\n    }\r\n    // m  | ^\r\n    // i  | |\\                  .\r\n    // t >|  #\\\r\n    // e  | |\\ \\              .\r\n    // r      \\s\\\r\n    //      |  \\t\\          .                 .\r\n    //          \\r\\                      .   .\r\n    //      |    \\o\\      .          .  . . .\r\n    //          e \\k\\            .  .    . .\r\n    //      |      \\e\\  .    .  .       . .\r\n    //       d      \\ \\  .  .          . .\r\n    //      | _ _a_ _\\#  .            . .\r\n    //   r1          / `             . .\r\n    //      |                       . .\r\n    //       b     /               . .\r\n    //      |                     . .\r\n    //           / r2            . .\r\n    //      |                        .   .\r\n    //         /                           .   .\r\n    //      |α                                   .   .\r\n    //       /                                         .   .\r\n    //      ° center\r\n    let r1 = this.radius_;\r\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\r\n    if (r1 < r2) {\r\n      const tmp = r1;\r\n      r1 = r2;\r\n      r2 = tmp;\r\n    }\r\n    const points =\r\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\r\n    const alpha = (2 * Math.PI) / points;\r\n    const a = r2 * Math.sin(alpha);\r\n    const b = Math.sqrt(r2 * r2 - a * a);\r\n    const d = r1 - b;\r\n    const e = Math.sqrt(a * a + d * d);\r\n    const miterRatio = e / a;\r\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\r\n      return miterRatio * strokeWidth;\r\n    }\r\n    // Calculate the distnce from center to the stroke corner where\r\n    // it was cut short because of the miter limit.\r\n    //              l\r\n    //        ----+---- <= distance from center to here is maxr\r\n    //       /####|k ##\\\r\n    //      /#####^#####\\\r\n    //     /#### /+\\# s #\\\r\n    //    /### h/+++\\# t #\\\r\n    //   /### t/+++++\\# r #\\\r\n    //  /### a/+++++++\\# o #\\\r\n    // /### p/++ fill +\\# k #\\\r\n    ///#### /+++++^+++++\\# e #\\\r\n    //#####/+++++/+\\+++++\\#####\\\r\n    const k = strokeWidth / 2 / miterRatio;\r\n    const l = (strokeWidth / 2) * (d / e);\r\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\r\n    const bevelAdd = maxr - r1;\r\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\r\n      return bevelAdd * 2;\r\n    }\r\n    // If outer miter is over the miter limit the inner miter may reach through the\r\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\r\n    const aa = r1 * Math.sin(alpha);\r\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\r\n    const dd = r2 - bb;\r\n    const ee = Math.sqrt(aa * aa + dd * dd);\r\n    const innerMiterRatio = ee / aa;\r\n    if (innerMiterRatio <= miterLimit) {\r\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\r\n      return 2 * Math.max(bevelAdd, innerLength);\r\n    }\r\n    return bevelAdd * 2;\r\n  }\r\n\r\n  /**\r\n   * @return {RenderOptions}  The render options\r\n   * @protected\r\n   */\r\n  createRenderOptions() {\r\n    let lineJoin = defaultLineJoin;\r\n    let miterLimit = 0;\r\n    let lineDash = null;\r\n    let lineDashOffset = 0;\r\n    let strokeStyle;\r\n    let strokeWidth = 0;\r\n\r\n    if (this.stroke_) {\r\n      strokeStyle = this.stroke_.getColor();\r\n      if (strokeStyle === null) {\r\n        strokeStyle = defaultStrokeStyle;\r\n      }\r\n      strokeStyle = asColorLike(strokeStyle);\r\n      strokeWidth = this.stroke_.getWidth();\r\n      if (strokeWidth === undefined) {\r\n        strokeWidth = defaultLineWidth;\r\n      }\r\n      lineDash = this.stroke_.getLineDash();\r\n      lineDashOffset = this.stroke_.getLineDashOffset();\r\n      lineJoin = this.stroke_.getLineJoin();\r\n      if (lineJoin === undefined) {\r\n        lineJoin = defaultLineJoin;\r\n      }\r\n      miterLimit = this.stroke_.getMiterLimit();\r\n      if (miterLimit === undefined) {\r\n        miterLimit = defaultMiterLimit;\r\n      }\r\n    }\r\n\r\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\r\n    const maxRadius = Math.max(this.radius_, this.radius2_ || 0);\r\n    const size = Math.ceil(2 * maxRadius + add);\r\n\r\n    return {\r\n      strokeStyle: strokeStyle,\r\n      strokeWidth: strokeWidth,\r\n      size: size,\r\n      lineDash: lineDash,\r\n      lineDashOffset: lineDashOffset,\r\n      lineJoin: lineJoin,\r\n      miterLimit: miterLimit,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * @protected\r\n   */\r\n  render() {\r\n    this.renderOptions_ = this.createRenderOptions();\r\n    const size = this.renderOptions_.size;\r\n    this.canvas_ = {};\r\n    this.size_ = [size, size];\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {RenderOptions} renderOptions Render options.\r\n   * @param {CanvasRenderingContext2D} context The rendering context.\r\n   * @param {number} pixelRatio The pixel ratio.\r\n   */\r\n  draw_(renderOptions, context, pixelRatio) {\r\n    context.scale(pixelRatio, pixelRatio);\r\n    // set origin to canvas center\r\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\r\n\r\n    this.createPath_(context);\r\n\r\n    if (this.fill_) {\r\n      let color = this.fill_.getColor();\r\n      if (color === null) {\r\n        color = defaultFillStyle;\r\n      }\r\n      context.fillStyle = asColorLike(color);\r\n      context.fill();\r\n    }\r\n    if (this.stroke_) {\r\n      context.strokeStyle = renderOptions.strokeStyle;\r\n      context.lineWidth = renderOptions.strokeWidth;\r\n      if (renderOptions.lineDash) {\r\n        context.setLineDash(renderOptions.lineDash);\r\n        context.lineDashOffset = renderOptions.lineDashOffset;\r\n      }\r\n      context.lineJoin = renderOptions.lineJoin;\r\n      context.miterLimit = renderOptions.miterLimit;\r\n      context.stroke();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {RenderOptions} renderOptions Render options.\r\n   */\r\n  createHitDetectionCanvas_(renderOptions) {\r\n    if (this.fill_) {\r\n      let color = this.fill_.getColor();\r\n\r\n      // determine if fill is transparent (or pattern or gradient)\r\n      let opacity = 0;\r\n      if (typeof color === 'string') {\r\n        color = asArray(color);\r\n      }\r\n      if (color === null) {\r\n        opacity = 1;\r\n      } else if (Array.isArray(color)) {\r\n        opacity = color.length === 4 ? color[3] : 1;\r\n      }\r\n      if (opacity === 0) {\r\n        // if a transparent fill style is set, create an extra hit-detection image\r\n        // with a default fill style\r\n        const context = createCanvasContext2D(\r\n          renderOptions.size,\r\n          renderOptions.size\r\n        );\r\n        this.hitDetectionCanvas_ = context.canvas;\r\n\r\n        this.drawHitDetectionCanvas_(renderOptions, context);\r\n      }\r\n    }\r\n    if (!this.hitDetectionCanvas_) {\r\n      this.hitDetectionCanvas_ = this.getImage(1);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {CanvasRenderingContext2D} context The context to draw in.\r\n   */\r\n  createPath_(context) {\r\n    let points = this.points_;\r\n    const radius = this.radius_;\r\n    if (points === Infinity) {\r\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\r\n    } else {\r\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\r\n      if (this.radius2_ !== undefined) {\r\n        points *= 2;\r\n      }\r\n      const startAngle = this.angle_ - Math.PI / 2;\r\n      const step = (2 * Math.PI) / points;\r\n      for (let i = 0; i < points; i++) {\r\n        const angle0 = startAngle + i * step;\r\n        const radiusC = i % 2 === 0 ? radius : radius2;\r\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\r\n      }\r\n      context.closePath();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {RenderOptions} renderOptions Render options.\r\n   * @param {CanvasRenderingContext2D} context The context.\r\n   */\r\n  drawHitDetectionCanvas_(renderOptions, context) {\r\n    // set origin to canvas center\r\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\r\n\r\n    this.createPath_(context);\r\n\r\n    context.fillStyle = defaultFillStyle;\r\n    context.fill();\r\n    if (this.stroke_) {\r\n      context.strokeStyle = renderOptions.strokeStyle;\r\n      context.lineWidth = renderOptions.strokeWidth;\r\n      if (renderOptions.lineDash) {\r\n        context.setLineDash(renderOptions.lineDash);\r\n        context.lineDashOffset = renderOptions.lineDashOffset;\r\n      }\r\n      context.lineJoin = renderOptions.lineJoin;\r\n      context.miterLimit = renderOptions.miterLimit;\r\n      context.stroke();\r\n    }\r\n  }\r\n}\r\n\r\nexport default RegularShape;\r\n","/**\r\n * @module ol/style/Circle\r\n */\r\n\r\nimport RegularShape from './RegularShape.js';\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\r\n * @property {number} radius Circle radius.\r\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\r\n * @property {Array<number>} [displacement=[0,0]] displacement\r\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\r\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\r\n * @property {number} [rotation=0] Rotation in radians\r\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\r\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\r\n * (meaningful only when used in conjunction with a two dimensional scale).\r\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Set circle style for vector features.\r\n * @api\r\n */\r\nclass CircleStyle extends RegularShape {\r\n  /**\r\n   * @param {Options} [options] Options.\r\n   */\r\n  constructor(options) {\r\n    options = options ? options : {radius: 5};\r\n\r\n    super({\r\n      points: Infinity,\r\n      fill: options.fill,\r\n      radius: options.radius,\r\n      stroke: options.stroke,\r\n      scale: options.scale !== undefined ? options.scale : 1,\r\n      rotation: options.rotation !== undefined ? options.rotation : 0,\r\n      rotateWithView:\r\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\r\n      displacement:\r\n        options.displacement !== undefined ? options.displacement : [0, 0],\r\n      declutterMode: options.declutterMode,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Clones the style.\r\n   * @return {CircleStyle} The cloned style.\r\n   * @api\r\n   */\r\n  clone() {\r\n    const scale = this.getScale();\r\n    const style = new CircleStyle({\r\n      fill: this.getFill() ? this.getFill().clone() : undefined,\r\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\r\n      radius: this.getRadius(),\r\n      scale: Array.isArray(scale) ? scale.slice() : scale,\r\n      rotation: this.getRotation(),\r\n      rotateWithView: this.getRotateWithView(),\r\n      displacement: this.getDisplacement().slice(),\r\n      declutterMode: this.getDeclutterMode(),\r\n    });\r\n    style.setOpacity(this.getOpacity());\r\n    return style;\r\n  }\r\n\r\n  /**\r\n   * Set the circle radius.\r\n   *\r\n   * @param {number} radius Circle radius.\r\n   * @api\r\n   */\r\n  setRadius(radius) {\r\n    this.radius_ = radius;\r\n    this.render();\r\n  }\r\n}\r\n\r\nexport default CircleStyle;\r\n","/**\r\n * @module ol/style/Fill\r\n */\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} [color=null] A color, gradient or pattern.\r\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\r\n * Default null; if null, the Canvas/renderer default black will be used.\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Set fill style for vector features.\r\n * @api\r\n */\r\nclass Fill {\r\n  /**\r\n   * @param {Options} [options] Options.\r\n   */\r\n  constructor(options) {\r\n    options = options || {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null}\r\n     */\r\n    this.color_ = options.color !== undefined ? options.color : null;\r\n  }\r\n\r\n  /**\r\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\r\n   * @return {Fill} The cloned style.\r\n   * @api\r\n   */\r\n  clone() {\r\n    const color = this.getColor();\r\n    return new Fill({\r\n      color: Array.isArray(color) ? color.slice() : color || undefined,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get the fill color.\r\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} Color.\r\n   * @api\r\n   */\r\n  getColor() {\r\n    return this.color_;\r\n  }\r\n\r\n  /**\r\n   * Set the color.\r\n   *\r\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} color Color.\r\n   * @api\r\n   */\r\n  setColor(color) {\r\n    this.color_ = color;\r\n  }\r\n}\r\n\r\nexport default Fill;\r\n","/**\r\n * @module ol/style/Stroke\r\n */\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\r\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\r\n * Default null; if null, the Canvas/renderer default black will be used.\r\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\r\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\r\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\r\n * @property {number} [lineDashOffset=0] Line dash offset.\r\n * @property {number} [miterLimit=10] Miter limit.\r\n * @property {number} [width] Width.\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Set stroke style for vector features.\r\n * Note that the defaults given are the Canvas defaults, which will be used if\r\n * option is not defined. The `get` functions return whatever was entered in\r\n * the options; they will not return the default.\r\n * @api\r\n */\r\nclass Stroke {\r\n  /**\r\n   * @param {Options} [options] Options.\r\n   */\r\n  constructor(options) {\r\n    options = options || {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\r\n     */\r\n    this.color_ = options.color !== undefined ? options.color : null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {CanvasLineCap|undefined}\r\n     */\r\n    this.lineCap_ = options.lineCap;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<number>|null}\r\n     */\r\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.lineDashOffset_ = options.lineDashOffset;\r\n\r\n    /**\r\n     * @private\r\n     * @type {CanvasLineJoin|undefined}\r\n     */\r\n    this.lineJoin_ = options.lineJoin;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.miterLimit_ = options.miterLimit;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.width_ = options.width;\r\n  }\r\n\r\n  /**\r\n   * Clones the style.\r\n   * @return {Stroke} The cloned style.\r\n   * @api\r\n   */\r\n  clone() {\r\n    const color = this.getColor();\r\n    return new Stroke({\r\n      color: Array.isArray(color) ? color.slice() : color || undefined,\r\n      lineCap: this.getLineCap(),\r\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\r\n      lineDashOffset: this.getLineDashOffset(),\r\n      lineJoin: this.getLineJoin(),\r\n      miterLimit: this.getMiterLimit(),\r\n      width: this.getWidth(),\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get the stroke color.\r\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\r\n   * @api\r\n   */\r\n  getColor() {\r\n    return this.color_;\r\n  }\r\n\r\n  /**\r\n   * Get the line cap type for the stroke.\r\n   * @return {CanvasLineCap|undefined} Line cap.\r\n   * @api\r\n   */\r\n  getLineCap() {\r\n    return this.lineCap_;\r\n  }\r\n\r\n  /**\r\n   * Get the line dash style for the stroke.\r\n   * @return {Array<number>|null} Line dash.\r\n   * @api\r\n   */\r\n  getLineDash() {\r\n    return this.lineDash_;\r\n  }\r\n\r\n  /**\r\n   * Get the line dash offset for the stroke.\r\n   * @return {number|undefined} Line dash offset.\r\n   * @api\r\n   */\r\n  getLineDashOffset() {\r\n    return this.lineDashOffset_;\r\n  }\r\n\r\n  /**\r\n   * Get the line join type for the stroke.\r\n   * @return {CanvasLineJoin|undefined} Line join.\r\n   * @api\r\n   */\r\n  getLineJoin() {\r\n    return this.lineJoin_;\r\n  }\r\n\r\n  /**\r\n   * Get the miter limit for the stroke.\r\n   * @return {number|undefined} Miter limit.\r\n   * @api\r\n   */\r\n  getMiterLimit() {\r\n    return this.miterLimit_;\r\n  }\r\n\r\n  /**\r\n   * Get the stroke width.\r\n   * @return {number|undefined} Width.\r\n   * @api\r\n   */\r\n  getWidth() {\r\n    return this.width_;\r\n  }\r\n\r\n  /**\r\n   * Set the color.\r\n   *\r\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\r\n   * @api\r\n   */\r\n  setColor(color) {\r\n    this.color_ = color;\r\n  }\r\n\r\n  /**\r\n   * Set the line cap.\r\n   *\r\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\r\n   * @api\r\n   */\r\n  setLineCap(lineCap) {\r\n    this.lineCap_ = lineCap;\r\n  }\r\n\r\n  /**\r\n   * Set the line dash.\r\n   *\r\n   * @param {Array<number>|null} lineDash Line dash.\r\n   * @api\r\n   */\r\n  setLineDash(lineDash) {\r\n    this.lineDash_ = lineDash;\r\n  }\r\n\r\n  /**\r\n   * Set the line dash offset.\r\n   *\r\n   * @param {number|undefined} lineDashOffset Line dash offset.\r\n   * @api\r\n   */\r\n  setLineDashOffset(lineDashOffset) {\r\n    this.lineDashOffset_ = lineDashOffset;\r\n  }\r\n\r\n  /**\r\n   * Set the line join.\r\n   *\r\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\r\n   * @api\r\n   */\r\n  setLineJoin(lineJoin) {\r\n    this.lineJoin_ = lineJoin;\r\n  }\r\n\r\n  /**\r\n   * Set the miter limit.\r\n   *\r\n   * @param {number|undefined} miterLimit Miter limit.\r\n   * @api\r\n   */\r\n  setMiterLimit(miterLimit) {\r\n    this.miterLimit_ = miterLimit;\r\n  }\r\n\r\n  /**\r\n   * Set the width.\r\n   *\r\n   * @param {number|undefined} width Width.\r\n   * @api\r\n   */\r\n  setWidth(width) {\r\n    this.width_ = width;\r\n  }\r\n}\r\n\r\nexport default Stroke;\r\n","/**\r\n * @module ol/style/Style\r\n */\r\n\r\nimport CircleStyle from './Circle.js';\r\nimport Fill from './Fill.js';\r\nimport Stroke from './Stroke.js';\r\nimport {assert} from '../asserts.js';\r\n\r\n/**\r\n * A function that takes an {@link module:ol/Feature~Feature} and a `{number}`\r\n * representing the view's resolution. The function should return a\r\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\r\n * vector layer can be styled. If the function returns `undefined`, the\r\n * feature will not be rendered.\r\n *\r\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\r\n */\r\n\r\n/**\r\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\r\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\r\n */\r\n\r\n/**\r\n * A function that takes an {@link module:ol/Feature~Feature} as argument and returns an\r\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\r\n *\r\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\r\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\r\n */\r\n\r\n/**\r\n * Custom renderer function. Takes two arguments:\r\n *\r\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\r\n * 2. The {@link module:ol/render~State} of the layer renderer.\r\n *\r\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State): void} RenderFunction\r\n */\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\r\n * or function returning a geometry to render for this style.\r\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\r\n * @property {import(\"./Image.js\").default} [image] Image style.\r\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\r\n * ignored, and the provided function will be called with each render frame for each geometry.\r\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\r\n * in hit detection rendering.\r\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\r\n * @property {import(\"./Text.js\").default} [text] Text style.\r\n * @property {number} [zIndex] Z index.\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Container for vector feature rendering styles. Any changes made to the style\r\n * or its children through `set*()` methods will not take effect until the\r\n * feature or layer that uses the style is re-rendered.\r\n *\r\n * ## Feature styles\r\n *\r\n * If no style is defined, the following default style is used:\r\n * ```js\r\n *  import {Circle, Fill, Stroke, Style} from 'ol/style';\r\n *\r\n *  const fill = new Fill({\r\n *    color: 'rgba(255,255,255,0.4)',\r\n *  });\r\n *  const stroke = new Stroke({\r\n *    color: '#3399CC',\r\n *    width: 1.25,\r\n *  });\r\n *  const styles = [\r\n *    new Style({\r\n *      image: new Circle({\r\n *        fill: fill,\r\n *        stroke: stroke,\r\n *        radius: 5,\r\n *      }),\r\n *      fill: fill,\r\n *      stroke: stroke,\r\n *    }),\r\n *  ];\r\n * ```\r\n *\r\n * A separate editing style has the following defaults:\r\n * ```js\r\n *  import {Circle, Fill, Stroke, Style} from 'ol/style';\r\n *\r\n *  const styles = {};\r\n *  const white = [255, 255, 255, 1];\r\n *  const blue = [0, 153, 255, 1];\r\n *  const width = 3;\r\n *  styles['Polygon'] = [\r\n *    new Style({\r\n *      fill: new Fill({\r\n *        color: [255, 255, 255, 0.5],\r\n *      }),\r\n *    }),\r\n *  ];\r\n *  styles['MultiPolygon'] =\r\n *      styles['Polygon'];\r\n *  styles['LineString'] = [\r\n *    new Style({\r\n *      stroke: new Stroke({\r\n *        color: white,\r\n *        width: width + 2,\r\n *      }),\r\n *    }),\r\n *    new Style({\r\n *      stroke: new Stroke({\r\n *        color: blue,\r\n *        width: width,\r\n *      }),\r\n *    }),\r\n *  ];\r\n *  styles['MultiLineString'] = styles['LineString'];\r\n *\r\n *  styles['Circle'] = styles['Polygon'].concat(\r\n *    styles['LineString']\r\n *  );\r\n *\r\n *  styles['Point'] = [\r\n *    new Style({\r\n *      image: new Circle({\r\n *        radius: width * 2,\r\n *        fill: new Fill({\r\n *          color: blue,\r\n *        }),\r\n *        stroke: new Stroke({\r\n *          color: white,\r\n *          width: width / 2,\r\n *        }),\r\n *      }),\r\n *      zIndex: Infinity,\r\n *    }),\r\n *  ];\r\n *  styles['MultiPoint'] =\r\n *      styles['Point'];\r\n *  styles['GeometryCollection'] =\r\n *      styles['Polygon'].concat(\r\n *          styles['LineString'],\r\n *          styles['Point']\r\n *      );\r\n * ```\r\n *\r\n * @api\r\n */\r\nclass Style {\r\n  /**\r\n   * @param {Options} [options] Style options.\r\n   */\r\n  constructor(options) {\r\n    options = options || {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\r\n     */\r\n    this.geometry_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {!GeometryFunction}\r\n     */\r\n    this.geometryFunction_ = defaultGeometryFunction;\r\n\r\n    if (options.geometry !== undefined) {\r\n      this.setGeometry(options.geometry);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"./Fill.js\").default}\r\n     */\r\n    this.fill_ = options.fill !== undefined ? options.fill : null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"./Image.js\").default}\r\n     */\r\n    this.image_ = options.image !== undefined ? options.image : null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {RenderFunction|null}\r\n     */\r\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {RenderFunction|null}\r\n     */\r\n    this.hitDetectionRenderer_ =\r\n      options.hitDetectionRenderer !== undefined\r\n        ? options.hitDetectionRenderer\r\n        : null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"./Stroke.js\").default}\r\n     */\r\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"./Text.js\").default}\r\n     */\r\n    this.text_ = options.text !== undefined ? options.text : null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.zIndex_ = options.zIndex;\r\n  }\r\n\r\n  /**\r\n   * Clones the style.\r\n   * @return {Style} The cloned style.\r\n   * @api\r\n   */\r\n  clone() {\r\n    let geometry = this.getGeometry();\r\n    if (geometry && typeof geometry === 'object') {\r\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\r\n        geometry\r\n      ).clone();\r\n    }\r\n    return new Style({\r\n      geometry: geometry,\r\n      fill: this.getFill() ? this.getFill().clone() : undefined,\r\n      image: this.getImage() ? this.getImage().clone() : undefined,\r\n      renderer: this.getRenderer(),\r\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\r\n      text: this.getText() ? this.getText().clone() : undefined,\r\n      zIndex: this.getZIndex(),\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get the custom renderer function that was configured with\r\n   * {@link #setRenderer} or the `renderer` constructor option.\r\n   * @return {RenderFunction|null} Custom renderer function.\r\n   * @api\r\n   */\r\n  getRenderer() {\r\n    return this.renderer_;\r\n  }\r\n\r\n  /**\r\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\r\n   * and `image` options of the style will be ignored.\r\n   * @param {RenderFunction|null} renderer Custom renderer function.\r\n   * @api\r\n   */\r\n  setRenderer(renderer) {\r\n    this.renderer_ = renderer;\r\n  }\r\n\r\n  /**\r\n   * Sets a custom renderer function for this style used\r\n   * in hit detection.\r\n   * @param {RenderFunction|null} renderer Custom renderer function.\r\n   * @api\r\n   */\r\n  setHitDetectionRenderer(renderer) {\r\n    this.hitDetectionRenderer_ = renderer;\r\n  }\r\n\r\n  /**\r\n   * Get the custom renderer function that was configured with\r\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\r\n   * @return {RenderFunction|null} Custom renderer function.\r\n   * @api\r\n   */\r\n  getHitDetectionRenderer() {\r\n    return this.hitDetectionRenderer_;\r\n  }\r\n\r\n  /**\r\n   * Get the geometry to be rendered.\r\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\r\n   * Feature property or geometry or function that returns the geometry that will\r\n   * be rendered with this style.\r\n   * @api\r\n   */\r\n  getGeometry() {\r\n    return this.geometry_;\r\n  }\r\n\r\n  /**\r\n   * Get the function used to generate a geometry for rendering.\r\n   * @return {!GeometryFunction} Function that is called with a feature\r\n   * and returns the geometry to render instead of the feature's geometry.\r\n   * @api\r\n   */\r\n  getGeometryFunction() {\r\n    return this.geometryFunction_;\r\n  }\r\n\r\n  /**\r\n   * Get the fill style.\r\n   * @return {import(\"./Fill.js\").default} Fill style.\r\n   * @api\r\n   */\r\n  getFill() {\r\n    return this.fill_;\r\n  }\r\n\r\n  /**\r\n   * Set the fill style.\r\n   * @param {import(\"./Fill.js\").default} fill Fill style.\r\n   * @api\r\n   */\r\n  setFill(fill) {\r\n    this.fill_ = fill;\r\n  }\r\n\r\n  /**\r\n   * Get the image style.\r\n   * @return {import(\"./Image.js\").default} Image style.\r\n   * @api\r\n   */\r\n  getImage() {\r\n    return this.image_;\r\n  }\r\n\r\n  /**\r\n   * Set the image style.\r\n   * @param {import(\"./Image.js\").default} image Image style.\r\n   * @api\r\n   */\r\n  setImage(image) {\r\n    this.image_ = image;\r\n  }\r\n\r\n  /**\r\n   * Get the stroke style.\r\n   * @return {import(\"./Stroke.js\").default} Stroke style.\r\n   * @api\r\n   */\r\n  getStroke() {\r\n    return this.stroke_;\r\n  }\r\n\r\n  /**\r\n   * Set the stroke style.\r\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\r\n   * @api\r\n   */\r\n  setStroke(stroke) {\r\n    this.stroke_ = stroke;\r\n  }\r\n\r\n  /**\r\n   * Get the text style.\r\n   * @return {import(\"./Text.js\").default} Text style.\r\n   * @api\r\n   */\r\n  getText() {\r\n    return this.text_;\r\n  }\r\n\r\n  /**\r\n   * Set the text style.\r\n   * @param {import(\"./Text.js\").default} text Text style.\r\n   * @api\r\n   */\r\n  setText(text) {\r\n    this.text_ = text;\r\n  }\r\n\r\n  /**\r\n   * Get the z-index for the style.\r\n   * @return {number|undefined} ZIndex.\r\n   * @api\r\n   */\r\n  getZIndex() {\r\n    return this.zIndex_;\r\n  }\r\n\r\n  /**\r\n   * Set a geometry that is rendered instead of the feature's geometry.\r\n   *\r\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\r\n   *     Feature property or geometry or function returning a geometry to render\r\n   *     for this style.\r\n   * @api\r\n   */\r\n  setGeometry(geometry) {\r\n    if (typeof geometry === 'function') {\r\n      this.geometryFunction_ = geometry;\r\n    } else if (typeof geometry === 'string') {\r\n      this.geometryFunction_ = function (feature) {\r\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\r\n          feature.get(geometry)\r\n        );\r\n      };\r\n    } else if (!geometry) {\r\n      this.geometryFunction_ = defaultGeometryFunction;\r\n    } else if (geometry !== undefined) {\r\n      this.geometryFunction_ = function () {\r\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\r\n      };\r\n    }\r\n    this.geometry_ = geometry;\r\n  }\r\n\r\n  /**\r\n   * Set the z-index.\r\n   *\r\n   * @param {number|undefined} zIndex ZIndex.\r\n   * @api\r\n   */\r\n  setZIndex(zIndex) {\r\n    this.zIndex_ = zIndex;\r\n  }\r\n}\r\n\r\n/**\r\n * Convert the provided object into a style function.  Functions passed through\r\n * unchanged.  Arrays of Style or single style objects wrapped in a\r\n * new style function.\r\n * @param {StyleFunction|Array<Style>|Style} obj\r\n *     A style function, a single style, or an array of styles.\r\n * @return {StyleFunction} A style function.\r\n */\r\nexport function toFunction(obj) {\r\n  let styleFunction;\r\n\r\n  if (typeof obj === 'function') {\r\n    styleFunction = obj;\r\n  } else {\r\n    /**\r\n     * @type {Array<Style>}\r\n     */\r\n    let styles;\r\n    if (Array.isArray(obj)) {\r\n      styles = obj;\r\n    } else {\r\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `Style` or an array of `Style`\r\n      const style = /** @type {Style} */ (obj);\r\n      styles = [style];\r\n    }\r\n    styleFunction = function () {\r\n      return styles;\r\n    };\r\n  }\r\n  return styleFunction;\r\n}\r\n\r\n/**\r\n * @type {Array<Style>|null}\r\n */\r\nlet defaultStyles = null;\r\n\r\n/**\r\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n * @param {number} resolution Resolution.\r\n * @return {Array<Style>} Style.\r\n */\r\nexport function createDefaultStyle(feature, resolution) {\r\n  // We don't use an immediately-invoked function\r\n  // and a closure so we don't get an error at script evaluation time in\r\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\r\n  // canvas.getContext('2d') at construction time, which will cause an.error\r\n  // in such browsers.)\r\n  if (!defaultStyles) {\r\n    const fill = new Fill({\r\n      color: 'rgba(255,255,255,0.4)',\r\n    });\r\n    const stroke = new Stroke({\r\n      color: '#3399CC',\r\n      width: 1.25,\r\n    });\r\n    defaultStyles = [\r\n      new Style({\r\n        image: new CircleStyle({\r\n          fill: fill,\r\n          stroke: stroke,\r\n          radius: 5,\r\n        }),\r\n        fill: fill,\r\n        stroke: stroke,\r\n      }),\r\n    ];\r\n  }\r\n  return defaultStyles;\r\n}\r\n\r\n/**\r\n * Default styles for editing features.\r\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\r\n */\r\nexport function createEditingStyle() {\r\n  /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\r\n  const styles = {};\r\n  const white = [255, 255, 255, 1];\r\n  const blue = [0, 153, 255, 1];\r\n  const width = 3;\r\n  styles['Polygon'] = [\r\n    new Style({\r\n      fill: new Fill({\r\n        color: [255, 255, 255, 0.5],\r\n      }),\r\n    }),\r\n  ];\r\n  styles['MultiPolygon'] = styles['Polygon'];\r\n\r\n  styles['LineString'] = [\r\n    new Style({\r\n      stroke: new Stroke({\r\n        color: white,\r\n        width: width + 2,\r\n      }),\r\n    }),\r\n    new Style({\r\n      stroke: new Stroke({\r\n        color: blue,\r\n        width: width,\r\n      }),\r\n    }),\r\n  ];\r\n  styles['MultiLineString'] = styles['LineString'];\r\n\r\n  styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\r\n\r\n  styles['Point'] = [\r\n    new Style({\r\n      image: new CircleStyle({\r\n        radius: width * 2,\r\n        fill: new Fill({\r\n          color: blue,\r\n        }),\r\n        stroke: new Stroke({\r\n          color: white,\r\n          width: width / 2,\r\n        }),\r\n      }),\r\n      zIndex: Infinity,\r\n    }),\r\n  ];\r\n  styles['MultiPoint'] = styles['Point'];\r\n\r\n  styles['GeometryCollection'] = styles['Polygon'].concat(\r\n    styles['LineString'],\r\n    styles['Point']\r\n  );\r\n\r\n  return styles;\r\n}\r\n\r\n/**\r\n * Function that is called with a feature and returns its default geometry.\r\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\r\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\r\n */\r\nfunction defaultGeometryFunction(feature) {\r\n  return feature.getGeometry();\r\n}\r\n\r\nexport default Style;\r\n","/**\r\n * @module ol/Image\r\n */\r\nimport EventType from './events/EventType.js';\r\nimport ImageBase from './ImageBase.js';\r\nimport ImageState from './ImageState.js';\r\nimport {IMAGE_DECODE} from './has.js';\r\nimport {getHeight} from './extent.js';\r\nimport {listenOnce, unlistenByKey} from './events.js';\r\n\r\n/**\r\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\r\n * `{string}` for the src as arguments. It is supposed to make it so the\r\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\r\n * content specified by the src. If not specified, the default is\r\n *\r\n *     function(image, src) {\r\n *       image.getImage().src = src;\r\n *     }\r\n *\r\n * Providing a custom `imageLoadFunction` can be useful to load images with\r\n * post requests or - in general - through XHR requests, where the src of the\r\n * image element would be set to a data URI when the content is loaded.\r\n *\r\n * @typedef {function(ImageWrapper, string): void} LoadFunction\r\n * @api\r\n */\r\n\r\nclass ImageWrapper extends ImageBase {\r\n  /**\r\n   * @param {import(\"./extent.js\").Extent} extent Extent.\r\n   * @param {number|undefined} resolution Resolution.\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   * @param {string} src Image source URI.\r\n   * @param {?string} crossOrigin Cross origin.\r\n   * @param {LoadFunction} imageLoadFunction Image load function.\r\n   */\r\n  constructor(\r\n    extent,\r\n    resolution,\r\n    pixelRatio,\r\n    src,\r\n    crossOrigin,\r\n    imageLoadFunction\r\n  ) {\r\n    super(extent, resolution, pixelRatio, ImageState.IDLE);\r\n\r\n    /**\r\n     * @private\r\n     * @type {string}\r\n     */\r\n    this.src_ = src;\r\n\r\n    /**\r\n     * @private\r\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\r\n     */\r\n    this.image_ = new Image();\r\n    if (crossOrigin !== null) {\r\n      this.image_.crossOrigin = crossOrigin;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @type {?function():void}\r\n     */\r\n    this.unlisten_ = null;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {import(\"./ImageState.js\").default}\r\n     */\r\n    this.state = ImageState.IDLE;\r\n\r\n    /**\r\n     * @private\r\n     * @type {LoadFunction}\r\n     */\r\n    this.imageLoadFunction_ = imageLoadFunction;\r\n  }\r\n\r\n  /**\r\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\r\n   * @api\r\n   */\r\n  getImage() {\r\n    return this.image_;\r\n  }\r\n\r\n  /**\r\n   * Tracks loading or read errors.\r\n   *\r\n   * @private\r\n   */\r\n  handleImageError_() {\r\n    this.state = ImageState.ERROR;\r\n    this.unlistenImage_();\r\n    this.changed();\r\n  }\r\n\r\n  /**\r\n   * Tracks successful image load.\r\n   *\r\n   * @private\r\n   */\r\n  handleImageLoad_() {\r\n    if (this.resolution === undefined) {\r\n      this.resolution = getHeight(this.extent) / this.image_.height;\r\n    }\r\n    this.state = ImageState.LOADED;\r\n    this.unlistenImage_();\r\n    this.changed();\r\n  }\r\n\r\n  /**\r\n   * Load the image or retry if loading previously failed.\r\n   * Loading is taken care of by the tile queue, and calling this method is\r\n   * only needed for preloading or for reloading in case of an error.\r\n   * @api\r\n   */\r\n  load() {\r\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\r\n      this.state = ImageState.LOADING;\r\n      this.changed();\r\n      this.imageLoadFunction_(this, this.src_);\r\n      this.unlisten_ = listenImage(\r\n        this.image_,\r\n        this.handleImageLoad_.bind(this),\r\n        this.handleImageError_.bind(this)\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\r\n   */\r\n  setImage(image) {\r\n    this.image_ = image;\r\n    this.resolution = getHeight(this.extent) / this.image_.height;\r\n  }\r\n\r\n  /**\r\n   * Discards event handlers which listen for load completion or errors.\r\n   *\r\n   * @private\r\n   */\r\n  unlistenImage_() {\r\n    if (this.unlisten_) {\r\n      this.unlisten_();\r\n      this.unlisten_ = null;\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\r\n * @param {function():any} loadHandler Load callback function.\r\n * @param {function():any} errorHandler Error callback function.\r\n * @return {function():void} Callback to stop listening.\r\n */\r\nexport function listenImage(image, loadHandler, errorHandler) {\r\n  const img = /** @type {HTMLImageElement} */ (image);\r\n  let listening = true;\r\n  let decoding = false;\r\n  let loaded = false;\r\n\r\n  const listenerKeys = [\r\n    listenOnce(img, EventType.LOAD, function () {\r\n      loaded = true;\r\n      if (!decoding) {\r\n        loadHandler();\r\n      }\r\n    }),\r\n  ];\r\n\r\n  if (img.src && IMAGE_DECODE) {\r\n    decoding = true;\r\n    img\r\n      .decode()\r\n      .then(function () {\r\n        if (listening) {\r\n          loadHandler();\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        if (listening) {\r\n          if (loaded) {\r\n            loadHandler();\r\n          } else {\r\n            errorHandler();\r\n          }\r\n        }\r\n      });\r\n  } else {\r\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\r\n  }\r\n\r\n  return function unlisten() {\r\n    listening = false;\r\n    listenerKeys.forEach(unlistenByKey);\r\n  };\r\n}\r\n\r\nexport default ImageWrapper;\r\n","/**\r\n * @module ol/style/IconImage\r\n */\r\n\r\nimport EventTarget from '../events/Target.js';\r\nimport EventType from '../events/EventType.js';\r\nimport ImageState from '../ImageState.js';\r\nimport {asString} from '../color.js';\r\nimport {createCanvasContext2D} from '../dom.js';\r\nimport {shared as iconImageCache} from './IconImageCache.js';\r\nimport {listenImage} from '../Image.js';\r\n\r\n/**\r\n * @type {CanvasRenderingContext2D}\r\n */\r\nlet taintedTestContext = null;\r\n\r\nclass IconImage extends EventTarget {\r\n  /**\r\n   * @param {HTMLImageElement|HTMLCanvasElement} image Image.\r\n   * @param {string|undefined} src Src.\r\n   * @param {import(\"../size.js\").Size} size Size.\r\n   * @param {?string} crossOrigin Cross origin.\r\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\r\n   * @param {import(\"../color.js\").Color} color Color.\r\n   */\r\n  constructor(image, src, size, crossOrigin, imageState, color) {\r\n    super();\r\n\r\n    /**\r\n     * @private\r\n     * @type {HTMLImageElement|HTMLCanvasElement}\r\n     */\r\n    this.hitDetectionImage_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {HTMLImageElement|HTMLCanvasElement}\r\n     */\r\n    this.image_ = image;\r\n\r\n    /**\r\n     * @private\r\n     * @type {string|null}\r\n     */\r\n    this.crossOrigin_ = crossOrigin;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Object<number, HTMLCanvasElement>}\r\n     */\r\n    this.canvas_ = {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../color.js\").Color}\r\n     */\r\n    this.color_ = color;\r\n\r\n    /**\r\n     * @private\r\n     * @type {?function():void}\r\n     */\r\n    this.unlisten_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../ImageState.js\").default}\r\n     */\r\n    this.imageState_ = imageState;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../size.js\").Size}\r\n     */\r\n    this.size_ = size;\r\n\r\n    /**\r\n     * @private\r\n     * @type {string|undefined}\r\n     */\r\n    this.src_ = src;\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    this.tainted_;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  initializeImage_() {\r\n    this.image_ = new Image();\r\n    if (this.crossOrigin_ !== null) {\r\n      this.image_.crossOrigin = this.crossOrigin_;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @return {boolean} The image canvas is tainted.\r\n   */\r\n  isTainted_() {\r\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\r\n      if (!taintedTestContext) {\r\n        taintedTestContext = createCanvasContext2D(1, 1);\r\n      }\r\n      taintedTestContext.drawImage(this.image_, 0, 0);\r\n      try {\r\n        taintedTestContext.getImageData(0, 0, 1, 1);\r\n        this.tainted_ = false;\r\n      } catch (e) {\r\n        taintedTestContext = null;\r\n        this.tainted_ = true;\r\n      }\r\n    }\r\n    return this.tainted_ === true;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  dispatchChangeEvent_() {\r\n    this.dispatchEvent(EventType.CHANGE);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  handleImageError_() {\r\n    this.imageState_ = ImageState.ERROR;\r\n    this.unlistenImage_();\r\n    this.dispatchChangeEvent_();\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  handleImageLoad_() {\r\n    this.imageState_ = ImageState.LOADED;\r\n    if (this.size_) {\r\n      this.image_.width = this.size_[0];\r\n      this.image_.height = this.size_[1];\r\n    } else {\r\n      this.size_ = [this.image_.width, this.image_.height];\r\n    }\r\n    this.unlistenImage_();\r\n    this.dispatchChangeEvent_();\r\n  }\r\n\r\n  /**\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\r\n   */\r\n  getImage(pixelRatio) {\r\n    if (!this.image_) {\r\n      this.initializeImage_();\r\n    }\r\n    this.replaceColor_(pixelRatio);\r\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\r\n  }\r\n\r\n  /**\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   * @return {number} Image or Canvas element.\r\n   */\r\n  getPixelRatio(pixelRatio) {\r\n    this.replaceColor_(pixelRatio);\r\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\r\n  }\r\n\r\n  /**\r\n   * @return {import(\"../ImageState.js\").default} Image state.\r\n   */\r\n  getImageState() {\r\n    return this.imageState_;\r\n  }\r\n\r\n  /**\r\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\r\n   */\r\n  getHitDetectionImage() {\r\n    if (!this.image_) {\r\n      this.initializeImage_();\r\n    }\r\n    if (!this.hitDetectionImage_) {\r\n      if (this.isTainted_()) {\r\n        const width = this.size_[0];\r\n        const height = this.size_[1];\r\n        const context = createCanvasContext2D(width, height);\r\n        context.fillRect(0, 0, width, height);\r\n        this.hitDetectionImage_ = context.canvas;\r\n      } else {\r\n        this.hitDetectionImage_ = this.image_;\r\n      }\r\n    }\r\n    return this.hitDetectionImage_;\r\n  }\r\n\r\n  /**\r\n   * Get the size of the icon (in pixels).\r\n   * @return {import(\"../size.js\").Size} Image size.\r\n   */\r\n  getSize() {\r\n    return this.size_;\r\n  }\r\n\r\n  /**\r\n   * @return {string|undefined} Image src.\r\n   */\r\n  getSrc() {\r\n    return this.src_;\r\n  }\r\n\r\n  /**\r\n   * Load not yet loaded URI.\r\n   */\r\n  load() {\r\n    if (this.imageState_ !== ImageState.IDLE) {\r\n      return;\r\n    }\r\n    if (!this.image_) {\r\n      this.initializeImage_();\r\n    }\r\n\r\n    this.imageState_ = ImageState.LOADING;\r\n    try {\r\n      /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\r\n    } catch (e) {\r\n      this.handleImageError_();\r\n    }\r\n    this.unlisten_ = listenImage(\r\n      this.image_,\r\n      this.handleImageLoad_.bind(this),\r\n      this.handleImageError_.bind(this)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   * @private\r\n   */\r\n  replaceColor_(pixelRatio) {\r\n    if (\r\n      !this.color_ ||\r\n      this.canvas_[pixelRatio] ||\r\n      this.imageState_ !== ImageState.LOADED\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    const image = this.image_;\r\n    const canvas = document.createElement('canvas');\r\n    canvas.width = Math.ceil(image.width * pixelRatio);\r\n    canvas.height = Math.ceil(image.height * pixelRatio);\r\n\r\n    const ctx = canvas.getContext('2d');\r\n    ctx.scale(pixelRatio, pixelRatio);\r\n    ctx.drawImage(image, 0, 0);\r\n\r\n    ctx.globalCompositeOperation = 'multiply';\r\n    ctx.fillStyle = asString(this.color_);\r\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\r\n\r\n    ctx.globalCompositeOperation = 'destination-in';\r\n    ctx.drawImage(image, 0, 0);\r\n\r\n    this.canvas_[pixelRatio] = canvas;\r\n  }\r\n\r\n  /**\r\n   * Discards event handlers which listen for load completion or errors.\r\n   *\r\n   * @private\r\n   */\r\n  unlistenImage_() {\r\n    if (this.unlisten_) {\r\n      this.unlisten_();\r\n      this.unlisten_ = null;\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\r\n * @param {string} src Src.\r\n * @param {import(\"../size.js\").Size} size Size.\r\n * @param {?string} crossOrigin Cross origin.\r\n * @param {import(\"../ImageState.js\").default} imageState Image state.\r\n * @param {import(\"../color.js\").Color} color Color.\r\n * @return {IconImage} Icon image.\r\n */\r\nexport function get(image, src, size, crossOrigin, imageState, color) {\r\n  let iconImage = iconImageCache.get(src, crossOrigin, color);\r\n  if (!iconImage) {\r\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\r\n    iconImageCache.set(src, crossOrigin, color, iconImage);\r\n  }\r\n  return iconImage;\r\n}\r\n\r\nexport default IconImage;\r\n","/**\r\n * @module ol/style/Icon\r\n */\r\nimport EventType from '../events/EventType.js';\r\nimport ImageState from '../ImageState.js';\r\nimport ImageStyle from './Image.js';\r\nimport {asArray} from '../color.js';\r\nimport {assert} from '../asserts.js';\r\nimport {get as getIconImage} from './IconImage.js';\r\nimport {getUid} from '../util.js';\r\n\r\n/**\r\n * @typedef {'fraction' | 'pixels'} IconAnchorUnits\r\n * Anchor unit can be either a fraction of the icon size or in pixels.\r\n */\r\n\r\n/**\r\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} IconOrigin\r\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\r\n */\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\r\n * @property {IconOrigin} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\r\n * `top-left` or `top-right`.\r\n * @property {IconAnchorUnits} [anchorXUnits='fraction'] Units in which the anchor x value is\r\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\r\n * the x value in pixels.\r\n * @property {IconAnchorUnits} [anchorYUnits='fraction'] Units in which the anchor y value is\r\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\r\n * the y value in pixels.\r\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\r\n * the icon will be left as is.\r\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\r\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\r\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\r\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\r\n * provided image must already be loaded. And in that case, it is required\r\n * to provide the size of the image, with the `imgSize` option.\r\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not.\r\n * The provided `imgSize` needs to match the actual size of the image.\r\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the icon in pixels.\r\n * Positive values will shift the icon right and up.\r\n * @property {number} [opacity=1] Opacity of the icon.\r\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\r\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\r\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\r\n * @property {Array<number>} [offset=[0, 0]] Offset which, together with `size` and `offsetOrigin`, defines the\r\n * sub-rectangle to use from the original (sprite) image.\r\n * @property {IconOrigin} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\r\n * `top-left` or `top-right`.\r\n * @property {import(\"../size.js\").Size} [size] Icon size in pixels. Used together with `offset` to define the\r\n * sub-rectangle to use from the original (sprite) image.\r\n * @property {string} [src] Image source URI.\r\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Set icon style for vector features.\r\n * @api\r\n */\r\nclass Icon extends ImageStyle {\r\n  /**\r\n   * @param {Options} [options] Options.\r\n   */\r\n  constructor(options) {\r\n    options = options || {};\r\n\r\n    /**\r\n     * @type {number}\r\n     */\r\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\r\n\r\n    /**\r\n     * @type {number}\r\n     */\r\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\r\n\r\n    /**\r\n     * @type {number|import(\"../size.js\").Size}\r\n     */\r\n    const scale = options.scale !== undefined ? options.scale : 1;\r\n\r\n    /**\r\n     * @type {boolean}\r\n     */\r\n    const rotateWithView =\r\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\r\n\r\n    super({\r\n      opacity: opacity,\r\n      rotation: rotation,\r\n      scale: scale,\r\n      displacement:\r\n        options.displacement !== undefined ? options.displacement : [0, 0],\r\n      rotateWithView: rotateWithView,\r\n      declutterMode: options.declutterMode,\r\n    });\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<number>}\r\n     */\r\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<number>}\r\n     */\r\n    this.normalizedAnchor_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {IconOrigin}\r\n     */\r\n    this.anchorOrigin_ =\r\n      options.anchorOrigin !== undefined ? options.anchorOrigin : 'top-left';\r\n\r\n    /**\r\n     * @private\r\n     * @type {IconAnchorUnits}\r\n     */\r\n    this.anchorXUnits_ =\r\n      options.anchorXUnits !== undefined ? options.anchorXUnits : 'fraction';\r\n\r\n    /**\r\n     * @private\r\n     * @type {IconAnchorUnits}\r\n     */\r\n    this.anchorYUnits_ =\r\n      options.anchorYUnits !== undefined ? options.anchorYUnits : 'fraction';\r\n\r\n    /**\r\n     * @private\r\n     * @type {?string}\r\n     */\r\n    this.crossOrigin_ =\r\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\r\n\r\n    /**\r\n     * @type {HTMLImageElement|HTMLCanvasElement}\r\n     */\r\n    const image = options.img !== undefined ? options.img : null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../size.js\").Size|undefined}\r\n     */\r\n    this.imgSize_ = options.imgSize;\r\n\r\n    /**\r\n     * @type {string|undefined}\r\n     */\r\n    let src = options.src;\r\n\r\n    assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\r\n    assert(!image || (image && this.imgSize_), 5); // `imgSize` must be set when `image` is provided\r\n\r\n    if ((src === undefined || src.length === 0) && image) {\r\n      src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\r\n    }\r\n    assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\r\n\r\n    /**\r\n     * @type {import(\"../ImageState.js\").default}\r\n     */\r\n    const imageState =\r\n      options.src !== undefined ? ImageState.IDLE : ImageState.LOADED;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../color.js\").Color}\r\n     */\r\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"./IconImage.js\").default}\r\n     */\r\n    this.iconImage_ = getIconImage(\r\n      image,\r\n      /** @type {string} */ (src),\r\n      this.imgSize_ !== undefined ? this.imgSize_ : null,\r\n      this.crossOrigin_,\r\n      imageState,\r\n      this.color_\r\n    );\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<number>}\r\n     */\r\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\r\n    /**\r\n     * @private\r\n     * @type {IconOrigin}\r\n     */\r\n    this.offsetOrigin_ =\r\n      options.offsetOrigin !== undefined ? options.offsetOrigin : 'top-left';\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<number>}\r\n     */\r\n    this.origin_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../size.js\").Size}\r\n     */\r\n    this.size_ = options.size !== undefined ? options.size : null;\r\n  }\r\n\r\n  /**\r\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\r\n   * @return {Icon} The cloned style.\r\n   * @api\r\n   */\r\n  clone() {\r\n    const scale = this.getScale();\r\n    return new Icon({\r\n      anchor: this.anchor_.slice(),\r\n      anchorOrigin: this.anchorOrigin_,\r\n      anchorXUnits: this.anchorXUnits_,\r\n      anchorYUnits: this.anchorYUnits_,\r\n      color:\r\n        this.color_ && this.color_.slice\r\n          ? this.color_.slice()\r\n          : this.color_ || undefined,\r\n      crossOrigin: this.crossOrigin_,\r\n      imgSize: this.imgSize_,\r\n      offset: this.offset_.slice(),\r\n      offsetOrigin: this.offsetOrigin_,\r\n      opacity: this.getOpacity(),\r\n      rotateWithView: this.getRotateWithView(),\r\n      rotation: this.getRotation(),\r\n      scale: Array.isArray(scale) ? scale.slice() : scale,\r\n      size: this.size_ !== null ? this.size_.slice() : undefined,\r\n      src: this.getSrc(),\r\n      displacement: this.getDisplacement().slice(),\r\n      declutterMode: this.getDeclutterMode(),\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get the anchor point in pixels. The anchor determines the center point for the\r\n   * symbolizer.\r\n   * @return {Array<number>} Anchor.\r\n   * @api\r\n   */\r\n  getAnchor() {\r\n    let anchor = this.normalizedAnchor_;\r\n    if (!anchor) {\r\n      anchor = this.anchor_;\r\n      const size = this.getSize();\r\n      if (\r\n        this.anchorXUnits_ == 'fraction' ||\r\n        this.anchorYUnits_ == 'fraction'\r\n      ) {\r\n        if (!size) {\r\n          return null;\r\n        }\r\n        anchor = this.anchor_.slice();\r\n        if (this.anchorXUnits_ == 'fraction') {\r\n          anchor[0] *= size[0];\r\n        }\r\n        if (this.anchorYUnits_ == 'fraction') {\r\n          anchor[1] *= size[1];\r\n        }\r\n      }\r\n\r\n      if (this.anchorOrigin_ != 'top-left') {\r\n        if (!size) {\r\n          return null;\r\n        }\r\n        if (anchor === this.anchor_) {\r\n          anchor = this.anchor_.slice();\r\n        }\r\n        if (\r\n          this.anchorOrigin_ == 'top-right' ||\r\n          this.anchorOrigin_ == 'bottom-right'\r\n        ) {\r\n          anchor[0] = -anchor[0] + size[0];\r\n        }\r\n        if (\r\n          this.anchorOrigin_ == 'bottom-left' ||\r\n          this.anchorOrigin_ == 'bottom-right'\r\n        ) {\r\n          anchor[1] = -anchor[1] + size[1];\r\n        }\r\n      }\r\n      this.normalizedAnchor_ = anchor;\r\n    }\r\n    const displacement = this.getDisplacement();\r\n    const scale = this.getScaleArray();\r\n    // anchor is scaled by renderer but displacement should not be scaled\r\n    // so divide by scale here\r\n    return [\r\n      anchor[0] - displacement[0] / scale[0],\r\n      anchor[1] + displacement[1] / scale[1],\r\n    ];\r\n  }\r\n\r\n  /**\r\n   * Set the anchor point. The anchor determines the center point for the\r\n   * symbolizer.\r\n   *\r\n   * @param {Array<number>} anchor Anchor.\r\n   * @api\r\n   */\r\n  setAnchor(anchor) {\r\n    this.anchor_ = anchor;\r\n    this.normalizedAnchor_ = null;\r\n  }\r\n\r\n  /**\r\n   * Get the icon color.\r\n   * @return {import(\"../color.js\").Color} Color.\r\n   * @api\r\n   */\r\n  getColor() {\r\n    return this.color_;\r\n  }\r\n\r\n  /**\r\n   * Get the image icon.\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\r\n   * @api\r\n   */\r\n  getImage(pixelRatio) {\r\n    return this.iconImage_.getImage(pixelRatio);\r\n  }\r\n\r\n  /**\r\n   * Get the pixel ratio.\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   * @return {number} The pixel ratio of the image.\r\n   * @api\r\n   */\r\n  getPixelRatio(pixelRatio) {\r\n    return this.iconImage_.getPixelRatio(pixelRatio);\r\n  }\r\n\r\n  /**\r\n   * @return {import(\"../size.js\").Size} Image size.\r\n   */\r\n  getImageSize() {\r\n    return this.iconImage_.getSize();\r\n  }\r\n\r\n  /**\r\n   * @return {import(\"../ImageState.js\").default} Image state.\r\n   */\r\n  getImageState() {\r\n    return this.iconImage_.getImageState();\r\n  }\r\n\r\n  /**\r\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\r\n   */\r\n  getHitDetectionImage() {\r\n    return this.iconImage_.getHitDetectionImage();\r\n  }\r\n\r\n  /**\r\n   * Get the origin of the symbolizer.\r\n   * @return {Array<number>} Origin.\r\n   * @api\r\n   */\r\n  getOrigin() {\r\n    if (this.origin_) {\r\n      return this.origin_;\r\n    }\r\n    let offset = this.offset_;\r\n\r\n    if (this.offsetOrigin_ != 'top-left') {\r\n      const size = this.getSize();\r\n      const iconImageSize = this.iconImage_.getSize();\r\n      if (!size || !iconImageSize) {\r\n        return null;\r\n      }\r\n      offset = offset.slice();\r\n      if (\r\n        this.offsetOrigin_ == 'top-right' ||\r\n        this.offsetOrigin_ == 'bottom-right'\r\n      ) {\r\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\r\n      }\r\n      if (\r\n        this.offsetOrigin_ == 'bottom-left' ||\r\n        this.offsetOrigin_ == 'bottom-right'\r\n      ) {\r\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\r\n      }\r\n    }\r\n    this.origin_ = offset;\r\n    return this.origin_;\r\n  }\r\n\r\n  /**\r\n   * Get the image URL.\r\n   * @return {string|undefined} Image src.\r\n   * @api\r\n   */\r\n  getSrc() {\r\n    return this.iconImage_.getSrc();\r\n  }\r\n\r\n  /**\r\n   * Get the size of the icon (in pixels).\r\n   * @return {import(\"../size.js\").Size} Image size.\r\n   * @api\r\n   */\r\n  getSize() {\r\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\r\n  }\r\n\r\n  /**\r\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\r\n   */\r\n  listenImageChange(listener) {\r\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\r\n  }\r\n\r\n  /**\r\n   * Load not yet loaded URI.\r\n   * When rendering a feature with an icon style, the vector renderer will\r\n   * automatically call this method. However, you might want to call this\r\n   * method yourself for preloading or other purposes.\r\n   * @api\r\n   */\r\n  load() {\r\n    this.iconImage_.load();\r\n  }\r\n\r\n  /**\r\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\r\n   */\r\n  unlistenImageChange(listener) {\r\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\r\n  }\r\n}\r\n\r\nexport default Icon;\r\n","/**\r\n * @module ol/style/Text\r\n */\r\nimport Fill from './Fill.js';\r\nimport {toSize} from '../size.js';\r\n\r\n/**\r\n * @typedef {'point' | 'line'} TextPlacement\r\n * Default text placement is `'point'`. Note that\r\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\r\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\r\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\r\n */\r\n\r\n/**\r\n * @typedef {'left' | 'center' | 'right'} TextJustify\r\n */\r\n\r\n/**\r\n * The default fill color to use if no fill was set at construction time; a\r\n * blackish `#333`.\r\n *\r\n * @const {string}\r\n */\r\nconst DEFAULT_FILL_COLOR = '#333';\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {string} [font] Font style as CSS `font` value, see:\r\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\r\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\r\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\r\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\r\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\r\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\r\n * the width of the polygon at the label position or the length of the path that it follows.\r\n * @property {TextPlacement} [placement='point'] Text placement.\r\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\r\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\r\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\r\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\r\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\r\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\r\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\r\n * **Note:** Rich text is not supported for the immediate rendering API.\r\n * @property {CanvasTextAlign} [textAlign] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\r\n * Default is `'center'` for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\r\n * placement where `maxAngle` is not exceeded.\r\n * @property {TextJustify} [justify] Text justification within the text box.\r\n * If not set, text is justified towards the `textAlign` anchor.\r\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\r\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\r\n * @property {CanvasTextBaseline} [textBaseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\r\n * `'hanging'`, `'ideographic'`.\r\n * @property {import(\"./Fill.js\").default} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333).\r\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\r\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\r\n * `'point'`. Default is no fill.\r\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\r\n * is `'point'`. Default is no stroke.\r\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\r\n * values in the array is `[top, right, bottom, left]`.\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Set text style for vector features.\r\n * @api\r\n */\r\nclass Text {\r\n  /**\r\n   * @param {Options} [options] Options.\r\n   */\r\n  constructor(options) {\r\n    options = options || {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {string|undefined}\r\n     */\r\n    this.font_ = options.font;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.rotation_ = options.rotation;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean|undefined}\r\n     */\r\n    this.rotateWithView_ = options.rotateWithView;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|import(\"../size.js\").Size|undefined}\r\n     */\r\n    this.scale_ = options.scale;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../size.js\").Size}\r\n     */\r\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\r\n\r\n    /**\r\n     * @private\r\n     * @type {string|Array<string>|undefined}\r\n     */\r\n    this.text_ = options.text;\r\n\r\n    /**\r\n     * @private\r\n     * @type {CanvasTextAlign|undefined}\r\n     */\r\n    this.textAlign_ = options.textAlign;\r\n\r\n    /**\r\n     * @private\r\n     * @type {TextJustify|undefined}\r\n     */\r\n    this.justify_ = options.justify;\r\n\r\n    /**\r\n     * @private\r\n     * @type {CanvasTextBaseline|undefined}\r\n     */\r\n    this.textBaseline_ = options.textBaseline;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"./Fill.js\").default}\r\n     */\r\n    this.fill_ =\r\n      options.fill !== undefined\r\n        ? options.fill\r\n        : new Fill({color: DEFAULT_FILL_COLOR});\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.maxAngle_ =\r\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\r\n\r\n    /**\r\n     * @private\r\n     * @type {TextPlacement}\r\n     */\r\n    this.placement_ =\r\n      options.placement !== undefined ? options.placement : 'point';\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.overflow_ = !!options.overflow;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"./Stroke.js\").default}\r\n     */\r\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"./Fill.js\").default}\r\n     */\r\n    this.backgroundFill_ = options.backgroundFill\r\n      ? options.backgroundFill\r\n      : null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"./Stroke.js\").default}\r\n     */\r\n    this.backgroundStroke_ = options.backgroundStroke\r\n      ? options.backgroundStroke\r\n      : null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<number>|null}\r\n     */\r\n    this.padding_ = options.padding === undefined ? null : options.padding;\r\n  }\r\n\r\n  /**\r\n   * Clones the style.\r\n   * @return {Text} The cloned style.\r\n   * @api\r\n   */\r\n  clone() {\r\n    const scale = this.getScale();\r\n    return new Text({\r\n      font: this.getFont(),\r\n      placement: this.getPlacement(),\r\n      maxAngle: this.getMaxAngle(),\r\n      overflow: this.getOverflow(),\r\n      rotation: this.getRotation(),\r\n      rotateWithView: this.getRotateWithView(),\r\n      scale: Array.isArray(scale) ? scale.slice() : scale,\r\n      text: this.getText(),\r\n      textAlign: this.getTextAlign(),\r\n      justify: this.getJustify(),\r\n      textBaseline: this.getTextBaseline(),\r\n      fill: this.getFill() ? this.getFill().clone() : undefined,\r\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\r\n      offsetX: this.getOffsetX(),\r\n      offsetY: this.getOffsetY(),\r\n      backgroundFill: this.getBackgroundFill()\r\n        ? this.getBackgroundFill().clone()\r\n        : undefined,\r\n      backgroundStroke: this.getBackgroundStroke()\r\n        ? this.getBackgroundStroke().clone()\r\n        : undefined,\r\n      padding: this.getPadding() || undefined,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get the `overflow` configuration.\r\n   * @return {boolean} Let text overflow the length of the path they follow.\r\n   * @api\r\n   */\r\n  getOverflow() {\r\n    return this.overflow_;\r\n  }\r\n\r\n  /**\r\n   * Get the font name.\r\n   * @return {string|undefined} Font.\r\n   * @api\r\n   */\r\n  getFont() {\r\n    return this.font_;\r\n  }\r\n\r\n  /**\r\n   * Get the maximum angle between adjacent characters.\r\n   * @return {number} Angle in radians.\r\n   * @api\r\n   */\r\n  getMaxAngle() {\r\n    return this.maxAngle_;\r\n  }\r\n\r\n  /**\r\n   * Get the label placement.\r\n   * @return {TextPlacement} Text placement.\r\n   * @api\r\n   */\r\n  getPlacement() {\r\n    return this.placement_;\r\n  }\r\n\r\n  /**\r\n   * Get the x-offset for the text.\r\n   * @return {number} Horizontal text offset.\r\n   * @api\r\n   */\r\n  getOffsetX() {\r\n    return this.offsetX_;\r\n  }\r\n\r\n  /**\r\n   * Get the y-offset for the text.\r\n   * @return {number} Vertical text offset.\r\n   * @api\r\n   */\r\n  getOffsetY() {\r\n    return this.offsetY_;\r\n  }\r\n\r\n  /**\r\n   * Get the fill style for the text.\r\n   * @return {import(\"./Fill.js\").default} Fill style.\r\n   * @api\r\n   */\r\n  getFill() {\r\n    return this.fill_;\r\n  }\r\n\r\n  /**\r\n   * Determine whether the text rotates with the map.\r\n   * @return {boolean|undefined} Rotate with map.\r\n   * @api\r\n   */\r\n  getRotateWithView() {\r\n    return this.rotateWithView_;\r\n  }\r\n\r\n  /**\r\n   * Get the text rotation.\r\n   * @return {number|undefined} Rotation.\r\n   * @api\r\n   */\r\n  getRotation() {\r\n    return this.rotation_;\r\n  }\r\n\r\n  /**\r\n   * Get the text scale.\r\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\r\n   * @api\r\n   */\r\n  getScale() {\r\n    return this.scale_;\r\n  }\r\n\r\n  /**\r\n   * Get the symbolizer scale array.\r\n   * @return {import(\"../size.js\").Size} Scale array.\r\n   */\r\n  getScaleArray() {\r\n    return this.scaleArray_;\r\n  }\r\n\r\n  /**\r\n   * Get the stroke style for the text.\r\n   * @return {import(\"./Stroke.js\").default} Stroke style.\r\n   * @api\r\n   */\r\n  getStroke() {\r\n    return this.stroke_;\r\n  }\r\n\r\n  /**\r\n   * Get the text to be rendered.\r\n   * @return {string|Array<string>|undefined} Text.\r\n   * @api\r\n   */\r\n  getText() {\r\n    return this.text_;\r\n  }\r\n\r\n  /**\r\n   * Get the text alignment.\r\n   * @return {CanvasTextAlign|undefined} Text align.\r\n   * @api\r\n   */\r\n  getTextAlign() {\r\n    return this.textAlign_;\r\n  }\r\n\r\n  /**\r\n   * Get the justification.\r\n   * @return {TextJustify|undefined} Justification.\r\n   * @api\r\n   */\r\n  getJustify() {\r\n    return this.justify_;\r\n  }\r\n\r\n  /**\r\n   * Get the text baseline.\r\n   * @return {CanvasTextBaseline|undefined} Text baseline.\r\n   * @api\r\n   */\r\n  getTextBaseline() {\r\n    return this.textBaseline_;\r\n  }\r\n\r\n  /**\r\n   * Get the background fill style for the text.\r\n   * @return {import(\"./Fill.js\").default} Fill style.\r\n   * @api\r\n   */\r\n  getBackgroundFill() {\r\n    return this.backgroundFill_;\r\n  }\r\n\r\n  /**\r\n   * Get the background stroke style for the text.\r\n   * @return {import(\"./Stroke.js\").default} Stroke style.\r\n   * @api\r\n   */\r\n  getBackgroundStroke() {\r\n    return this.backgroundStroke_;\r\n  }\r\n\r\n  /**\r\n   * Get the padding for the text.\r\n   * @return {Array<number>|null} Padding.\r\n   * @api\r\n   */\r\n  getPadding() {\r\n    return this.padding_;\r\n  }\r\n\r\n  /**\r\n   * Set the `overflow` property.\r\n   *\r\n   * @param {boolean} overflow Let text overflow the path that it follows.\r\n   * @api\r\n   */\r\n  setOverflow(overflow) {\r\n    this.overflow_ = overflow;\r\n  }\r\n\r\n  /**\r\n   * Set the font.\r\n   *\r\n   * @param {string|undefined} font Font.\r\n   * @api\r\n   */\r\n  setFont(font) {\r\n    this.font_ = font;\r\n  }\r\n\r\n  /**\r\n   * Set the maximum angle between adjacent characters.\r\n   *\r\n   * @param {number} maxAngle Angle in radians.\r\n   * @api\r\n   */\r\n  setMaxAngle(maxAngle) {\r\n    this.maxAngle_ = maxAngle;\r\n  }\r\n\r\n  /**\r\n   * Set the x offset.\r\n   *\r\n   * @param {number} offsetX Horizontal text offset.\r\n   * @api\r\n   */\r\n  setOffsetX(offsetX) {\r\n    this.offsetX_ = offsetX;\r\n  }\r\n\r\n  /**\r\n   * Set the y offset.\r\n   *\r\n   * @param {number} offsetY Vertical text offset.\r\n   * @api\r\n   */\r\n  setOffsetY(offsetY) {\r\n    this.offsetY_ = offsetY;\r\n  }\r\n\r\n  /**\r\n   * Set the text placement.\r\n   *\r\n   * @param {TextPlacement} placement Placement.\r\n   * @api\r\n   */\r\n  setPlacement(placement) {\r\n    this.placement_ = placement;\r\n  }\r\n\r\n  /**\r\n   * Set whether to rotate the text with the view.\r\n   *\r\n   * @param {boolean} rotateWithView Rotate with map.\r\n   * @api\r\n   */\r\n  setRotateWithView(rotateWithView) {\r\n    this.rotateWithView_ = rotateWithView;\r\n  }\r\n\r\n  /**\r\n   * Set the fill.\r\n   *\r\n   * @param {import(\"./Fill.js\").default} fill Fill style.\r\n   * @api\r\n   */\r\n  setFill(fill) {\r\n    this.fill_ = fill;\r\n  }\r\n\r\n  /**\r\n   * Set the rotation.\r\n   *\r\n   * @param {number|undefined} rotation Rotation.\r\n   * @api\r\n   */\r\n  setRotation(rotation) {\r\n    this.rotation_ = rotation;\r\n  }\r\n\r\n  /**\r\n   * Set the scale.\r\n   *\r\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\r\n   * @api\r\n   */\r\n  setScale(scale) {\r\n    this.scale_ = scale;\r\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\r\n  }\r\n\r\n  /**\r\n   * Set the stroke.\r\n   *\r\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\r\n   * @api\r\n   */\r\n  setStroke(stroke) {\r\n    this.stroke_ = stroke;\r\n  }\r\n\r\n  /**\r\n   * Set the text.\r\n   *\r\n   * @param {string|Array<string>|undefined} text Text.\r\n   * @api\r\n   */\r\n  setText(text) {\r\n    this.text_ = text;\r\n  }\r\n\r\n  /**\r\n   * Set the text alignment.\r\n   *\r\n   * @param {CanvasTextAlign|undefined} textAlign Text align.\r\n   * @api\r\n   */\r\n  setTextAlign(textAlign) {\r\n    this.textAlign_ = textAlign;\r\n  }\r\n\r\n  /**\r\n   * Set the justification.\r\n   *\r\n   * @param {TextJustify|undefined} justify Justification.\r\n   * @api\r\n   */\r\n  setJustify(justify) {\r\n    this.justify_ = justify;\r\n  }\r\n\r\n  /**\r\n   * Set the text baseline.\r\n   *\r\n   * @param {CanvasTextBaseline|undefined} textBaseline Text baseline.\r\n   * @api\r\n   */\r\n  setTextBaseline(textBaseline) {\r\n    this.textBaseline_ = textBaseline;\r\n  }\r\n\r\n  /**\r\n   * Set the background fill.\r\n   *\r\n   * @param {import(\"./Fill.js\").default} fill Fill style.\r\n   * @api\r\n   */\r\n  setBackgroundFill(fill) {\r\n    this.backgroundFill_ = fill;\r\n  }\r\n\r\n  /**\r\n   * Set the background stroke.\r\n   *\r\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\r\n   * @api\r\n   */\r\n  setBackgroundStroke(stroke) {\r\n    this.backgroundStroke_ = stroke;\r\n  }\r\n\r\n  /**\r\n   * Set the padding (`[top, right, bottom, left]`).\r\n   *\r\n   * @param {Array<number>|null} padding Padding.\r\n   * @api\r\n   */\r\n  setPadding(padding) {\r\n    this.padding_ = padding;\r\n  }\r\n}\r\n\r\nexport default Text;\r\n","/**\r\n * @module ol/style/flat\r\n */\r\n\r\nimport Circle from '../style/Circle.js';\r\nimport Fill from './Fill.js';\r\nimport Icon from './Icon.js';\r\nimport RegularShape from './RegularShape.js';\r\nimport Stroke from './Stroke.js';\r\nimport Style from './Style.js';\r\nimport Text from './Text.js';\r\n\r\n/**\r\n * For static styling, the [layer.setStyle()]{@link module:ol/layer/Vector~VectorLayer#setStyle} method\r\n * can be called with an object literal that has fill, stroke, text, icon, regular shape, and/or circle properties.\r\n * @api\r\n *\r\n * @typedef {FlatFill & FlatStroke & FlatText & FlatIcon & FlatShape & FlatCircle} FlatStyle\r\n */\r\n\r\n/**\r\n * A flat style literal or an array of the same.\r\n *\r\n * @typedef {FlatStyle|Array<FlatStyle>} FlatStyleLike\r\n */\r\n\r\n/**\r\n * Fill style properties applied to polygon features.\r\n *\r\n * @typedef {Object} FlatFill\r\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [fill-color] The fill color.\r\n */\r\n\r\n/**\r\n * Stroke style properties applied to line strings and polygon boundaries.  To apply a stroke, at least one of\r\n * `stroke-color` or `stroke-width` must be provided.\r\n *\r\n * @typedef {Object} FlatStroke\r\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [stroke-color] The stroke color.\r\n * @property {number} [stroke-width] Stroke pixel width.\r\n * @property {CanvasLineCap} [stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\r\n * @property {CanvasLineJoin} [stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\r\n * @property {Array<number>} [stroke-line-dash] Line dash pattern.\r\n * @property {number} [stroke-line-dash-offset=0] Line dash offset.\r\n * @property {number} [stroke-miter-limit=10] Miter limit.\r\n */\r\n\r\n/**\r\n * Label style properties applied to all features.  At a minimum, a `text-value` must be provided.\r\n *\r\n * @typedef {Object} FlatText\r\n * @property {string|Array<string>} [text-value] Text content or rich text content. For plain text provide a string, which can\r\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\r\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\r\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\r\n * **Note:** Rich text is not supported for the immediate rendering API.\r\n * @property {string} [text-font] Font style as CSS `font` value, see:\r\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\r\n * @property {number} [text-max-angle=Math.PI/4] When `text-placement` is set to `'line'`, allow a maximum angle between adjacent characters.\r\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\r\n * @property {number} [text-offset-x=0] Horizontal text offset in pixels. A positive will shift the text right.\r\n * @property {number} [text-offset-y=0] Vertical text offset in pixels. A positive will shift the text down.\r\n * @property {boolean} [text-overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\r\n * the width of the polygon at the label position or the length of the path that it follows.\r\n * @property {import(\"./Text.js\").TextPlacement} [text-placement='point'] Text placement.\r\n * @property {number|import(\"../size.js\").Size} [text-scale] Scale.\r\n * @property {boolean} [text-rotate-with-view=false] Whether to rotate the text with the view.\r\n * @property {number} [text-rotation=0] Rotation in radians (positive rotation clockwise).\r\n * @property {CanvasTextAlign} [text-align] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\r\n * Default is `'center'` for `text-placement: 'point'`. For `text-placement: 'line'`, the default is to let the renderer choose a\r\n * placement where `text-max-angle` is not exceeded.\r\n * @property {import('./Text.js').TextJustify} [text-justify] Text justification within the text box.\r\n * If not set, text is justified towards the `textAlign` anchor.\r\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\r\n * **Note:** `text-justify` is ignored for immediate rendering and also for `text-placement: 'line'`.\r\n * @property {CanvasTextBaseline} [text-baseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\r\n * `'hanging'`, `'ideographic'`.\r\n * @property {Array<number>} [text-padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\r\n * values in the array is `[top, right, bottom, left]`.\r\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-fill-color] The fill color.\r\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-background-fill-color] The fill color.\r\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-stroke-color] The stroke color.\r\n * @property {CanvasLineCap} [text-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\r\n * @property {CanvasLineJoin} [text-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\r\n * @property {Array<number>} [text-stroke-line-dash] Line dash pattern.\r\n * @property {number} [text-stroke-line-dash-offset=0] Line dash offset.\r\n * @property {number} [text-stroke-miter-limit=10] Miter limit.\r\n * @property {number} [text-stroke-width] Stroke pixel width.\r\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-background-stroke-color] The stroke color.\r\n * @property {CanvasLineCap} [text-background-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\r\n * @property {CanvasLineJoin} [text-background-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\r\n * @property {Array<number>} [text-background-stroke-line-dash] Line dash pattern.\r\n * @property {number} [text-background-stroke-line-dash-offset=0] Line dash offset.\r\n * @property {number} [text-background-stroke-miter-limit=10] Miter limit.\r\n * @property {number} [text-background-stroke-width] Stroke pixel width.\r\n */\r\n\r\n/**\r\n * Icon style properties applied to point features.  One of `icon-src` or `icon-img` must be provided to render\r\n * points with an icon.\r\n *\r\n * @typedef {Object} FlatIcon\r\n * @property {string} [icon-src] Image source URI.\r\n * @property {HTMLImageElement|HTMLCanvasElement} [icon-img] Image object for the icon. If the `icon-src` option is not provided then the\r\n * provided image must already be loaded. And in that case, it is required\r\n * to provide the size of the image, with the `icon-img-size` option.\r\n * @property {import(\"../size.js\").Size} [icon-img-size] Image size in pixels. Only required if `icon-img` is set and `icon-src` is not.\r\n * The provided size needs to match the actual size of the image.\r\n * @property {Array<number>} [icon-anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\r\n * @property {import(\"./Icon.js\").IconOrigin} [icon-anchor-origin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\r\n * `top-left` or `top-right`.\r\n * @property {import(\"./Icon.js\").IconAnchorUnits} [icon-anchor-x-units='fraction'] Units in which the anchor x value is\r\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\r\n * the x value in pixels.\r\n * @property {import(\"./Icon.js\").IconAnchorUnits} [icon-anchor-y-units='fraction'] Units in which the anchor y value is\r\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\r\n * the y value in pixels.\r\n * @property {import(\"../color.js\").Color|string} [icon-color] Color to tint the icon. If not specified,\r\n * the icon will be left as is.\r\n * @property {null|string} [icon-cross-origin] The `crossOrigin` attribute for loaded images. Note that you must provide a\r\n * `icon-cross-origin` value if you want to access pixel data with the Canvas renderer.\r\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\r\n * @property {Array<number>} [icon-offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\r\n * sub-rectangle to use from the original icon image.\r\n * @property {Array<number>} [icon-displacement=[0,0]] Displacement of the icon.\r\n * @property {import(\"./Icon.js\").IconOrigin} [icon-offset-origin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\r\n * `top-left` or `top-right`.\r\n * @property {number} [icon-opacity=1] Opacity of the icon.\r\n * @property {number|import(\"../size.js\").Size} [icon-scale=1] Scale.\r\n * @property {number} [icon-rotation=0] Rotation in radians (positive rotation clockwise).\r\n * @property {boolean} [icon-rotate-with-view=false] Whether to rotate the icon with the view.\r\n * @property {import(\"../size.js\").Size} [icon-size] Icon size in pixel. Can be used together with `icon-offset` to define the\r\n * sub-rectangle to use from the origin (sprite) icon image.\r\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [icon-declutter-mode] Declutter mode\r\n */\r\n\r\n/**\r\n * Regular shape style properties for rendering point features.  At least `shape-points` must be provided.\r\n *\r\n * @typedef {Object} FlatShape\r\n * @property {number} [shape-points] Number of points for stars and regular polygons. In case of a polygon, the number of points\r\n * is the number of sides.\r\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [shape-fill-color] The fill color.\r\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [shape-stroke-color] The stroke color.\r\n * @property {number} [shape-stroke-width] Stroke pixel width.\r\n * @property {CanvasLineCap} [shape-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\r\n * @property {CanvasLineJoin} [shape-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\r\n * @property {Array<number>} [shape-stroke-line-dash] Line dash pattern.\r\n * @property {number} [shape-stroke-line-dash-offset=0] Line dash offset.\r\n * @property {number} [shape-stroke-miter-limit=10] Miter limit.\r\n * @property {number} [shape-radius] Radius of a regular polygon.\r\n * @property {number} [shape-radius1] First radius of a star. Ignored if radius is set.\r\n * @property {number} [shape-radius2] Second radius of a star.\r\n * @property {number} [shape-angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\r\n * @property {Array<number>} [shape-displacement=[0,0]] Displacement of the shape\r\n * @property {number} [shape-rotation=0] Rotation in radians (positive rotation clockwise).\r\n * @property {boolean} [shape-rotate-with-view=false] Whether to rotate the shape with the view.\r\n * @property {number|import(\"../size.js\").Size} [shape-scale=1] Scale. Unless two dimensional scaling is required a better\r\n * result may be obtained with appropriate settings for `shape-radius`, `shape-radius1` and `shape-radius2`.\r\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [shape-declutter-mode] Declutter mode.\r\n */\r\n\r\n/**\r\n * Circle style properties for rendering point features.  At least `circle-radius` must be provided.\r\n *\r\n * @typedef {Object} FlatCircle\r\n * @property {number} [circle-radius] Circle radius.\r\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [circle-fill-color] The fill color.\r\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [circle-stroke-color] The stroke color.\r\n * @property {number} [circle-stroke-width] Stroke pixel width.\r\n * @property {CanvasLineCap} [circle-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\r\n * @property {CanvasLineJoin} [circle-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\r\n * @property {Array<number>} [circle-stroke-line-dash] Line dash pattern.\r\n * @property {number} [circle-stroke-line-dash-offset=0] Line dash offset.\r\n * @property {number} [circle-stroke-miter-limit=10] Miter limit.\r\n * @property {Array<number>} [circle-displacement=[0,0]] displacement\r\n * @property {number|import(\"../size.js\").Size} [circle-scale=1] Scale. A two dimensional scale will produce an ellipse.\r\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `circle-radius`.\r\n * @property {number} [circle-rotation=0] Rotation in radians\r\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\r\n * @property {boolean} [circle-rotate-with-view=false] Whether to rotate the shape with the view\r\n * (meaningful only when used in conjunction with a two dimensional scale).\r\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [circle-declutter-mode] Declutter mode\r\n */\r\n\r\n/**\r\n * @param {FlatStyle} flatStyle A flat style literal.\r\n * @return {import(\"./Style.js\").default} A style instance.\r\n */\r\nexport function toStyle(flatStyle) {\r\n  const style = new Style({\r\n    fill: getFill(flatStyle, ''),\r\n    stroke: getStroke(flatStyle, ''),\r\n    text: getText(flatStyle),\r\n    image: getImage(flatStyle),\r\n  });\r\n\r\n  return style;\r\n}\r\n\r\n/**\r\n * @param {FlatStyle} flatStyle The flat style.\r\n * @param {string} prefix The property prefix.\r\n * @return {Fill|undefined} The fill (if any).\r\n */\r\nfunction getFill(flatStyle, prefix) {\r\n  const color = flatStyle[prefix + 'fill-color'];\r\n  if (!color) {\r\n    return;\r\n  }\r\n\r\n  return new Fill({color: color});\r\n}\r\n\r\n/**\r\n * @param {FlatStyle} flatStyle The flat style.\r\n * @param {string} prefix The property prefix.\r\n * @return {Stroke|undefined} The stroke (if any).\r\n */\r\nfunction getStroke(flatStyle, prefix) {\r\n  const width = flatStyle[prefix + 'stroke-width'];\r\n  const color = flatStyle[prefix + 'stroke-color'];\r\n  if (!width && !color) {\r\n    return;\r\n  }\r\n\r\n  return new Stroke({\r\n    width: width,\r\n    color: color,\r\n    lineCap: flatStyle[prefix + 'stroke-line-cap'],\r\n    lineJoin: flatStyle[prefix + 'stroke-line-join'],\r\n    lineDash: flatStyle[prefix + 'stroke-line-dash'],\r\n    lineDashOffset: flatStyle[prefix + 'stroke-line-dash-offset'],\r\n    miterLimit: flatStyle[prefix + 'stroke-miter-limit'],\r\n  });\r\n}\r\n\r\n/**\r\n * @param {FlatStyle} flatStyle The flat style.\r\n * @return {Text|undefined} The text (if any).\r\n */\r\nfunction getText(flatStyle) {\r\n  const value = flatStyle['text-value'];\r\n  if (!value) {\r\n    return;\r\n  }\r\n\r\n  const text = new Text({\r\n    text: value,\r\n    font: flatStyle['text-font'],\r\n    maxAngle: flatStyle['text-max-angle'],\r\n    offsetX: flatStyle['text-offset-x'],\r\n    offsetY: flatStyle['text-offset-y'],\r\n    overflow: flatStyle['text-overflow'],\r\n    placement: flatStyle['text-placement'],\r\n    scale: flatStyle['text-scale'],\r\n    rotateWithView: flatStyle['text-rotate-with-view'],\r\n    rotation: flatStyle['text-rotation'],\r\n    textAlign: flatStyle['text-align'],\r\n    justify: flatStyle['text-justify'],\r\n    textBaseline: flatStyle['text-baseline'],\r\n    padding: flatStyle['text-padding'],\r\n    fill: getFill(flatStyle, 'text-'),\r\n    backgroundFill: getFill(flatStyle, 'text-background-'),\r\n    stroke: getStroke(flatStyle, 'text-'),\r\n    backgroundStroke: getStroke(flatStyle, 'text-background-'),\r\n  });\r\n\r\n  return text;\r\n}\r\n\r\n/**\r\n * @param {FlatStyle} flatStyle The flat style.\r\n * @return {import(\"./Image.js\").default|undefined} The image (if any).\r\n */\r\nfunction getImage(flatStyle) {\r\n  const iconSrc = flatStyle['icon-src'];\r\n  const iconImg = flatStyle['icon-img'];\r\n  if (iconSrc || iconImg) {\r\n    const icon = new Icon({\r\n      src: iconSrc,\r\n      img: iconImg,\r\n      imgSize: flatStyle['icon-img-size'],\r\n      anchor: flatStyle['icon-anchor'],\r\n      anchorOrigin: flatStyle['icon-anchor-origin'],\r\n      anchorXUnits: flatStyle['icon-anchor-x-units'],\r\n      anchorYUnits: flatStyle['icon-anchor-y-units'],\r\n      color: flatStyle['icon-color'],\r\n      crossOrigin: flatStyle['icon-cross-origin'],\r\n      offset: flatStyle['icon-offset'],\r\n      displacement: flatStyle['icon-displacement'],\r\n      opacity: flatStyle['icon-opacity'],\r\n      scale: flatStyle['icon-scale'],\r\n      rotation: flatStyle['icon-rotation'],\r\n      rotateWithView: flatStyle['icon-rotate-with-view'],\r\n      size: flatStyle['icon-size'],\r\n      declutterMode: flatStyle['icon-declutter-mode'],\r\n    });\r\n    return icon;\r\n  }\r\n\r\n  const shapePoints = flatStyle['shape-points'];\r\n  if (shapePoints) {\r\n    const prefix = 'shape-';\r\n    const shape = new RegularShape({\r\n      points: shapePoints,\r\n      fill: getFill(flatStyle, prefix),\r\n      stroke: getStroke(flatStyle, prefix),\r\n      radius: flatStyle['shape-radius'],\r\n      radius1: flatStyle['shape-radius1'],\r\n      radius2: flatStyle['shape-radius2'],\r\n      angle: flatStyle['shape-angle'],\r\n      displacement: flatStyle['shape-displacement'],\r\n      rotation: flatStyle['shape-rotation'],\r\n      rotateWithView: flatStyle['shape-rotate-with-view'],\r\n      scale: flatStyle['shape-scale'],\r\n      declutterMode: flatStyle['shape-declutter-mode'],\r\n    });\r\n\r\n    return shape;\r\n  }\r\n\r\n  const circleRadius = flatStyle['circle-radius'];\r\n  if (circleRadius) {\r\n    const prefix = 'circle-';\r\n    const circle = new Circle({\r\n      radius: circleRadius,\r\n      fill: getFill(flatStyle, prefix),\r\n      stroke: getStroke(flatStyle, prefix),\r\n      displacement: flatStyle['circle-displacement'],\r\n      scale: flatStyle['circle-scale'],\r\n      rotation: flatStyle['circle-rotation'],\r\n      rotateWithView: flatStyle['circle-rotate-with-view'],\r\n      declutterMode: flatStyle['circle-declutter-mode'],\r\n    });\r\n\r\n    return circle;\r\n  }\r\n\r\n  return;\r\n}\r\n","/**\r\n * @module ol/layer/BaseVector\r\n */\r\nimport Layer from './Layer.js';\r\nimport RBush from 'rbush';\r\nimport Style, {\r\n  createDefaultStyle,\r\n  toFunction as toStyleFunction,\r\n} from '../style/Style.js';\r\nimport {toStyle} from '../style/flat.js';\r\n\r\n/**\r\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\r\n * @typedef {Object} Options\r\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\r\n * @property {number} [opacity=1] Opacity (0, 1).\r\n * @property {boolean} [visible=true] Visibility.\r\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\r\n * rendered outside of this extent.\r\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\r\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\r\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\r\n * method was used.\r\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\r\n * visible.\r\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\r\n * be visible.\r\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\r\n * visible.\r\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\r\n * be visible.\r\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\r\n * features before rendering. By default features are drawn in the order that they are created. Use\r\n * `null` to avoid the sort, but get an undefined draw order.\r\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\r\n * renderer when getting features from the vector source for the rendering or hit-detection.\r\n * Recommended value: the size of the largest symbol, line width or label.\r\n * @property {VectorSourceType} [source] Source.\r\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\r\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\r\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\r\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\r\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\r\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\r\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\r\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\r\n * higher priority.\r\n *\r\n * As an optimization decluttered features from layers with the same `className` are rendered above\r\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\r\n * behavior and place declutterd features with their own layer configure the layer with a `className`\r\n * other than `ol-layer`.\r\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\r\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\r\n * which will be used if this is not set.\r\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\r\n * will be rendered.\r\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\r\n * be recreated during animations. This means that no vectors will be shown clipped, but the\r\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\r\n * batches will be recreated when no animation is active.\r\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\r\n * be recreated during interactions. See also `updateWhileAnimating`.\r\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\r\n */\r\n\r\n/**\r\n * @enum {string}\r\n * @private\r\n */\r\nconst Property = {\r\n  RENDER_ORDER: 'renderOrder',\r\n};\r\n\r\n/**\r\n * @classdesc\r\n * Vector data that is rendered client-side.\r\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\r\n * property on the layer object; for example, setting `title: 'My Title'` in the\r\n * options means that `title` is observable, and has get/set accessors.\r\n *\r\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\r\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\r\n * @extends {Layer<VectorSourceType, RendererType>}\r\n * @api\r\n */\r\nclass BaseVectorLayer extends Layer {\r\n  /**\r\n   * @param {Options<VectorSourceType>} [options] Options.\r\n   */\r\n  constructor(options) {\r\n    options = options ? options : {};\r\n\r\n    const baseOptions = Object.assign({}, options);\r\n\r\n    delete baseOptions.style;\r\n    delete baseOptions.renderBuffer;\r\n    delete baseOptions.updateWhileAnimating;\r\n    delete baseOptions.updateWhileInteracting;\r\n    super(baseOptions);\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.declutter_ =\r\n      options.declutter !== undefined ? options.declutter : false;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.renderBuffer_ =\r\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\r\n\r\n    /**\r\n     * User provided style.\r\n     * @type {import(\"../style/Style.js\").StyleLike}\r\n     * @private\r\n     */\r\n    this.style_ = null;\r\n\r\n    /**\r\n     * Style function for use within the library.\r\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\r\n     * @private\r\n     */\r\n    this.styleFunction_ = undefined;\r\n\r\n    this.setStyle(options.style);\r\n\r\n    /**\r\n     * @type {boolean}\r\n     * @private\r\n     */\r\n    this.updateWhileAnimating_ =\r\n      options.updateWhileAnimating !== undefined\r\n        ? options.updateWhileAnimating\r\n        : false;\r\n\r\n    /**\r\n     * @type {boolean}\r\n     * @private\r\n     */\r\n    this.updateWhileInteracting_ =\r\n      options.updateWhileInteracting !== undefined\r\n        ? options.updateWhileInteracting\r\n        : false;\r\n  }\r\n\r\n  /**\r\n   * @return {boolean} Declutter.\r\n   */\r\n  getDeclutter() {\r\n    return this.declutter_;\r\n  }\r\n\r\n  /**\r\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\r\n   * that resolves with an array of features. The array will either contain the topmost feature\r\n   * when a hit was detected, or it will be empty.\r\n   *\r\n   * The hit detection algorithm used for this method is optimized for performance, but is less\r\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\r\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\r\n   * image.\r\n   *\r\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\r\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with an array of features.\r\n   * @api\r\n   */\r\n  getFeatures(pixel) {\r\n    return super.getFeatures(pixel);\r\n  }\r\n\r\n  /**\r\n   * @return {number|undefined} Render buffer.\r\n   */\r\n  getRenderBuffer() {\r\n    return this.renderBuffer_;\r\n  }\r\n\r\n  /**\r\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\r\n   *     order.\r\n   */\r\n  getRenderOrder() {\r\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\r\n      this.get(Property.RENDER_ORDER)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Get the style for features.  This returns whatever was passed to the `style`\r\n   * option at construction or to the `setStyle` method.\r\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\r\n   * @api\r\n   */\r\n  getStyle() {\r\n    return this.style_;\r\n  }\r\n\r\n  /**\r\n   * Get the style function.\r\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\r\n   * @api\r\n   */\r\n  getStyleFunction() {\r\n    return this.styleFunction_;\r\n  }\r\n\r\n  /**\r\n   * @return {boolean} Whether the rendered layer should be updated while\r\n   *     animating.\r\n   */\r\n  getUpdateWhileAnimating() {\r\n    return this.updateWhileAnimating_;\r\n  }\r\n\r\n  /**\r\n   * @return {boolean} Whether the rendered layer should be updated while\r\n   *     interacting.\r\n   */\r\n  getUpdateWhileInteracting() {\r\n    return this.updateWhileInteracting_;\r\n  }\r\n\r\n  /**\r\n   * Render declutter items for this layer\r\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\r\n   */\r\n  renderDeclutter(frameState) {\r\n    if (!frameState.declutterTree) {\r\n      frameState.declutterTree = new RBush(9);\r\n    }\r\n    /** @type {*} */ (this.getRenderer()).renderDeclutter(frameState);\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\r\n   *     Render order.\r\n   */\r\n  setRenderOrder(renderOrder) {\r\n    this.set(Property.RENDER_ORDER, renderOrder);\r\n  }\r\n\r\n  /**\r\n   * Set the style for features.  This can be a single style object, an array\r\n   * of styles, or a function that takes a feature and resolution and returns\r\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\r\n   * so only features that have their own styles will be rendered in the layer. Call\r\n   * `setStyle()` without arguments to reset to the default style. See\r\n   * [the ol/style/Style module]{@link module:ol/style/Style~Style} for information on the default style.\r\n   *\r\n   * If your layer has a static style, you can use \"flat\" style object literals instead of\r\n   * using the `Style` and symbolizer constructors (`Fill`, `Stroke`, etc.).  See the documentation\r\n   * for the [flat style types]{@link module:ol/style/flat~FlatStyle} to see what properties are supported.\r\n   *\r\n   * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\r\n   * @api\r\n   */\r\n  setStyle(style) {\r\n    /**\r\n     * @type {import(\"../style/Style.js\").StyleLike|null}\r\n     */\r\n    let styleLike;\r\n\r\n    if (style === undefined) {\r\n      styleLike = createDefaultStyle;\r\n    } else if (style === null) {\r\n      styleLike = null;\r\n    } else if (typeof style === 'function') {\r\n      styleLike = style;\r\n    } else if (style instanceof Style) {\r\n      styleLike = style;\r\n    } else if (Array.isArray(style)) {\r\n      const len = style.length;\r\n\r\n      /**\r\n       * @type {Array<Style>}\r\n       */\r\n      const styles = new Array(len);\r\n\r\n      for (let i = 0; i < len; ++i) {\r\n        const s = style[i];\r\n        if (s instanceof Style) {\r\n          styles[i] = s;\r\n        } else {\r\n          styles[i] = toStyle(s);\r\n        }\r\n      }\r\n      styleLike = styles;\r\n    } else {\r\n      styleLike = toStyle(style);\r\n    }\r\n\r\n    this.style_ = styleLike;\r\n    this.styleFunction_ =\r\n      style === null ? undefined : toStyleFunction(this.style_);\r\n    this.changed();\r\n  }\r\n}\r\n\r\nexport default BaseVectorLayer;\r\n","/**\r\n * @module ol/render/canvas/Instruction\r\n */\r\n\r\n/**\r\n * @enum {number}\r\n */\r\nconst Instruction = {\r\n  BEGIN_GEOMETRY: 0,\r\n  BEGIN_PATH: 1,\r\n  CIRCLE: 2,\r\n  CLOSE_PATH: 3,\r\n  CUSTOM: 4,\r\n  DRAW_CHARS: 5,\r\n  DRAW_IMAGE: 6,\r\n  END_GEOMETRY: 7,\r\n  FILL: 8,\r\n  MOVE_TO_LINE_TO: 9,\r\n  SET_FILL_STYLE: 10,\r\n  SET_STROKE_STYLE: 11,\r\n  STROKE: 12,\r\n};\r\n\r\n/**\r\n * @type {Array<Instruction>}\r\n */\r\nexport const fillInstruction = [Instruction.FILL];\r\n\r\n/**\r\n * @type {Array<Instruction>}\r\n */\r\nexport const strokeInstruction = [Instruction.STROKE];\r\n\r\n/**\r\n * @type {Array<Instruction>}\r\n */\r\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\r\n\r\n/**\r\n * @type {Array<Instruction>}\r\n */\r\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\r\n\r\nexport default Instruction;\r\n","/**\r\n * @module ol/render/VectorContext\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Context for drawing geometries.  A vector context is available on render\r\n * events and does not need to be constructed directly.\r\n * @api\r\n */\r\nclass VectorContext {\r\n  /**\r\n   * Render a geometry with a custom renderer.\r\n   *\r\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\r\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n   * @param {Function} renderer Renderer.\r\n   * @param {Function} hitDetectionRenderer Renderer.\r\n   */\r\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {}\r\n\r\n  /**\r\n   * Render a geometry.\r\n   *\r\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\r\n   */\r\n  drawGeometry(geometry) {}\r\n\r\n  /**\r\n   * Set the rendering style.\r\n   *\r\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\r\n   */\r\n  setStyle(style) {}\r\n\r\n  /**\r\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\r\n   * @param {import(\"../Feature.js\").default} feature Feature.\r\n   */\r\n  drawCircle(circleGeometry, feature) {}\r\n\r\n  /**\r\n   * @param {import(\"../Feature.js\").default} feature Feature.\r\n   * @param {import(\"../style/Style.js\").default} style Style.\r\n   */\r\n  drawFeature(feature, style) {}\r\n\r\n  /**\r\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\r\n   * @param {import(\"../Feature.js\").default} feature Feature.\r\n   */\r\n  drawGeometryCollection(geometryCollectionGeometry, feature) {}\r\n\r\n  /**\r\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\r\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n   */\r\n  drawLineString(lineStringGeometry, feature) {}\r\n\r\n  /**\r\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\r\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n   */\r\n  drawMultiLineString(multiLineStringGeometry, feature) {}\r\n\r\n  /**\r\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\r\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n   */\r\n  drawMultiPoint(multiPointGeometry, feature) {}\r\n\r\n  /**\r\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\r\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n   */\r\n  drawMultiPolygon(multiPolygonGeometry, feature) {}\r\n\r\n  /**\r\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\r\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n   */\r\n  drawPoint(pointGeometry, feature) {}\r\n\r\n  /**\r\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\r\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n   */\r\n  drawPolygon(polygonGeometry, feature) {}\r\n\r\n  /**\r\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\r\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n   */\r\n  drawText(geometry, feature) {}\r\n\r\n  /**\r\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\r\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\r\n   */\r\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\r\n\r\n  /**\r\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\r\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with a text style.\r\n   */\r\n  setImageStyle(imageStyle, declutterImageWithText) {}\r\n\r\n  /**\r\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\r\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with an image style.\r\n   */\r\n  setTextStyle(textStyle, declutterImageWithText) {}\r\n}\r\n\r\nexport default VectorContext;\r\n","/**\r\n * @module ol/render/canvas/Builder\r\n */\r\nimport CanvasInstruction from './Instruction.js';\r\nimport Relationship from '../../extent/Relationship.js';\r\nimport VectorContext from '../VectorContext.js';\r\nimport {asColorLike} from '../../colorlike.js';\r\nimport {\r\n  buffer,\r\n  clone,\r\n  containsCoordinate,\r\n  coordinateRelationship,\r\n} from '../../extent.js';\r\nimport {\r\n  defaultFillStyle,\r\n  defaultLineCap,\r\n  defaultLineDash,\r\n  defaultLineDashOffset,\r\n  defaultLineJoin,\r\n  defaultLineWidth,\r\n  defaultMiterLimit,\r\n  defaultStrokeStyle,\r\n} from '../canvas.js';\r\nimport {equals, reverseSubArray} from '../../array.js';\r\nimport {\r\n  inflateCoordinates,\r\n  inflateCoordinatesArray,\r\n  inflateMultiCoordinatesArray,\r\n} from '../../geom/flat/inflate.js';\r\n\r\nclass CanvasBuilder extends VectorContext {\r\n  /**\r\n   * @param {number} tolerance Tolerance.\r\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\r\n   * @param {number} resolution Resolution.\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   */\r\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\r\n    super();\r\n\r\n    /**\r\n     * @protected\r\n     * @type {number}\r\n     */\r\n    this.tolerance = tolerance;\r\n\r\n    /**\r\n     * @protected\r\n     * @const\r\n     * @type {import(\"../../extent.js\").Extent}\r\n     */\r\n    this.maxExtent = maxExtent;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {number}\r\n     */\r\n    this.pixelRatio = pixelRatio;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {number}\r\n     */\r\n    this.maxLineWidth = 0;\r\n\r\n    /**\r\n     * @protected\r\n     * @const\r\n     * @type {number}\r\n     */\r\n    this.resolution = resolution;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<*>}\r\n     */\r\n    this.beginGeometryInstruction1_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<*>}\r\n     */\r\n    this.beginGeometryInstruction2_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../../extent.js\").Extent}\r\n     */\r\n    this.bufferedMaxExtent_ = null;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {Array<*>}\r\n     */\r\n    this.instructions = [];\r\n\r\n    /**\r\n     * @protected\r\n     * @type {Array<number>}\r\n     */\r\n    this.coordinates = [];\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../../coordinate.js\").Coordinate}\r\n     */\r\n    this.tmpCoordinate_ = [];\r\n\r\n    /**\r\n     * @protected\r\n     * @type {Array<*>}\r\n     */\r\n    this.hitDetectionInstructions = [];\r\n\r\n    /**\r\n     * @protected\r\n     * @type {import(\"../canvas.js\").FillStrokeState}\r\n     */\r\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\r\n  }\r\n\r\n  /**\r\n   * @protected\r\n   * @param {Array<number>} dashArray Dash array.\r\n   * @return {Array<number>} Dash array with pixel ratio applied\r\n   */\r\n  applyPixelRatio(dashArray) {\r\n    const pixelRatio = this.pixelRatio;\r\n    return pixelRatio == 1\r\n      ? dashArray\r\n      : dashArray.map(function (dash) {\r\n          return dash * pixelRatio;\r\n        });\r\n  }\r\n\r\n  /**\r\n   * @param {Array<number>} flatCoordinates Flat coordinates.\r\n   * @param {number} stride Stride.\r\n   * @protected\r\n   * @return {number} My end\r\n   */\r\n  appendFlatPointCoordinates(flatCoordinates, stride) {\r\n    const extent = this.getBufferedMaxExtent();\r\n    const tmpCoord = this.tmpCoordinate_;\r\n    const coordinates = this.coordinates;\r\n    let myEnd = coordinates.length;\r\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\r\n      tmpCoord[0] = flatCoordinates[i];\r\n      tmpCoord[1] = flatCoordinates[i + 1];\r\n      if (containsCoordinate(extent, tmpCoord)) {\r\n        coordinates[myEnd++] = tmpCoord[0];\r\n        coordinates[myEnd++] = tmpCoord[1];\r\n      }\r\n    }\r\n    return myEnd;\r\n  }\r\n\r\n  /**\r\n   * @param {Array<number>} flatCoordinates Flat coordinates.\r\n   * @param {number} offset Offset.\r\n   * @param {number} end End.\r\n   * @param {number} stride Stride.\r\n   * @param {boolean} closed Last input coordinate equals first.\r\n   * @param {boolean} skipFirst Skip first coordinate.\r\n   * @protected\r\n   * @return {number} My end.\r\n   */\r\n  appendFlatLineCoordinates(\r\n    flatCoordinates,\r\n    offset,\r\n    end,\r\n    stride,\r\n    closed,\r\n    skipFirst\r\n  ) {\r\n    const coordinates = this.coordinates;\r\n    let myEnd = coordinates.length;\r\n    const extent = this.getBufferedMaxExtent();\r\n    if (skipFirst) {\r\n      offset += stride;\r\n    }\r\n    let lastXCoord = flatCoordinates[offset];\r\n    let lastYCoord = flatCoordinates[offset + 1];\r\n    const nextCoord = this.tmpCoordinate_;\r\n    let skipped = true;\r\n\r\n    let i, lastRel, nextRel;\r\n    for (i = offset + stride; i < end; i += stride) {\r\n      nextCoord[0] = flatCoordinates[i];\r\n      nextCoord[1] = flatCoordinates[i + 1];\r\n      nextRel = coordinateRelationship(extent, nextCoord);\r\n      if (nextRel !== lastRel) {\r\n        if (skipped) {\r\n          coordinates[myEnd++] = lastXCoord;\r\n          coordinates[myEnd++] = lastYCoord;\r\n          skipped = false;\r\n        }\r\n        coordinates[myEnd++] = nextCoord[0];\r\n        coordinates[myEnd++] = nextCoord[1];\r\n      } else if (nextRel === Relationship.INTERSECTING) {\r\n        coordinates[myEnd++] = nextCoord[0];\r\n        coordinates[myEnd++] = nextCoord[1];\r\n        skipped = false;\r\n      } else {\r\n        skipped = true;\r\n      }\r\n      lastXCoord = nextCoord[0];\r\n      lastYCoord = nextCoord[1];\r\n      lastRel = nextRel;\r\n    }\r\n\r\n    // Last coordinate equals first or only one point to append:\r\n    if ((closed && skipped) || i === offset + stride) {\r\n      coordinates[myEnd++] = lastXCoord;\r\n      coordinates[myEnd++] = lastYCoord;\r\n    }\r\n    return myEnd;\r\n  }\r\n\r\n  /**\r\n   * @param {Array<number>} flatCoordinates Flat coordinates.\r\n   * @param {number} offset Offset.\r\n   * @param {Array<number>} ends Ends.\r\n   * @param {number} stride Stride.\r\n   * @param {Array<number>} builderEnds Builder ends.\r\n   * @return {number} Offset.\r\n   */\r\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\r\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\r\n      const end = ends[i];\r\n      const builderEnd = this.appendFlatLineCoordinates(\r\n        flatCoordinates,\r\n        offset,\r\n        end,\r\n        stride,\r\n        false,\r\n        false\r\n      );\r\n      builderEnds.push(builderEnd);\r\n      offset = end;\r\n    }\r\n    return offset;\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\r\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\r\n   * @param {Function} renderer Renderer.\r\n   * @param {Function} hitDetectionRenderer Renderer.\r\n   */\r\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {\r\n    this.beginGeometry(geometry, feature);\r\n\r\n    const type = geometry.getType();\r\n    const stride = geometry.getStride();\r\n    const builderBegin = this.coordinates.length;\r\n\r\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\r\n    let offset;\r\n\r\n    switch (type) {\r\n      case 'MultiPolygon':\r\n        flatCoordinates =\r\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\r\n            geometry\r\n          ).getOrientedFlatCoordinates();\r\n        builderEndss = [];\r\n        const endss =\r\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\r\n            geometry\r\n          ).getEndss();\r\n        offset = 0;\r\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\r\n          const myEnds = [];\r\n          offset = this.drawCustomCoordinates_(\r\n            flatCoordinates,\r\n            offset,\r\n            endss[i],\r\n            stride,\r\n            myEnds\r\n          );\r\n          builderEndss.push(myEnds);\r\n        }\r\n        this.instructions.push([\r\n          CanvasInstruction.CUSTOM,\r\n          builderBegin,\r\n          builderEndss,\r\n          geometry,\r\n          renderer,\r\n          inflateMultiCoordinatesArray,\r\n        ]);\r\n        this.hitDetectionInstructions.push([\r\n          CanvasInstruction.CUSTOM,\r\n          builderBegin,\r\n          builderEndss,\r\n          geometry,\r\n          hitDetectionRenderer || renderer,\r\n          inflateMultiCoordinatesArray,\r\n        ]);\r\n        break;\r\n      case 'Polygon':\r\n      case 'MultiLineString':\r\n        builderEnds = [];\r\n        flatCoordinates =\r\n          type == 'Polygon'\r\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\r\n                geometry\r\n              ).getOrientedFlatCoordinates()\r\n            : geometry.getFlatCoordinates();\r\n        offset = this.drawCustomCoordinates_(\r\n          flatCoordinates,\r\n          0,\r\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\r\n            geometry\r\n          ).getEnds(),\r\n          stride,\r\n          builderEnds\r\n        );\r\n        this.instructions.push([\r\n          CanvasInstruction.CUSTOM,\r\n          builderBegin,\r\n          builderEnds,\r\n          geometry,\r\n          renderer,\r\n          inflateCoordinatesArray,\r\n        ]);\r\n        this.hitDetectionInstructions.push([\r\n          CanvasInstruction.CUSTOM,\r\n          builderBegin,\r\n          builderEnds,\r\n          geometry,\r\n          hitDetectionRenderer || renderer,\r\n          inflateCoordinatesArray,\r\n        ]);\r\n        break;\r\n      case 'LineString':\r\n      case 'Circle':\r\n        flatCoordinates = geometry.getFlatCoordinates();\r\n        builderEnd = this.appendFlatLineCoordinates(\r\n          flatCoordinates,\r\n          0,\r\n          flatCoordinates.length,\r\n          stride,\r\n          false,\r\n          false\r\n        );\r\n        this.instructions.push([\r\n          CanvasInstruction.CUSTOM,\r\n          builderBegin,\r\n          builderEnd,\r\n          geometry,\r\n          renderer,\r\n          inflateCoordinates,\r\n        ]);\r\n        this.hitDetectionInstructions.push([\r\n          CanvasInstruction.CUSTOM,\r\n          builderBegin,\r\n          builderEnd,\r\n          geometry,\r\n          hitDetectionRenderer || renderer,\r\n          inflateCoordinates,\r\n        ]);\r\n        break;\r\n      case 'MultiPoint':\r\n        flatCoordinates = geometry.getFlatCoordinates();\r\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\r\n\r\n        if (builderEnd > builderBegin) {\r\n          this.instructions.push([\r\n            CanvasInstruction.CUSTOM,\r\n            builderBegin,\r\n            builderEnd,\r\n            geometry,\r\n            renderer,\r\n            inflateCoordinates,\r\n          ]);\r\n          this.hitDetectionInstructions.push([\r\n            CanvasInstruction.CUSTOM,\r\n            builderBegin,\r\n            builderEnd,\r\n            geometry,\r\n            hitDetectionRenderer || renderer,\r\n            inflateCoordinates,\r\n          ]);\r\n        }\r\n        break;\r\n      case 'Point':\r\n        flatCoordinates = geometry.getFlatCoordinates();\r\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\r\n        builderEnd = this.coordinates.length;\r\n\r\n        this.instructions.push([\r\n          CanvasInstruction.CUSTOM,\r\n          builderBegin,\r\n          builderEnd,\r\n          geometry,\r\n          renderer,\r\n        ]);\r\n        this.hitDetectionInstructions.push([\r\n          CanvasInstruction.CUSTOM,\r\n          builderBegin,\r\n          builderEnd,\r\n          geometry,\r\n          hitDetectionRenderer || renderer,\r\n        ]);\r\n        break;\r\n      default:\r\n    }\r\n    this.endGeometry(feature);\r\n  }\r\n\r\n  /**\r\n   * @protected\r\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\r\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\r\n   */\r\n  beginGeometry(geometry, feature) {\r\n    this.beginGeometryInstruction1_ = [\r\n      CanvasInstruction.BEGIN_GEOMETRY,\r\n      feature,\r\n      0,\r\n      geometry,\r\n    ];\r\n    this.instructions.push(this.beginGeometryInstruction1_);\r\n    this.beginGeometryInstruction2_ = [\r\n      CanvasInstruction.BEGIN_GEOMETRY,\r\n      feature,\r\n      0,\r\n      geometry,\r\n    ];\r\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\r\n  }\r\n\r\n  /**\r\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\r\n   */\r\n  finish() {\r\n    return {\r\n      instructions: this.instructions,\r\n      hitDetectionInstructions: this.hitDetectionInstructions,\r\n      coordinates: this.coordinates,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Reverse the hit detection instructions.\r\n   */\r\n  reverseHitDetectionInstructions() {\r\n    const hitDetectionInstructions = this.hitDetectionInstructions;\r\n    // step 1 - reverse array\r\n    hitDetectionInstructions.reverse();\r\n    // step 2 - reverse instructions within geometry blocks\r\n    let i;\r\n    const n = hitDetectionInstructions.length;\r\n    let instruction;\r\n    let type;\r\n    let begin = -1;\r\n    for (i = 0; i < n; ++i) {\r\n      instruction = hitDetectionInstructions[i];\r\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\r\n      if (type == CanvasInstruction.END_GEOMETRY) {\r\n        begin = i;\r\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\r\n        instruction[2] = i;\r\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\r\n        begin = -1;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\r\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\r\n   */\r\n  setFillStrokeStyle(fillStyle, strokeStyle) {\r\n    const state = this.state;\r\n    if (fillStyle) {\r\n      const fillStyleColor = fillStyle.getColor();\r\n      state.fillStyle = asColorLike(\r\n        fillStyleColor ? fillStyleColor : defaultFillStyle\r\n      );\r\n    } else {\r\n      state.fillStyle = undefined;\r\n    }\r\n    if (strokeStyle) {\r\n      const strokeStyleColor = strokeStyle.getColor();\r\n      state.strokeStyle = asColorLike(\r\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\r\n      );\r\n      const strokeStyleLineCap = strokeStyle.getLineCap();\r\n      state.lineCap =\r\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\r\n      const strokeStyleLineDash = strokeStyle.getLineDash();\r\n      state.lineDash = strokeStyleLineDash\r\n        ? strokeStyleLineDash.slice()\r\n        : defaultLineDash;\r\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\r\n      state.lineDashOffset = strokeStyleLineDashOffset\r\n        ? strokeStyleLineDashOffset\r\n        : defaultLineDashOffset;\r\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\r\n      state.lineJoin =\r\n        strokeStyleLineJoin !== undefined\r\n          ? strokeStyleLineJoin\r\n          : defaultLineJoin;\r\n      const strokeStyleWidth = strokeStyle.getWidth();\r\n      state.lineWidth =\r\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\r\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\r\n      state.miterLimit =\r\n        strokeStyleMiterLimit !== undefined\r\n          ? strokeStyleMiterLimit\r\n          : defaultMiterLimit;\r\n\r\n      if (state.lineWidth > this.maxLineWidth) {\r\n        this.maxLineWidth = state.lineWidth;\r\n        // invalidate the buffered max extent cache\r\n        this.bufferedMaxExtent_ = null;\r\n      }\r\n    } else {\r\n      state.strokeStyle = undefined;\r\n      state.lineCap = undefined;\r\n      state.lineDash = null;\r\n      state.lineDashOffset = undefined;\r\n      state.lineJoin = undefined;\r\n      state.lineWidth = undefined;\r\n      state.miterLimit = undefined;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\r\n   * @return {Array<*>} Fill instruction.\r\n   */\r\n  createFill(state) {\r\n    const fillStyle = state.fillStyle;\r\n    /** @type {Array<*>} */\r\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\r\n    if (typeof fillStyle !== 'string') {\r\n      // Fill is a pattern or gradient - align it!\r\n      fillInstruction.push(true);\r\n    }\r\n    return fillInstruction;\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\r\n   */\r\n  applyStroke(state) {\r\n    this.instructions.push(this.createStroke(state));\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\r\n   * @return {Array<*>} Stroke instruction.\r\n   */\r\n  createStroke(state) {\r\n    return [\r\n      CanvasInstruction.SET_STROKE_STYLE,\r\n      state.strokeStyle,\r\n      state.lineWidth * this.pixelRatio,\r\n      state.lineCap,\r\n      state.lineJoin,\r\n      state.miterLimit,\r\n      this.applyPixelRatio(state.lineDash),\r\n      state.lineDashOffset * this.pixelRatio,\r\n    ];\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\r\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\r\n   */\r\n  updateFillStyle(state, createFill) {\r\n    const fillStyle = state.fillStyle;\r\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\r\n      if (fillStyle !== undefined) {\r\n        this.instructions.push(createFill.call(this, state));\r\n      }\r\n      state.currentFillStyle = fillStyle;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\r\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\r\n   */\r\n  updateStrokeStyle(state, applyStroke) {\r\n    const strokeStyle = state.strokeStyle;\r\n    const lineCap = state.lineCap;\r\n    const lineDash = state.lineDash;\r\n    const lineDashOffset = state.lineDashOffset;\r\n    const lineJoin = state.lineJoin;\r\n    const lineWidth = state.lineWidth;\r\n    const miterLimit = state.miterLimit;\r\n    if (\r\n      state.currentStrokeStyle != strokeStyle ||\r\n      state.currentLineCap != lineCap ||\r\n      (lineDash != state.currentLineDash &&\r\n        !equals(state.currentLineDash, lineDash)) ||\r\n      state.currentLineDashOffset != lineDashOffset ||\r\n      state.currentLineJoin != lineJoin ||\r\n      state.currentLineWidth != lineWidth ||\r\n      state.currentMiterLimit != miterLimit\r\n    ) {\r\n      if (strokeStyle !== undefined) {\r\n        applyStroke.call(this, state);\r\n      }\r\n      state.currentStrokeStyle = strokeStyle;\r\n      state.currentLineCap = lineCap;\r\n      state.currentLineDash = lineDash;\r\n      state.currentLineDashOffset = lineDashOffset;\r\n      state.currentLineJoin = lineJoin;\r\n      state.currentLineWidth = lineWidth;\r\n      state.currentMiterLimit = miterLimit;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\r\n   */\r\n  endGeometry(feature) {\r\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\r\n    this.beginGeometryInstruction1_ = null;\r\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\r\n    this.beginGeometryInstruction2_ = null;\r\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\r\n    this.instructions.push(endGeometryInstruction);\r\n    this.hitDetectionInstructions.push(endGeometryInstruction);\r\n  }\r\n\r\n  /**\r\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\r\n   * provided to the constructor.  To account for symbolizers that may intersect\r\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\r\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\r\n   * @protected\r\n   */\r\n  getBufferedMaxExtent() {\r\n    if (!this.bufferedMaxExtent_) {\r\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\r\n      if (this.maxLineWidth > 0) {\r\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\r\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\r\n      }\r\n    }\r\n    return this.bufferedMaxExtent_;\r\n  }\r\n}\r\n\r\nexport default CanvasBuilder;\r\n","/**\r\n * @module ol/render/canvas/ImageBuilder\r\n */\r\nimport CanvasBuilder from './Builder.js';\r\nimport CanvasInstruction from './Instruction.js';\r\n\r\nclass CanvasImageBuilder extends CanvasBuilder {\r\n  /**\r\n   * @param {number} tolerance Tolerance.\r\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\r\n   * @param {number} resolution Resolution.\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   */\r\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\r\n    super(tolerance, maxExtent, resolution, pixelRatio);\r\n\r\n    /**\r\n     * @private\r\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\r\n     */\r\n    this.hitDetectionImage_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\r\n     */\r\n    this.image_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.imagePixelRatio_ = undefined;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.anchorX_ = undefined;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.anchorY_ = undefined;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.height_ = undefined;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.opacity_ = undefined;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.originX_ = undefined;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.originY_ = undefined;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean|undefined}\r\n     */\r\n    this.rotateWithView_ = undefined;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.rotation_ = undefined;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../../size.js\").Size|undefined}\r\n     */\r\n    this.scale_ = undefined;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.width_ = undefined;\r\n\r\n    /**\r\n     * @private\r\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\r\n     */\r\n    this.declutterMode_ = undefined;\r\n\r\n    /**\r\n     * Data shared with a text builder for combined decluttering.\r\n     * @private\r\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\r\n     */\r\n    this.declutterImageWithText_ = undefined;\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\r\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\r\n   */\r\n  drawPoint(pointGeometry, feature) {\r\n    if (!this.image_) {\r\n      return;\r\n    }\r\n    this.beginGeometry(pointGeometry, feature);\r\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\r\n    const stride = pointGeometry.getStride();\r\n    const myBegin = this.coordinates.length;\r\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\r\n    this.instructions.push([\r\n      CanvasInstruction.DRAW_IMAGE,\r\n      myBegin,\r\n      myEnd,\r\n      this.image_,\r\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\r\n      this.anchorX_ * this.imagePixelRatio_,\r\n      this.anchorY_ * this.imagePixelRatio_,\r\n      Math.ceil(this.height_ * this.imagePixelRatio_),\r\n      this.opacity_,\r\n      this.originX_ * this.imagePixelRatio_,\r\n      this.originY_ * this.imagePixelRatio_,\r\n      this.rotateWithView_,\r\n      this.rotation_,\r\n      [\r\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\r\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\r\n      ],\r\n      Math.ceil(this.width_ * this.imagePixelRatio_),\r\n      this.declutterMode_,\r\n      this.declutterImageWithText_,\r\n    ]);\r\n    this.hitDetectionInstructions.push([\r\n      CanvasInstruction.DRAW_IMAGE,\r\n      myBegin,\r\n      myEnd,\r\n      this.hitDetectionImage_,\r\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\r\n      this.anchorX_,\r\n      this.anchorY_,\r\n      this.height_,\r\n      this.opacity_,\r\n      this.originX_,\r\n      this.originY_,\r\n      this.rotateWithView_,\r\n      this.rotation_,\r\n      this.scale_,\r\n      this.width_,\r\n      this.declutterMode_,\r\n      this.declutterImageWithText_,\r\n    ]);\r\n    this.endGeometry(feature);\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\r\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\r\n   */\r\n  drawMultiPoint(multiPointGeometry, feature) {\r\n    if (!this.image_) {\r\n      return;\r\n    }\r\n    this.beginGeometry(multiPointGeometry, feature);\r\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\r\n    const stride = multiPointGeometry.getStride();\r\n    const myBegin = this.coordinates.length;\r\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\r\n    this.instructions.push([\r\n      CanvasInstruction.DRAW_IMAGE,\r\n      myBegin,\r\n      myEnd,\r\n      this.image_,\r\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\r\n      this.anchorX_ * this.imagePixelRatio_,\r\n      this.anchorY_ * this.imagePixelRatio_,\r\n      Math.ceil(this.height_ * this.imagePixelRatio_),\r\n      this.opacity_,\r\n      this.originX_ * this.imagePixelRatio_,\r\n      this.originY_ * this.imagePixelRatio_,\r\n      this.rotateWithView_,\r\n      this.rotation_,\r\n      [\r\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\r\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\r\n      ],\r\n      Math.ceil(this.width_ * this.imagePixelRatio_),\r\n      this.declutterMode_,\r\n      this.declutterImageWithText_,\r\n    ]);\r\n    this.hitDetectionInstructions.push([\r\n      CanvasInstruction.DRAW_IMAGE,\r\n      myBegin,\r\n      myEnd,\r\n      this.hitDetectionImage_,\r\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\r\n      this.anchorX_,\r\n      this.anchorY_,\r\n      this.height_,\r\n      this.opacity_,\r\n      this.originX_,\r\n      this.originY_,\r\n      this.rotateWithView_,\r\n      this.rotation_,\r\n      this.scale_,\r\n      this.width_,\r\n      this.declutterMode_,\r\n      this.declutterImageWithText_,\r\n    ]);\r\n    this.endGeometry(feature);\r\n  }\r\n\r\n  /**\r\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\r\n   */\r\n  finish() {\r\n    this.reverseHitDetectionInstructions();\r\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\r\n    this.anchorX_ = undefined;\r\n    this.anchorY_ = undefined;\r\n    this.hitDetectionImage_ = null;\r\n    this.image_ = null;\r\n    this.imagePixelRatio_ = undefined;\r\n    this.height_ = undefined;\r\n    this.scale_ = undefined;\r\n    this.opacity_ = undefined;\r\n    this.originX_ = undefined;\r\n    this.originY_ = undefined;\r\n    this.rotateWithView_ = undefined;\r\n    this.rotation_ = undefined;\r\n    this.width_ = undefined;\r\n    return super.finish();\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\r\n   * @param {Object} [sharedData] Shared data.\r\n   */\r\n  setImageStyle(imageStyle, sharedData) {\r\n    const anchor = imageStyle.getAnchor();\r\n    const size = imageStyle.getSize();\r\n    const origin = imageStyle.getOrigin();\r\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\r\n    this.anchorX_ = anchor[0];\r\n    this.anchorY_ = anchor[1];\r\n    this.hitDetectionImage_ = imageStyle.getHitDetectionImage();\r\n    this.image_ = imageStyle.getImage(this.pixelRatio);\r\n    this.height_ = size[1];\r\n    this.opacity_ = imageStyle.getOpacity();\r\n    this.originX_ = origin[0];\r\n    this.originY_ = origin[1];\r\n    this.rotateWithView_ = imageStyle.getRotateWithView();\r\n    this.rotation_ = imageStyle.getRotation();\r\n    this.scale_ = imageStyle.getScaleArray();\r\n    this.width_ = size[0];\r\n    this.declutterMode_ = imageStyle.getDeclutterMode();\r\n    this.declutterImageWithText_ = sharedData;\r\n  }\r\n}\r\n\r\nexport default CanvasImageBuilder;\r\n","/**\r\n * @module ol/render/canvas/LineStringBuilder\r\n */\r\nimport CanvasBuilder from './Builder.js';\r\nimport CanvasInstruction, {\r\n  beginPathInstruction,\r\n  strokeInstruction,\r\n} from './Instruction.js';\r\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\r\n\r\nclass CanvasLineStringBuilder extends CanvasBuilder {\r\n  /**\r\n   * @param {number} tolerance Tolerance.\r\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\r\n   * @param {number} resolution Resolution.\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   */\r\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\r\n    super(tolerance, maxExtent, resolution, pixelRatio);\r\n  }\r\n\r\n  /**\r\n   * @param {Array<number>} flatCoordinates Flat coordinates.\r\n   * @param {number} offset Offset.\r\n   * @param {number} end End.\r\n   * @param {number} stride Stride.\r\n   * @private\r\n   * @return {number} end.\r\n   */\r\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\r\n    const myBegin = this.coordinates.length;\r\n    const myEnd = this.appendFlatLineCoordinates(\r\n      flatCoordinates,\r\n      offset,\r\n      end,\r\n      stride,\r\n      false,\r\n      false\r\n    );\r\n    const moveToLineToInstruction = [\r\n      CanvasInstruction.MOVE_TO_LINE_TO,\r\n      myBegin,\r\n      myEnd,\r\n    ];\r\n    this.instructions.push(moveToLineToInstruction);\r\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\r\n    return end;\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\r\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\r\n   */\r\n  drawLineString(lineStringGeometry, feature) {\r\n    const state = this.state;\r\n    const strokeStyle = state.strokeStyle;\r\n    const lineWidth = state.lineWidth;\r\n    if (strokeStyle === undefined || lineWidth === undefined) {\r\n      return;\r\n    }\r\n    this.updateStrokeStyle(state, this.applyStroke);\r\n    this.beginGeometry(lineStringGeometry, feature);\r\n    this.hitDetectionInstructions.push(\r\n      [\r\n        CanvasInstruction.SET_STROKE_STYLE,\r\n        state.strokeStyle,\r\n        state.lineWidth,\r\n        state.lineCap,\r\n        state.lineJoin,\r\n        state.miterLimit,\r\n        defaultLineDash,\r\n        defaultLineDashOffset,\r\n      ],\r\n      beginPathInstruction\r\n    );\r\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\r\n    const stride = lineStringGeometry.getStride();\r\n    this.drawFlatCoordinates_(\r\n      flatCoordinates,\r\n      0,\r\n      flatCoordinates.length,\r\n      stride\r\n    );\r\n    this.hitDetectionInstructions.push(strokeInstruction);\r\n    this.endGeometry(feature);\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\r\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\r\n   */\r\n  drawMultiLineString(multiLineStringGeometry, feature) {\r\n    const state = this.state;\r\n    const strokeStyle = state.strokeStyle;\r\n    const lineWidth = state.lineWidth;\r\n    if (strokeStyle === undefined || lineWidth === undefined) {\r\n      return;\r\n    }\r\n    this.updateStrokeStyle(state, this.applyStroke);\r\n    this.beginGeometry(multiLineStringGeometry, feature);\r\n    this.hitDetectionInstructions.push(\r\n      [\r\n        CanvasInstruction.SET_STROKE_STYLE,\r\n        state.strokeStyle,\r\n        state.lineWidth,\r\n        state.lineCap,\r\n        state.lineJoin,\r\n        state.miterLimit,\r\n        state.lineDash,\r\n        state.lineDashOffset,\r\n      ],\r\n      beginPathInstruction\r\n    );\r\n    const ends = multiLineStringGeometry.getEnds();\r\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\r\n    const stride = multiLineStringGeometry.getStride();\r\n    let offset = 0;\r\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\r\n      offset = this.drawFlatCoordinates_(\r\n        flatCoordinates,\r\n        offset,\r\n        /** @type {number} */ (ends[i]),\r\n        stride\r\n      );\r\n    }\r\n    this.hitDetectionInstructions.push(strokeInstruction);\r\n    this.endGeometry(feature);\r\n  }\r\n\r\n  /**\r\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\r\n   */\r\n  finish() {\r\n    const state = this.state;\r\n    if (\r\n      state.lastStroke != undefined &&\r\n      state.lastStroke != this.coordinates.length\r\n    ) {\r\n      this.instructions.push(strokeInstruction);\r\n    }\r\n    this.reverseHitDetectionInstructions();\r\n    this.state = null;\r\n    return super.finish();\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\r\n   */\r\n  applyStroke(state) {\r\n    if (\r\n      state.lastStroke != undefined &&\r\n      state.lastStroke != this.coordinates.length\r\n    ) {\r\n      this.instructions.push(strokeInstruction);\r\n      state.lastStroke = this.coordinates.length;\r\n    }\r\n    state.lastStroke = 0;\r\n    super.applyStroke(state);\r\n    this.instructions.push(beginPathInstruction);\r\n  }\r\n}\r\n\r\nexport default CanvasLineStringBuilder;\r\n","/**\r\n * @module ol/render/canvas/PolygonBuilder\r\n */\r\nimport CanvasBuilder from './Builder.js';\r\nimport CanvasInstruction, {\r\n  beginPathInstruction,\r\n  closePathInstruction,\r\n  fillInstruction,\r\n  strokeInstruction,\r\n} from './Instruction.js';\r\nimport {defaultFillStyle} from '../canvas.js';\r\nimport {snap} from '../../geom/flat/simplify.js';\r\n\r\nclass CanvasPolygonBuilder extends CanvasBuilder {\r\n  /**\r\n   * @param {number} tolerance Tolerance.\r\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\r\n   * @param {number} resolution Resolution.\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   */\r\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\r\n    super(tolerance, maxExtent, resolution, pixelRatio);\r\n  }\r\n\r\n  /**\r\n   * @param {Array<number>} flatCoordinates Flat coordinates.\r\n   * @param {number} offset Offset.\r\n   * @param {Array<number>} ends Ends.\r\n   * @param {number} stride Stride.\r\n   * @private\r\n   * @return {number} End.\r\n   */\r\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\r\n    const state = this.state;\r\n    const fill = state.fillStyle !== undefined;\r\n    const stroke = state.strokeStyle !== undefined;\r\n    const numEnds = ends.length;\r\n    this.instructions.push(beginPathInstruction);\r\n    this.hitDetectionInstructions.push(beginPathInstruction);\r\n    for (let i = 0; i < numEnds; ++i) {\r\n      const end = ends[i];\r\n      const myBegin = this.coordinates.length;\r\n      const myEnd = this.appendFlatLineCoordinates(\r\n        flatCoordinates,\r\n        offset,\r\n        end,\r\n        stride,\r\n        true,\r\n        !stroke\r\n      );\r\n      const moveToLineToInstruction = [\r\n        CanvasInstruction.MOVE_TO_LINE_TO,\r\n        myBegin,\r\n        myEnd,\r\n      ];\r\n      this.instructions.push(moveToLineToInstruction);\r\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\r\n      if (stroke) {\r\n        // Performance optimization: only call closePath() when we have a stroke.\r\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\r\n        this.instructions.push(closePathInstruction);\r\n        this.hitDetectionInstructions.push(closePathInstruction);\r\n      }\r\n      offset = end;\r\n    }\r\n    if (fill) {\r\n      this.instructions.push(fillInstruction);\r\n      this.hitDetectionInstructions.push(fillInstruction);\r\n    }\r\n    if (stroke) {\r\n      this.instructions.push(strokeInstruction);\r\n      this.hitDetectionInstructions.push(strokeInstruction);\r\n    }\r\n    return offset;\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\r\n   * @param {import(\"../../Feature.js\").default} feature Feature.\r\n   */\r\n  drawCircle(circleGeometry, feature) {\r\n    const state = this.state;\r\n    const fillStyle = state.fillStyle;\r\n    const strokeStyle = state.strokeStyle;\r\n    if (fillStyle === undefined && strokeStyle === undefined) {\r\n      return;\r\n    }\r\n    this.setFillStrokeStyles_();\r\n    this.beginGeometry(circleGeometry, feature);\r\n    if (state.fillStyle !== undefined) {\r\n      this.hitDetectionInstructions.push([\r\n        CanvasInstruction.SET_FILL_STYLE,\r\n        defaultFillStyle,\r\n      ]);\r\n    }\r\n    if (state.strokeStyle !== undefined) {\r\n      this.hitDetectionInstructions.push([\r\n        CanvasInstruction.SET_STROKE_STYLE,\r\n        state.strokeStyle,\r\n        state.lineWidth,\r\n        state.lineCap,\r\n        state.lineJoin,\r\n        state.miterLimit,\r\n        state.lineDash,\r\n        state.lineDashOffset,\r\n      ]);\r\n    }\r\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\r\n    const stride = circleGeometry.getStride();\r\n    const myBegin = this.coordinates.length;\r\n    this.appendFlatLineCoordinates(\r\n      flatCoordinates,\r\n      0,\r\n      flatCoordinates.length,\r\n      stride,\r\n      false,\r\n      false\r\n    );\r\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\r\n    this.instructions.push(beginPathInstruction, circleInstruction);\r\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\r\n    if (state.fillStyle !== undefined) {\r\n      this.instructions.push(fillInstruction);\r\n      this.hitDetectionInstructions.push(fillInstruction);\r\n    }\r\n    if (state.strokeStyle !== undefined) {\r\n      this.instructions.push(strokeInstruction);\r\n      this.hitDetectionInstructions.push(strokeInstruction);\r\n    }\r\n    this.endGeometry(feature);\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\r\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\r\n   */\r\n  drawPolygon(polygonGeometry, feature) {\r\n    const state = this.state;\r\n    const fillStyle = state.fillStyle;\r\n    const strokeStyle = state.strokeStyle;\r\n    if (fillStyle === undefined && strokeStyle === undefined) {\r\n      return;\r\n    }\r\n    this.setFillStrokeStyles_();\r\n    this.beginGeometry(polygonGeometry, feature);\r\n    if (state.fillStyle !== undefined) {\r\n      this.hitDetectionInstructions.push([\r\n        CanvasInstruction.SET_FILL_STYLE,\r\n        defaultFillStyle,\r\n      ]);\r\n    }\r\n    if (state.strokeStyle !== undefined) {\r\n      this.hitDetectionInstructions.push([\r\n        CanvasInstruction.SET_STROKE_STYLE,\r\n        state.strokeStyle,\r\n        state.lineWidth,\r\n        state.lineCap,\r\n        state.lineJoin,\r\n        state.miterLimit,\r\n        state.lineDash,\r\n        state.lineDashOffset,\r\n      ]);\r\n    }\r\n    const ends = polygonGeometry.getEnds();\r\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\r\n    const stride = polygonGeometry.getStride();\r\n    this.drawFlatCoordinatess_(\r\n      flatCoordinates,\r\n      0,\r\n      /** @type {Array<number>} */ (ends),\r\n      stride\r\n    );\r\n    this.endGeometry(feature);\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\r\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\r\n   */\r\n  drawMultiPolygon(multiPolygonGeometry, feature) {\r\n    const state = this.state;\r\n    const fillStyle = state.fillStyle;\r\n    const strokeStyle = state.strokeStyle;\r\n    if (fillStyle === undefined && strokeStyle === undefined) {\r\n      return;\r\n    }\r\n    this.setFillStrokeStyles_();\r\n    this.beginGeometry(multiPolygonGeometry, feature);\r\n    if (state.fillStyle !== undefined) {\r\n      this.hitDetectionInstructions.push([\r\n        CanvasInstruction.SET_FILL_STYLE,\r\n        defaultFillStyle,\r\n      ]);\r\n    }\r\n    if (state.strokeStyle !== undefined) {\r\n      this.hitDetectionInstructions.push([\r\n        CanvasInstruction.SET_STROKE_STYLE,\r\n        state.strokeStyle,\r\n        state.lineWidth,\r\n        state.lineCap,\r\n        state.lineJoin,\r\n        state.miterLimit,\r\n        state.lineDash,\r\n        state.lineDashOffset,\r\n      ]);\r\n    }\r\n    const endss = multiPolygonGeometry.getEndss();\r\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\r\n    const stride = multiPolygonGeometry.getStride();\r\n    let offset = 0;\r\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\r\n      offset = this.drawFlatCoordinatess_(\r\n        flatCoordinates,\r\n        offset,\r\n        endss[i],\r\n        stride\r\n      );\r\n    }\r\n    this.endGeometry(feature);\r\n  }\r\n\r\n  /**\r\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\r\n   */\r\n  finish() {\r\n    this.reverseHitDetectionInstructions();\r\n    this.state = null;\r\n    // We want to preserve topology when drawing polygons.  Polygons are\r\n    // simplified using quantization and point elimination. However, we might\r\n    // have received a mix of quantized and non-quantized geometries, so ensure\r\n    // that all are quantized by quantizing all coordinates in the batch.\r\n    const tolerance = this.tolerance;\r\n    if (tolerance !== 0) {\r\n      const coordinates = this.coordinates;\r\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\r\n        coordinates[i] = snap(coordinates[i], tolerance);\r\n      }\r\n    }\r\n    return super.finish();\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  setFillStrokeStyles_() {\r\n    const state = this.state;\r\n    const fillStyle = state.fillStyle;\r\n    if (fillStyle !== undefined) {\r\n      this.updateFillStyle(state, this.createFill);\r\n    }\r\n    if (state.strokeStyle !== undefined) {\r\n      this.updateStrokeStyle(state, this.applyStroke);\r\n    }\r\n  }\r\n}\r\n\r\nexport default CanvasPolygonBuilder;\r\n","/**\r\n * @module ol/geom/flat/straightchunk\r\n */\r\n\r\n/**\r\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {number} end End.\r\n * @param {number} stride Stride.\r\n * @return {Array<number>} Start and end of the first suitable chunk of the\r\n * given `flatCoordinates`.\r\n */\r\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\r\n  let chunkStart = offset;\r\n  let chunkEnd = offset;\r\n  let chunkM = 0;\r\n  let m = 0;\r\n  let start = offset;\r\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\r\n  for (i = offset; i < end; i += stride) {\r\n    const x2 = flatCoordinates[i];\r\n    const y2 = flatCoordinates[i + 1];\r\n    if (x1 !== undefined) {\r\n      x23 = x2 - x1;\r\n      y23 = y2 - y1;\r\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\r\n      if (x12 !== undefined) {\r\n        m += m12;\r\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\r\n        if (acos > maxAngle) {\r\n          if (m > chunkM) {\r\n            chunkM = m;\r\n            chunkStart = start;\r\n            chunkEnd = i;\r\n          }\r\n          m = 0;\r\n          start = i - stride;\r\n        }\r\n      }\r\n      m12 = m23;\r\n      x12 = x23;\r\n      y12 = y23;\r\n    }\r\n    x1 = x2;\r\n    y1 = y2;\r\n  }\r\n  m += m23;\r\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\r\n}\r\n","/**\r\n * @module ol/render/canvas/TextBuilder\r\n */\r\nimport CanvasBuilder from './Builder.js';\r\nimport CanvasInstruction from './Instruction.js';\r\nimport {asColorLike} from '../../colorlike.js';\r\nimport {\r\n  defaultFillStyle,\r\n  defaultFont,\r\n  defaultLineCap,\r\n  defaultLineDash,\r\n  defaultLineDashOffset,\r\n  defaultLineJoin,\r\n  defaultLineWidth,\r\n  defaultMiterLimit,\r\n  defaultPadding,\r\n  defaultStrokeStyle,\r\n  defaultTextAlign,\r\n  defaultTextBaseline,\r\n  registerFont,\r\n} from '../canvas.js';\r\nimport {getUid} from '../../util.js';\r\nimport {intersects} from '../../extent.js';\r\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\r\n/**\r\n * @const\r\n * @enum {number}\r\n */\r\nexport const TEXT_ALIGN = {\r\n  'left': 0,\r\n  'end': 0,\r\n  'center': 0.5,\r\n  'right': 1,\r\n  'start': 1,\r\n  'top': 0,\r\n  'middle': 0.5,\r\n  'hanging': 0.2,\r\n  'alphabetic': 0.8,\r\n  'ideographic': 0.8,\r\n  'bottom': 1,\r\n};\r\n\r\nclass CanvasTextBuilder extends CanvasBuilder {\r\n  /**\r\n   * @param {number} tolerance Tolerance.\r\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\r\n   * @param {number} resolution Resolution.\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   */\r\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\r\n    super(tolerance, maxExtent, resolution, pixelRatio);\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<HTMLCanvasElement>}\r\n     */\r\n    this.labels_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {string|Array<string>}\r\n     */\r\n    this.text_ = '';\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.textOffsetX_ = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.textOffsetY_ = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean|undefined}\r\n     */\r\n    this.textRotateWithView_ = undefined;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.textRotation_ = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {?import(\"../canvas.js\").FillState}\r\n     */\r\n    this.textFillState_ = null;\r\n\r\n    /**\r\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\r\n     */\r\n    this.fillStates = {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {?import(\"../canvas.js\").StrokeState}\r\n     */\r\n    this.textStrokeState_ = null;\r\n\r\n    /**\r\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\r\n     */\r\n    this.strokeStates = {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../canvas.js\").TextState}\r\n     */\r\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\r\n\r\n    /**\r\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\r\n     */\r\n    this.textStates = {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {string}\r\n     */\r\n    this.textKey_ = '';\r\n\r\n    /**\r\n     * @private\r\n     * @type {string}\r\n     */\r\n    this.fillKey_ = '';\r\n\r\n    /**\r\n     * @private\r\n     * @type {string}\r\n     */\r\n    this.strokeKey_ = '';\r\n\r\n    /**\r\n     * Data shared with an image builder for combined decluttering.\r\n     * @private\r\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\r\n     */\r\n    this.declutterImageWithText_ = undefined;\r\n  }\r\n\r\n  /**\r\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\r\n   */\r\n  finish() {\r\n    const instructions = super.finish();\r\n    instructions.textStates = this.textStates;\r\n    instructions.fillStates = this.fillStates;\r\n    instructions.strokeStates = this.strokeStates;\r\n    return instructions;\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\r\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\r\n   */\r\n  drawText(geometry, feature) {\r\n    const fillState = this.textFillState_;\r\n    const strokeState = this.textStrokeState_;\r\n    const textState = this.textState_;\r\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\r\n      return;\r\n    }\r\n\r\n    const coordinates = this.coordinates;\r\n    let begin = coordinates.length;\r\n\r\n    const geometryType = geometry.getType();\r\n    let flatCoordinates = null;\r\n    let stride = geometry.getStride();\r\n\r\n    if (\r\n      textState.placement === 'line' &&\r\n      (geometryType == 'LineString' ||\r\n        geometryType == 'MultiLineString' ||\r\n        geometryType == 'Polygon' ||\r\n        geometryType == 'MultiPolygon')\r\n    ) {\r\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\r\n        return;\r\n      }\r\n      let ends;\r\n      flatCoordinates = geometry.getFlatCoordinates();\r\n      if (geometryType == 'LineString') {\r\n        ends = [flatCoordinates.length];\r\n      } else if (geometryType == 'MultiLineString') {\r\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\r\n          geometry\r\n        ).getEnds();\r\n      } else if (geometryType == 'Polygon') {\r\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\r\n          .getEnds()\r\n          .slice(0, 1);\r\n      } else if (geometryType == 'MultiPolygon') {\r\n        const endss =\r\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\r\n            geometry\r\n          ).getEndss();\r\n        ends = [];\r\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\r\n          ends.push(endss[i][0]);\r\n        }\r\n      }\r\n      this.beginGeometry(geometry, feature);\r\n      const textAlign = textState.textAlign;\r\n      // No `justify` support for line placement.\r\n      let flatOffset = 0;\r\n      let flatEnd;\r\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\r\n        if (textAlign == undefined) {\r\n          const range = matchingChunk(\r\n            textState.maxAngle,\r\n            flatCoordinates,\r\n            flatOffset,\r\n            ends[o],\r\n            stride\r\n          );\r\n          flatOffset = range[0];\r\n          flatEnd = range[1];\r\n        } else {\r\n          flatEnd = ends[o];\r\n        }\r\n        for (let i = flatOffset; i < flatEnd; i += stride) {\r\n          coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\r\n        }\r\n        const end = coordinates.length;\r\n        flatOffset = ends[o];\r\n        this.drawChars_(begin, end);\r\n        begin = end;\r\n      }\r\n      this.endGeometry(feature);\r\n    } else {\r\n      let geometryWidths = textState.overflow ? null : [];\r\n      switch (geometryType) {\r\n        case 'Point':\r\n        case 'MultiPoint':\r\n          flatCoordinates =\r\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\r\n              geometry\r\n            ).getFlatCoordinates();\r\n          break;\r\n        case 'LineString':\r\n          flatCoordinates =\r\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\r\n              geometry\r\n            ).getFlatMidpoint();\r\n          break;\r\n        case 'Circle':\r\n          flatCoordinates =\r\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\r\n              geometry\r\n            ).getCenter();\r\n          break;\r\n        case 'MultiLineString':\r\n          flatCoordinates =\r\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\r\n              geometry\r\n            ).getFlatMidpoints();\r\n          stride = 2;\r\n          break;\r\n        case 'Polygon':\r\n          flatCoordinates =\r\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\r\n              geometry\r\n            ).getFlatInteriorPoint();\r\n          if (!textState.overflow) {\r\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\r\n          }\r\n          stride = 3;\r\n          break;\r\n        case 'MultiPolygon':\r\n          const interiorPoints =\r\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\r\n              geometry\r\n            ).getFlatInteriorPoints();\r\n          flatCoordinates = [];\r\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\r\n            if (!textState.overflow) {\r\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\r\n            }\r\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\r\n          }\r\n          if (flatCoordinates.length === 0) {\r\n            return;\r\n          }\r\n          stride = 2;\r\n          break;\r\n        default:\r\n      }\r\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\r\n      if (end === begin) {\r\n        return;\r\n      }\r\n      if (\r\n        geometryWidths &&\r\n        (end - begin) / 2 !== flatCoordinates.length / stride\r\n      ) {\r\n        let beg = begin / 2;\r\n        geometryWidths = geometryWidths.filter((w, i) => {\r\n          const keep =\r\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\r\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\r\n          if (!keep) {\r\n            --beg;\r\n          }\r\n          return keep;\r\n        });\r\n      }\r\n\r\n      this.saveTextStates_();\r\n\r\n      if (textState.backgroundFill || textState.backgroundStroke) {\r\n        this.setFillStrokeStyle(\r\n          textState.backgroundFill,\r\n          textState.backgroundStroke\r\n        );\r\n        if (textState.backgroundFill) {\r\n          this.updateFillStyle(this.state, this.createFill);\r\n          this.hitDetectionInstructions.push(this.createFill(this.state));\r\n        }\r\n        if (textState.backgroundStroke) {\r\n          this.updateStrokeStyle(this.state, this.applyStroke);\r\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\r\n        }\r\n      }\r\n\r\n      this.beginGeometry(geometry, feature);\r\n\r\n      // adjust padding for negative scale\r\n      let padding = textState.padding;\r\n      if (\r\n        padding != defaultPadding &&\r\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\r\n      ) {\r\n        let p0 = textState.padding[0];\r\n        let p1 = textState.padding[1];\r\n        let p2 = textState.padding[2];\r\n        let p3 = textState.padding[3];\r\n        if (textState.scale[0] < 0) {\r\n          p1 = -p1;\r\n          p3 = -p3;\r\n        }\r\n        if (textState.scale[1] < 0) {\r\n          p0 = -p0;\r\n          p2 = -p2;\r\n        }\r\n        padding = [p0, p1, p2, p3];\r\n      }\r\n\r\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\r\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\r\n      // render time.\r\n      const pixelRatio = this.pixelRatio;\r\n      this.instructions.push([\r\n        CanvasInstruction.DRAW_IMAGE,\r\n        begin,\r\n        end,\r\n        null,\r\n        NaN,\r\n        NaN,\r\n        NaN,\r\n        1,\r\n        0,\r\n        0,\r\n        this.textRotateWithView_,\r\n        this.textRotation_,\r\n        [1, 1],\r\n        NaN,\r\n        undefined,\r\n        this.declutterImageWithText_,\r\n        padding == defaultPadding\r\n          ? defaultPadding\r\n          : padding.map(function (p) {\r\n              return p * pixelRatio;\r\n            }),\r\n        !!textState.backgroundFill,\r\n        !!textState.backgroundStroke,\r\n        this.text_,\r\n        this.textKey_,\r\n        this.strokeKey_,\r\n        this.fillKey_,\r\n        this.textOffsetX_,\r\n        this.textOffsetY_,\r\n        geometryWidths,\r\n      ]);\r\n      const scale = 1 / pixelRatio;\r\n      this.hitDetectionInstructions.push([\r\n        CanvasInstruction.DRAW_IMAGE,\r\n        begin,\r\n        end,\r\n        null,\r\n        NaN,\r\n        NaN,\r\n        NaN,\r\n        1,\r\n        0,\r\n        0,\r\n        this.textRotateWithView_,\r\n        this.textRotation_,\r\n        [scale, scale],\r\n        NaN,\r\n        undefined,\r\n        this.declutterImageWithText_,\r\n        padding,\r\n        !!textState.backgroundFill,\r\n        !!textState.backgroundStroke,\r\n        this.text_,\r\n        this.textKey_,\r\n        this.strokeKey_,\r\n        this.fillKey_,\r\n        this.textOffsetX_,\r\n        this.textOffsetY_,\r\n        geometryWidths,\r\n      ]);\r\n\r\n      this.endGeometry(feature);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  saveTextStates_() {\r\n    const strokeState = this.textStrokeState_;\r\n    const textState = this.textState_;\r\n    const fillState = this.textFillState_;\r\n\r\n    const strokeKey = this.strokeKey_;\r\n    if (strokeState) {\r\n      if (!(strokeKey in this.strokeStates)) {\r\n        this.strokeStates[strokeKey] = {\r\n          strokeStyle: strokeState.strokeStyle,\r\n          lineCap: strokeState.lineCap,\r\n          lineDashOffset: strokeState.lineDashOffset,\r\n          lineWidth: strokeState.lineWidth,\r\n          lineJoin: strokeState.lineJoin,\r\n          miterLimit: strokeState.miterLimit,\r\n          lineDash: strokeState.lineDash,\r\n        };\r\n      }\r\n    }\r\n    const textKey = this.textKey_;\r\n    if (!(textKey in this.textStates)) {\r\n      this.textStates[textKey] = {\r\n        font: textState.font,\r\n        textAlign: textState.textAlign || defaultTextAlign,\r\n        justify: textState.justify,\r\n        textBaseline: textState.textBaseline || defaultTextBaseline,\r\n        scale: textState.scale,\r\n      };\r\n    }\r\n    const fillKey = this.fillKey_;\r\n    if (fillState) {\r\n      if (!(fillKey in this.fillStates)) {\r\n        this.fillStates[fillKey] = {\r\n          fillStyle: fillState.fillStyle,\r\n        };\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {number} begin Begin.\r\n   * @param {number} end End.\r\n   */\r\n  drawChars_(begin, end) {\r\n    const strokeState = this.textStrokeState_;\r\n    const textState = this.textState_;\r\n\r\n    const strokeKey = this.strokeKey_;\r\n    const textKey = this.textKey_;\r\n    const fillKey = this.fillKey_;\r\n    this.saveTextStates_();\r\n\r\n    const pixelRatio = this.pixelRatio;\r\n    const baseline = TEXT_ALIGN[textState.textBaseline];\r\n\r\n    const offsetY = this.textOffsetY_ * pixelRatio;\r\n    const text = this.text_;\r\n    const strokeWidth = strokeState\r\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\r\n      : 0;\r\n\r\n    this.instructions.push([\r\n      CanvasInstruction.DRAW_CHARS,\r\n      begin,\r\n      end,\r\n      baseline,\r\n      textState.overflow,\r\n      fillKey,\r\n      textState.maxAngle,\r\n      pixelRatio,\r\n      offsetY,\r\n      strokeKey,\r\n      strokeWidth * pixelRatio,\r\n      text,\r\n      textKey,\r\n      1,\r\n    ]);\r\n    this.hitDetectionInstructions.push([\r\n      CanvasInstruction.DRAW_CHARS,\r\n      begin,\r\n      end,\r\n      baseline,\r\n      textState.overflow,\r\n      fillKey,\r\n      textState.maxAngle,\r\n      1,\r\n      offsetY,\r\n      strokeKey,\r\n      strokeWidth,\r\n      text,\r\n      textKey,\r\n      1 / pixelRatio,\r\n    ]);\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\r\n   * @param {Object} [sharedData] Shared data.\r\n   */\r\n  setTextStyle(textStyle, sharedData) {\r\n    let textState, fillState, strokeState;\r\n    if (!textStyle) {\r\n      this.text_ = '';\r\n    } else {\r\n      const textFillStyle = textStyle.getFill();\r\n      if (!textFillStyle) {\r\n        fillState = null;\r\n        this.textFillState_ = fillState;\r\n      } else {\r\n        fillState = this.textFillState_;\r\n        if (!fillState) {\r\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\r\n          this.textFillState_ = fillState;\r\n        }\r\n        fillState.fillStyle = asColorLike(\r\n          textFillStyle.getColor() || defaultFillStyle\r\n        );\r\n      }\r\n\r\n      const textStrokeStyle = textStyle.getStroke();\r\n      if (!textStrokeStyle) {\r\n        strokeState = null;\r\n        this.textStrokeState_ = strokeState;\r\n      } else {\r\n        strokeState = this.textStrokeState_;\r\n        if (!strokeState) {\r\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\r\n          this.textStrokeState_ = strokeState;\r\n        }\r\n        const lineDash = textStrokeStyle.getLineDash();\r\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\r\n        const lineWidth = textStrokeStyle.getWidth();\r\n        const miterLimit = textStrokeStyle.getMiterLimit();\r\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\r\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\r\n        strokeState.lineDashOffset =\r\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\r\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\r\n        strokeState.lineWidth =\r\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\r\n        strokeState.miterLimit =\r\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\r\n        strokeState.strokeStyle = asColorLike(\r\n          textStrokeStyle.getColor() || defaultStrokeStyle\r\n        );\r\n      }\r\n\r\n      textState = this.textState_;\r\n      const font = textStyle.getFont() || defaultFont;\r\n      registerFont(font);\r\n      const textScale = textStyle.getScaleArray();\r\n      textState.overflow = textStyle.getOverflow();\r\n      textState.font = font;\r\n      textState.maxAngle = textStyle.getMaxAngle();\r\n      textState.placement = textStyle.getPlacement();\r\n      textState.textAlign = textStyle.getTextAlign();\r\n      textState.justify = textStyle.getJustify();\r\n      textState.textBaseline =\r\n        textStyle.getTextBaseline() || defaultTextBaseline;\r\n      textState.backgroundFill = textStyle.getBackgroundFill();\r\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\r\n      textState.padding = textStyle.getPadding() || defaultPadding;\r\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\r\n\r\n      const textOffsetX = textStyle.getOffsetX();\r\n      const textOffsetY = textStyle.getOffsetY();\r\n      const textRotateWithView = textStyle.getRotateWithView();\r\n      const textRotation = textStyle.getRotation();\r\n      this.text_ = textStyle.getText() || '';\r\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\r\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\r\n      this.textRotateWithView_ =\r\n        textRotateWithView === undefined ? false : textRotateWithView;\r\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\r\n\r\n      this.strokeKey_ = strokeState\r\n        ? (typeof strokeState.strokeStyle == 'string'\r\n            ? strokeState.strokeStyle\r\n            : getUid(strokeState.strokeStyle)) +\r\n          strokeState.lineCap +\r\n          strokeState.lineDashOffset +\r\n          '|' +\r\n          strokeState.lineWidth +\r\n          strokeState.lineJoin +\r\n          strokeState.miterLimit +\r\n          '[' +\r\n          strokeState.lineDash.join() +\r\n          ']'\r\n        : '';\r\n      this.textKey_ =\r\n        textState.font +\r\n        textState.scale +\r\n        (textState.textAlign || '?') +\r\n        (textState.justify || '?') +\r\n        (textState.textBaseline || '?');\r\n      this.fillKey_ = fillState\r\n        ? typeof fillState.fillStyle == 'string'\r\n          ? fillState.fillStyle\r\n          : '|' + getUid(fillState.fillStyle)\r\n        : '';\r\n    }\r\n    this.declutterImageWithText_ = sharedData;\r\n  }\r\n}\r\n\r\nexport default CanvasTextBuilder;\r\n","/**\r\n * @module ol/render/canvas/BuilderGroup\r\n */\r\n\r\nimport Builder from './Builder.js';\r\nimport ImageBuilder from './ImageBuilder.js';\r\nimport LineStringBuilder from './LineStringBuilder.js';\r\nimport PolygonBuilder from './PolygonBuilder.js';\r\nimport TextBuilder from './TextBuilder.js';\r\n\r\n/**\r\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\r\n */\r\nconst BATCH_CONSTRUCTORS = {\r\n  'Circle': PolygonBuilder,\r\n  'Default': Builder,\r\n  'Image': ImageBuilder,\r\n  'LineString': LineStringBuilder,\r\n  'Polygon': PolygonBuilder,\r\n  'Text': TextBuilder,\r\n};\r\n\r\nclass BuilderGroup {\r\n  /**\r\n   * @param {number} tolerance Tolerance.\r\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\r\n   * @param {number} resolution Resolution.\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   */\r\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.tolerance_ = tolerance;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../../extent.js\").Extent}\r\n     */\r\n    this.maxExtent_ = maxExtent;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.pixelRatio_ = pixelRatio;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.resolution_ = resolution;\r\n\r\n    /**\r\n     * @private\r\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\r\n     */\r\n    this.buildersByZIndex_ = {};\r\n  }\r\n\r\n  /**\r\n   * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\r\n   */\r\n  finish() {\r\n    const builderInstructions = {};\r\n    for (const zKey in this.buildersByZIndex_) {\r\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\r\n      const builders = this.buildersByZIndex_[zKey];\r\n      for (const builderKey in builders) {\r\n        const builderInstruction = builders[builderKey].finish();\r\n        builderInstructions[zKey][builderKey] = builderInstruction;\r\n      }\r\n    }\r\n    return builderInstructions;\r\n  }\r\n\r\n  /**\r\n   * @param {number|undefined} zIndex Z index.\r\n   * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\r\n   * @return {import(\"../VectorContext.js\").default} Replay.\r\n   */\r\n  getBuilder(zIndex, builderType) {\r\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\r\n    let replays = this.buildersByZIndex_[zIndexKey];\r\n    if (replays === undefined) {\r\n      replays = {};\r\n      this.buildersByZIndex_[zIndexKey] = replays;\r\n    }\r\n    let replay = replays[builderType];\r\n    if (replay === undefined) {\r\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\r\n      replay = new Constructor(\r\n        this.tolerance_,\r\n        this.maxExtent_,\r\n        this.resolution_,\r\n        this.pixelRatio_\r\n      );\r\n      replays[builderType] = replay;\r\n    }\r\n    return replay;\r\n  }\r\n}\r\n\r\nexport default BuilderGroup;\r\n","/**\r\n * @module ol/renderer/Layer\r\n */\r\nimport EventType from '../events/EventType.js';\r\nimport ImageState from '../ImageState.js';\r\nimport Observable from '../Observable.js';\r\nimport {abstract} from '../util.js';\r\n\r\n/**\r\n * @template {import(\"../layer/Layer.js\").default} LayerType\r\n */\r\nclass LayerRenderer extends Observable {\r\n  /**\r\n   * @param {LayerType} layer Layer.\r\n   */\r\n  constructor(layer) {\r\n    super();\r\n\r\n    /**\r\n     * The renderer is initialized and ready to render.\r\n     * @type {boolean}\r\n     */\r\n    this.ready = true;\r\n\r\n    /** @private */\r\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\r\n\r\n    /**\r\n     * @protected\r\n     * @type {LayerType}\r\n     */\r\n    this.layer_ = layer;\r\n\r\n    /**\r\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\r\n     */\r\n    this.declutterExecutorGroup = null;\r\n  }\r\n\r\n  /**\r\n   * Asynchronous layer level hit detection.\r\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\r\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\r\n   * an array of features.\r\n   */\r\n  getFeatures(pixel) {\r\n    return abstract();\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\r\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\r\n   */\r\n  getData(pixel) {\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Determine whether render should be called.\r\n   * @abstract\r\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\r\n   * @return {boolean} Layer is ready to be rendered.\r\n   */\r\n  prepareFrame(frameState) {\r\n    return abstract();\r\n  }\r\n\r\n  /**\r\n   * Render the layer.\r\n   * @abstract\r\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\r\n   * @param {HTMLElement} target Target that may be used to render content to.\r\n   * @return {HTMLElement} The rendered element.\r\n   */\r\n  renderFrame(frameState, target) {\r\n    return abstract();\r\n  }\r\n\r\n  /**\r\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\r\n   * @param {number} zoom Zoom level.\r\n   * @param {import(\"../Tile.js\").default} tile Tile.\r\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\r\n   */\r\n  loadedTileCallback(tiles, zoom, tile) {\r\n    if (!tiles[zoom]) {\r\n      tiles[zoom] = {};\r\n    }\r\n    tiles[zoom][tile.tileCoord.toString()] = tile;\r\n    return undefined;\r\n  }\r\n\r\n  /**\r\n   * Create a function that adds loaded tiles to the tile lookup.\r\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\r\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\r\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\r\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\r\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\r\n   * @protected\r\n   */\r\n  createLoadedTileFinder(source, projection, tiles) {\r\n    return (\r\n      /**\r\n       * @param {number} zoom Zoom level.\r\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\r\n       * @return {boolean} The tile range is fully loaded.\r\n       * @this {LayerRenderer}\r\n       */\r\n      function (zoom, tileRange) {\r\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\r\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\r\n      }.bind(this)\r\n    );\r\n  }\r\n  /**\r\n   * @abstract\r\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\r\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\r\n   * @param {number} hitTolerance Hit tolerance in pixels.\r\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\r\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\r\n   * @return {T|undefined} Callback result.\r\n   * @template T\r\n   */\r\n  forEachFeatureAtCoordinate(\r\n    coordinate,\r\n    frameState,\r\n    hitTolerance,\r\n    callback,\r\n    matches\r\n  ) {\r\n    return undefined;\r\n  }\r\n\r\n  /**\r\n   * @return {LayerType} Layer.\r\n   */\r\n  getLayer() {\r\n    return this.layer_;\r\n  }\r\n\r\n  /**\r\n   * Perform action necessary to get the layer rendered after new fonts have loaded\r\n   * @abstract\r\n   */\r\n  handleFontsChanged() {}\r\n\r\n  /**\r\n   * Handle changes in image state.\r\n   * @param {import(\"../events/Event.js\").default} event Image change event.\r\n   * @private\r\n   */\r\n  handleImageChange_(event) {\r\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\r\n    if (image.getState() === ImageState.LOADED) {\r\n      this.renderIfReadyAndVisible();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Load the image if not already loaded, and register the image change\r\n   * listener if needed.\r\n   * @param {import(\"../ImageBase.js\").default} image Image.\r\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\r\n   * @protected\r\n   */\r\n  loadImage(image) {\r\n    let imageState = image.getState();\r\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\r\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\r\n    }\r\n    if (imageState == ImageState.IDLE) {\r\n      image.load();\r\n      imageState = image.getState();\r\n    }\r\n    return imageState == ImageState.LOADED;\r\n  }\r\n\r\n  /**\r\n   * @protected\r\n   */\r\n  renderIfReadyAndVisible() {\r\n    const layer = this.getLayer();\r\n    if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\r\n      layer.changed();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clean up.\r\n   */\r\n  disposeInternal() {\r\n    delete this.layer_;\r\n    super.disposeInternal();\r\n  }\r\n}\r\n\r\nexport default LayerRenderer;\r\n","/**\r\n * @module ol/renderer/canvas/Layer\r\n */\r\nimport LayerRenderer from '../Layer.js';\r\nimport RenderEvent from '../../render/Event.js';\r\nimport RenderEventType from '../../render/EventType.js';\r\nimport {\r\n  apply as applyTransform,\r\n  compose as composeTransform,\r\n  create as createTransform,\r\n} from '../../transform.js';\r\nimport {asArray} from '../../color.js';\r\nimport {createCanvasContext2D} from '../../dom.js';\r\nimport {equals} from '../../array.js';\r\nimport {\r\n  getBottomLeft,\r\n  getBottomRight,\r\n  getTopLeft,\r\n  getTopRight,\r\n} from '../../extent.js';\r\n\r\n/**\r\n * @type {Array<HTMLCanvasElement>}\r\n */\r\nexport const canvasPool = [];\r\n\r\n/**\r\n * @type {CanvasRenderingContext2D}\r\n */\r\nlet pixelContext = null;\r\n\r\nfunction createPixelContext() {\r\n  const canvas = document.createElement('canvas');\r\n  canvas.width = 1;\r\n  canvas.height = 1;\r\n  pixelContext = canvas.getContext('2d');\r\n}\r\n\r\n/**\r\n * @abstract\r\n * @template {import(\"../../layer/Layer.js\").default} LayerType\r\n * @extends {LayerRenderer<LayerType>}\r\n */\r\nclass CanvasLayerRenderer extends LayerRenderer {\r\n  /**\r\n   * @param {LayerType} layer Layer.\r\n   */\r\n  constructor(layer) {\r\n    super(layer);\r\n\r\n    /**\r\n     * @protected\r\n     * @type {HTMLElement}\r\n     */\r\n    this.container = null;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {number}\r\n     */\r\n    this.renderedResolution;\r\n\r\n    /**\r\n     * A temporary transform.  The values in this transform should only be used in a\r\n     * function that sets the values.\r\n     * @protected\r\n     * @type {import(\"../../transform.js\").Transform}\r\n     */\r\n    this.tempTransform = createTransform();\r\n\r\n    /**\r\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\r\n     * be set when rendering a frame and may be used by other functions after rendering.\r\n     * @protected\r\n     * @type {import(\"../../transform.js\").Transform}\r\n     */\r\n    this.pixelTransform = createTransform();\r\n\r\n    /**\r\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\r\n     * be set when rendering a frame and may be used by other functions after rendering.\r\n     * @protected\r\n     * @type {import(\"../../transform.js\").Transform}\r\n     */\r\n    this.inversePixelTransform = createTransform();\r\n\r\n    /**\r\n     * @type {CanvasRenderingContext2D}\r\n     */\r\n    this.context = null;\r\n\r\n    /**\r\n     * @type {boolean}\r\n     */\r\n    this.containerReused = false;\r\n\r\n    /**\r\n     * @private\r\n     * @type {CanvasRenderingContext2D}\r\n     */\r\n    this.pixelContext_ = null;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {import(\"../../Map.js\").FrameState|null}\r\n     */\r\n    this.frameState = null;\r\n  }\r\n\r\n  /**\r\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\r\n   * @param {number} col The column index.\r\n   * @param {number} row The row index.\r\n   * @return {Uint8ClampedArray|null} The image data.\r\n   */\r\n  getImageData(image, col, row) {\r\n    if (!pixelContext) {\r\n      createPixelContext();\r\n    }\r\n    pixelContext.clearRect(0, 0, 1, 1);\r\n\r\n    let data;\r\n    try {\r\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\r\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\r\n    } catch (err) {\r\n      pixelContext = null;\r\n      return null;\r\n    }\r\n    return data;\r\n  }\r\n\r\n  /**\r\n   * @param {import('../../Map.js').FrameState} frameState Frame state.\r\n   * @return {string} Background color.\r\n   */\r\n  getBackground(frameState) {\r\n    const layer = this.getLayer();\r\n    let background = layer.getBackground();\r\n    if (typeof background === 'function') {\r\n      background = background(frameState.viewState.resolution);\r\n    }\r\n    return background || undefined;\r\n  }\r\n\r\n  /**\r\n   * Get a rendering container from an existing target, if compatible.\r\n   * @param {HTMLElement} target Potential render target.\r\n   * @param {string} transform CSS Transform.\r\n   * @param {string} [backgroundColor] Background color.\r\n   */\r\n  useContainer(target, transform, backgroundColor) {\r\n    const layerClassName = this.getLayer().getClassName();\r\n    let container, context;\r\n    if (\r\n      target &&\r\n      target.className === layerClassName &&\r\n      (!backgroundColor ||\r\n        (target &&\r\n          target.style.backgroundColor &&\r\n          equals(\r\n            asArray(target.style.backgroundColor),\r\n            asArray(backgroundColor)\r\n          )))\r\n    ) {\r\n      const canvas = target.firstElementChild;\r\n      if (canvas instanceof HTMLCanvasElement) {\r\n        context = canvas.getContext('2d');\r\n      }\r\n    }\r\n    if (context && context.canvas.style.transform === transform) {\r\n      // Container of the previous layer renderer can be used.\r\n      this.container = target;\r\n      this.context = context;\r\n      this.containerReused = true;\r\n    } else if (this.containerReused) {\r\n      // Previously reused container cannot be used any more.\r\n      this.container = null;\r\n      this.context = null;\r\n      this.containerReused = false;\r\n    }\r\n    if (!this.container) {\r\n      container = document.createElement('div');\r\n      container.className = layerClassName;\r\n      let style = container.style;\r\n      style.position = 'absolute';\r\n      style.width = '100%';\r\n      style.height = '100%';\r\n      context = createCanvasContext2D();\r\n      const canvas = context.canvas;\r\n      container.appendChild(canvas);\r\n      style = canvas.style;\r\n      style.position = 'absolute';\r\n      style.left = '0';\r\n      style.transformOrigin = 'top left';\r\n      this.container = container;\r\n      this.context = context;\r\n    }\r\n    if (\r\n      !this.containerReused &&\r\n      backgroundColor &&\r\n      !this.container.style.backgroundColor\r\n    ) {\r\n      this.container.style.backgroundColor = backgroundColor;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {CanvasRenderingContext2D} context Context.\r\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\r\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\r\n   * @protected\r\n   */\r\n  clipUnrotated(context, frameState, extent) {\r\n    const topLeft = getTopLeft(extent);\r\n    const topRight = getTopRight(extent);\r\n    const bottomRight = getBottomRight(extent);\r\n    const bottomLeft = getBottomLeft(extent);\r\n\r\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\r\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\r\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\r\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\r\n\r\n    const inverted = this.inversePixelTransform;\r\n    applyTransform(inverted, topLeft);\r\n    applyTransform(inverted, topRight);\r\n    applyTransform(inverted, bottomRight);\r\n    applyTransform(inverted, bottomLeft);\r\n\r\n    context.save();\r\n    context.beginPath();\r\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\r\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\r\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\r\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\r\n    context.clip();\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\r\n   * @param {CanvasRenderingContext2D} context Context.\r\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\r\n   * @private\r\n   */\r\n  dispatchRenderEvent_(type, context, frameState) {\r\n    const layer = this.getLayer();\r\n    if (layer.hasListener(type)) {\r\n      const event = new RenderEvent(\r\n        type,\r\n        this.inversePixelTransform,\r\n        frameState,\r\n        context\r\n      );\r\n      layer.dispatchEvent(event);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {CanvasRenderingContext2D} context Context.\r\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\r\n   * @protected\r\n   */\r\n  preRender(context, frameState) {\r\n    this.frameState = frameState;\r\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\r\n  }\r\n\r\n  /**\r\n   * @param {CanvasRenderingContext2D} context Context.\r\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\r\n   * @protected\r\n   */\r\n  postRender(context, frameState) {\r\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\r\n  }\r\n\r\n  /**\r\n   * Creates a transform for rendering to an element that will be rotated after rendering.\r\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\r\n   * @param {number} resolution Resolution.\r\n   * @param {number} rotation Rotation.\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   * @param {number} width Width of the rendered element (in pixels).\r\n   * @param {number} height Height of the rendered element (in pixels).\r\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\r\n   * @protected\r\n   * @return {!import(\"../../transform.js\").Transform} Transform.\r\n   */\r\n  getRenderTransform(\r\n    center,\r\n    resolution,\r\n    rotation,\r\n    pixelRatio,\r\n    width,\r\n    height,\r\n    offsetX\r\n  ) {\r\n    const dx1 = width / 2;\r\n    const dy1 = height / 2;\r\n    const sx = pixelRatio / resolution;\r\n    const sy = -sx;\r\n    const dx2 = -center[0] + offsetX;\r\n    const dy2 = -center[1];\r\n    return composeTransform(\r\n      this.tempTransform,\r\n      dx1,\r\n      dy1,\r\n      sx,\r\n      sy,\r\n      -rotation,\r\n      dx2,\r\n      dy2\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Clean up.\r\n   */\r\n  disposeInternal() {\r\n    delete this.frameState;\r\n    super.disposeInternal();\r\n  }\r\n}\r\n\r\nexport default CanvasLayerRenderer;\r\n","/**\r\n * @module ol/geom/flat/textpath\r\n */\r\nimport {lerp} from '../../math.js';\r\nimport {rotate} from './transform.js';\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Path to put text on.\r\n * @param {number} offset Start offset of the `flatCoordinates`.\r\n * @param {number} end End offset of the `flatCoordinates`.\r\n * @param {number} stride Stride.\r\n * @param {string} text Text to place on the path.\r\n * @param {number} startM m along the path where the text starts.\r\n * @param {number} maxAngle Max angle between adjacent chars in radians.\r\n * @param {number} scale The product of the text scale and the device pixel ratio.\r\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\r\n * @param {string} font The font.\r\n * @param {Object<string, number>} cache A cache of measured widths.\r\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\r\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\r\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\r\n */\r\nexport function drawTextOnPath(\r\n  flatCoordinates,\r\n  offset,\r\n  end,\r\n  stride,\r\n  text,\r\n  startM,\r\n  maxAngle,\r\n  scale,\r\n  measureAndCacheTextWidth,\r\n  font,\r\n  cache,\r\n  rotation\r\n) {\r\n  let x2 = flatCoordinates[offset];\r\n  let y2 = flatCoordinates[offset + 1];\r\n  let x1 = 0;\r\n  let y1 = 0;\r\n  let segmentLength = 0;\r\n  let segmentM = 0;\r\n\r\n  function advance() {\r\n    x1 = x2;\r\n    y1 = y2;\r\n    offset += stride;\r\n    x2 = flatCoordinates[offset];\r\n    y2 = flatCoordinates[offset + 1];\r\n    segmentM += segmentLength;\r\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\r\n  }\r\n  do {\r\n    advance();\r\n  } while (offset < end - stride && segmentM + segmentLength < startM);\r\n\r\n  let interpolate =\r\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\r\n  const beginX = lerp(x1, x2, interpolate);\r\n  const beginY = lerp(y1, y2, interpolate);\r\n\r\n  const startOffset = offset - stride;\r\n  const startLength = segmentM;\r\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\r\n  while (offset < end - stride && segmentM + segmentLength < endM) {\r\n    advance();\r\n  }\r\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\r\n  const endX = lerp(x1, x2, interpolate);\r\n  const endY = lerp(y1, y2, interpolate);\r\n\r\n  // Keep text upright\r\n  let reverse;\r\n  if (rotation) {\r\n    const flat = [beginX, beginY, endX, endY];\r\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\r\n    reverse = flat[0] > flat[2];\r\n  } else {\r\n    reverse = beginX > endX;\r\n  }\r\n\r\n  const PI = Math.PI;\r\n  const result = [];\r\n  const singleSegment = startOffset + stride === offset;\r\n\r\n  offset = startOffset;\r\n  segmentLength = 0;\r\n  segmentM = startLength;\r\n  x2 = flatCoordinates[offset];\r\n  y2 = flatCoordinates[offset + 1];\r\n\r\n  let previousAngle;\r\n  // All on the same segment\r\n  if (singleSegment) {\r\n    advance();\r\n\r\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\r\n    if (reverse) {\r\n      previousAngle += previousAngle > 0 ? -PI : PI;\r\n    }\r\n    const x = (endX + beginX) / 2;\r\n    const y = (endY + beginY) / 2;\r\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\r\n    return result;\r\n  }\r\n\r\n  // rendering across line segments\r\n  text = text.replace(/\\n/g, ' '); // ensure rendering in single-line as all calculations below don't handle multi-lines\r\n\r\n  for (let i = 0, ii = text.length; i < ii; ) {\r\n    advance();\r\n    let angle = Math.atan2(y2 - y1, x2 - x1);\r\n    if (reverse) {\r\n      angle += angle > 0 ? -PI : PI;\r\n    }\r\n    if (previousAngle !== undefined) {\r\n      let delta = angle - previousAngle;\r\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\r\n      if (Math.abs(delta) > maxAngle) {\r\n        return null;\r\n      }\r\n    }\r\n    previousAngle = angle;\r\n\r\n    const iStart = i;\r\n    let charLength = 0;\r\n    for (; i < ii; ++i) {\r\n      const index = reverse ? ii - i - 1 : i;\r\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\r\n      if (\r\n        offset + stride < end &&\r\n        segmentM + segmentLength < startM + charLength + len / 2\r\n      ) {\r\n        break;\r\n      }\r\n      charLength += len;\r\n    }\r\n    if (i === iStart) {\r\n      continue;\r\n    }\r\n    const chars = reverse\r\n      ? text.substring(ii - iStart, ii - i)\r\n      : text.substring(iStart, i);\r\n    interpolate =\r\n      segmentLength === 0\r\n        ? 0\r\n        : (startM + charLength / 2 - segmentM) / segmentLength;\r\n    const x = lerp(x1, x2, interpolate);\r\n    const y = lerp(y1, y2, interpolate);\r\n    result.push([x, y, charLength / 2, angle, chars]);\r\n    startM += charLength;\r\n  }\r\n  return result;\r\n}\r\n","/**\r\n * @module ol/geom/flat/length\r\n */\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {number} end End.\r\n * @param {number} stride Stride.\r\n * @return {number} Length.\r\n */\r\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\r\n  let x1 = flatCoordinates[offset];\r\n  let y1 = flatCoordinates[offset + 1];\r\n  let length = 0;\r\n  for (let i = offset + stride; i < end; i += stride) {\r\n    const x2 = flatCoordinates[i];\r\n    const y2 = flatCoordinates[i + 1];\r\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\r\n    x1 = x2;\r\n    y1 = y2;\r\n  }\r\n  return length;\r\n}\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {number} end End.\r\n * @param {number} stride Stride.\r\n * @return {number} Perimeter.\r\n */\r\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\r\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\r\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\r\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\r\n  perimeter += Math.sqrt(dx * dx + dy * dy);\r\n  return perimeter;\r\n}\r\n","/**\r\n * @module ol/render/canvas/Executor\r\n */\r\nimport CanvasInstruction from './Instruction.js';\r\nimport {TEXT_ALIGN} from './TextBuilder.js';\r\nimport {\r\n  apply as applyTransform,\r\n  compose as composeTransform,\r\n  create as createTransform,\r\n  setFromArray as transformSetFromArray,\r\n} from '../../transform.js';\r\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\r\nimport {\r\n  defaultPadding,\r\n  defaultTextAlign,\r\n  defaultTextBaseline,\r\n  drawImageOrLabel,\r\n  getTextDimensions,\r\n  measureAndCacheTextWidth,\r\n} from '../canvas.js';\r\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\r\nimport {equals} from '../../array.js';\r\nimport {lineStringLength} from '../../geom/flat/length.js';\r\nimport {transform2D} from '../../geom/flat/transform.js';\r\n\r\n/**\r\n * @typedef {Object} BBox\r\n * @property {number} minX Minimal x.\r\n * @property {number} minY Minimal y.\r\n * @property {number} maxX Maximal x.\r\n * @property {number} maxY Maximal y\r\n * @property {*} value Value.\r\n */\r\n\r\n/**\r\n * @typedef {Object} ImageOrLabelDimensions\r\n * @property {number} drawImageX DrawImageX.\r\n * @property {number} drawImageY DrawImageY.\r\n * @property {number} drawImageW DrawImageW.\r\n * @property {number} drawImageH DrawImageH.\r\n * @property {number} originX OriginX.\r\n * @property {number} originY OriginY.\r\n * @property {Array<number>} scale Scale.\r\n * @property {BBox} declutterBox DeclutterBox.\r\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\r\n */\r\n\r\n/**\r\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\r\n */\r\n\r\n/**\r\n * @template T\r\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\r\n */\r\n\r\n/**\r\n * @type {import(\"../../extent.js\").Extent}\r\n */\r\nconst tmpExtent = createEmpty();\r\n\r\n/** @type {import(\"../../coordinate.js\").Coordinate} */\r\nconst p1 = [];\r\n/** @type {import(\"../../coordinate.js\").Coordinate} */\r\nconst p2 = [];\r\n/** @type {import(\"../../coordinate.js\").Coordinate} */\r\nconst p3 = [];\r\n/** @type {import(\"../../coordinate.js\").Coordinate} */\r\nconst p4 = [];\r\n\r\n/**\r\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\r\n * @return {BBox} Declutter bbox.\r\n */\r\nfunction getDeclutterBox(replayImageOrLabelArgs) {\r\n  return replayImageOrLabelArgs[3].declutterBox;\r\n}\r\n\r\nconst rtlRegEx = new RegExp(\r\n  /* eslint-disable prettier/prettier */\r\n  '[' +\r\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\r\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\r\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\r\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\r\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\r\n  ']'\r\n  /* eslint-enable prettier/prettier */\r\n);\r\n\r\n/**\r\n * @param {string} text Text.\r\n * @param {CanvasTextAlign} align Alignment.\r\n * @return {number} Text alignment.\r\n */\r\nfunction horizontalTextAlign(text, align) {\r\n  if ((align === 'start' || align === 'end') && !rtlRegEx.test(text)) {\r\n    align = align === 'start' ? 'left' : 'right';\r\n  }\r\n  return TEXT_ALIGN[align];\r\n}\r\n\r\n/**\r\n * @param {Array<string>} acc Accumulator.\r\n * @param {string} line Line of text.\r\n * @param {number} i Index\r\n * @return {Array<string>} Accumulator.\r\n */\r\nfunction createTextChunks(acc, line, i) {\r\n  if (i > 0) {\r\n    acc.push('\\n', '');\r\n  }\r\n  acc.push(line, '');\r\n  return acc;\r\n}\r\n\r\nclass Executor {\r\n  /**\r\n   * @param {number} resolution Resolution.\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   * @param {boolean} overlaps The replay can have overlapping geometries.\r\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\r\n   */\r\n  constructor(resolution, pixelRatio, overlaps, instructions) {\r\n    /**\r\n     * @protected\r\n     * @type {boolean}\r\n     */\r\n    this.overlaps = overlaps;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {number}\r\n     */\r\n    this.pixelRatio = pixelRatio;\r\n\r\n    /**\r\n     * @protected\r\n     * @const\r\n     * @type {number}\r\n     */\r\n    this.resolution = resolution;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.alignFill_;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {Array<*>}\r\n     */\r\n    this.instructions = instructions.instructions;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {Array<number>}\r\n     */\r\n    this.coordinates = instructions.coordinates;\r\n\r\n    /**\r\n     * @private\r\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\r\n     */\r\n    this.coordinateCache_ = {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {!import(\"../../transform.js\").Transform}\r\n     */\r\n    this.renderedTransform_ = createTransform();\r\n\r\n    /**\r\n     * @protected\r\n     * @type {Array<*>}\r\n     */\r\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<number>}\r\n     */\r\n    this.pixelCoordinates_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.viewRotation_ = 0;\r\n\r\n    /**\r\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\r\n     */\r\n    this.fillStates = instructions.fillStates || {};\r\n\r\n    /**\r\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\r\n     */\r\n    this.strokeStates = instructions.strokeStates || {};\r\n\r\n    /**\r\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\r\n     */\r\n    this.textStates = instructions.textStates || {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {Object<string, Object<string, number>>}\r\n     */\r\n    this.widths_ = {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {Object<string, import(\"../canvas.js\").Label>}\r\n     */\r\n    this.labels_ = {};\r\n  }\r\n\r\n  /**\r\n   * @param {string|Array<string>} text Text.\r\n   * @param {string} textKey Text style key.\r\n   * @param {string} fillKey Fill style key.\r\n   * @param {string} strokeKey Stroke style key.\r\n   * @return {import(\"../canvas.js\").Label} Label.\r\n   */\r\n  createLabel(text, textKey, fillKey, strokeKey) {\r\n    const key = text + textKey + fillKey + strokeKey;\r\n    if (this.labels_[key]) {\r\n      return this.labels_[key];\r\n    }\r\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\r\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\r\n    const textState = this.textStates[textKey];\r\n    const pixelRatio = this.pixelRatio;\r\n    const scale = [\r\n      textState.scale[0] * pixelRatio,\r\n      textState.scale[1] * pixelRatio,\r\n    ];\r\n    const textIsArray = Array.isArray(text);\r\n    const align = textState.justify\r\n      ? TEXT_ALIGN[textState.justify]\r\n      : horizontalTextAlign(\r\n          Array.isArray(text) ? text[0] : text,\r\n          textState.textAlign || defaultTextAlign\r\n        );\r\n    const strokeWidth =\r\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\r\n\r\n    const chunks = textIsArray\r\n      ? text\r\n      : text.split('\\n').reduce(createTextChunks, []);\r\n\r\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\r\n      textState,\r\n      chunks\r\n    );\r\n    const renderWidth = width + strokeWidth;\r\n    const contextInstructions = [];\r\n    // make canvas 2 pixels wider to account for italic text width measurement errors\r\n    const w = (renderWidth + 2) * scale[0];\r\n    const h = (height + strokeWidth) * scale[1];\r\n    /** @type {import(\"../canvas.js\").Label} */\r\n    const label = {\r\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\r\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\r\n      contextInstructions: contextInstructions,\r\n    };\r\n    if (scale[0] != 1 || scale[1] != 1) {\r\n      contextInstructions.push('scale', scale);\r\n    }\r\n    if (strokeKey) {\r\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\r\n      contextInstructions.push('lineWidth', strokeWidth);\r\n      contextInstructions.push('lineCap', strokeState.lineCap);\r\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\r\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\r\n      contextInstructions.push('setLineDash', [strokeState.lineDash]);\r\n      contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\r\n    }\r\n    if (fillKey) {\r\n      contextInstructions.push('fillStyle', fillState.fillStyle);\r\n    }\r\n    contextInstructions.push('textBaseline', 'middle');\r\n    contextInstructions.push('textAlign', 'center');\r\n    const leftRight = 0.5 - align;\r\n    let x = align * renderWidth + leftRight * strokeWidth;\r\n    const strokeInstructions = [];\r\n    const fillInstructions = [];\r\n    let lineHeight = 0;\r\n    let lineOffset = 0;\r\n    let widthHeightIndex = 0;\r\n    let lineWidthIndex = 0;\r\n    let previousFont;\r\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\r\n      const text = chunks[i];\r\n      if (text === '\\n') {\r\n        lineOffset += lineHeight;\r\n        lineHeight = 0;\r\n        x = align * renderWidth + leftRight * strokeWidth;\r\n        ++lineWidthIndex;\r\n        continue;\r\n      }\r\n      const font = chunks[i + 1] || textState.font;\r\n      if (font !== previousFont) {\r\n        if (strokeKey) {\r\n          strokeInstructions.push('font', font);\r\n        }\r\n        if (fillKey) {\r\n          fillInstructions.push('font', font);\r\n        }\r\n        previousFont = font;\r\n      }\r\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\r\n      const fillStrokeArgs = [\r\n        text,\r\n        x +\r\n          leftRight * widths[widthHeightIndex] +\r\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\r\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\r\n      ];\r\n      x += widths[widthHeightIndex];\r\n      if (strokeKey) {\r\n        strokeInstructions.push('strokeText', fillStrokeArgs);\r\n      }\r\n      if (fillKey) {\r\n        fillInstructions.push('fillText', fillStrokeArgs);\r\n      }\r\n      ++widthHeightIndex;\r\n    }\r\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\r\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\r\n    this.labels_[key] = label;\r\n    return label;\r\n  }\r\n\r\n  /**\r\n   * @param {CanvasRenderingContext2D} context Context.\r\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\r\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\r\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\r\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\r\n   * @param {Array<*>} fillInstruction Fill instruction.\r\n   * @param {Array<*>} strokeInstruction Stroke instruction.\r\n   */\r\n  replayTextBackground_(\r\n    context,\r\n    p1,\r\n    p2,\r\n    p3,\r\n    p4,\r\n    fillInstruction,\r\n    strokeInstruction\r\n  ) {\r\n    context.beginPath();\r\n    context.moveTo.apply(context, p1);\r\n    context.lineTo.apply(context, p2);\r\n    context.lineTo.apply(context, p3);\r\n    context.lineTo.apply(context, p4);\r\n    context.lineTo.apply(context, p1);\r\n    if (fillInstruction) {\r\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\r\n      this.fill_(context);\r\n    }\r\n    if (strokeInstruction) {\r\n      this.setStrokeStyle_(\r\n        context,\r\n        /** @type {Array<*>} */ (strokeInstruction)\r\n      );\r\n      context.stroke();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {number} sheetWidth Width of the sprite sheet.\r\n   * @param {number} sheetHeight Height of the sprite sheet.\r\n   * @param {number} centerX X.\r\n   * @param {number} centerY Y.\r\n   * @param {number} width Width.\r\n   * @param {number} height Height.\r\n   * @param {number} anchorX Anchor X.\r\n   * @param {number} anchorY Anchor Y.\r\n   * @param {number} originX Origin X.\r\n   * @param {number} originY Origin Y.\r\n   * @param {number} rotation Rotation.\r\n   * @param {import(\"../../size.js\").Size} scale Scale.\r\n   * @param {boolean} snapToPixel Snap to pixel.\r\n   * @param {Array<number>} padding Padding.\r\n   * @param {boolean} fillStroke Background fill or stroke.\r\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\r\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\r\n   */\r\n  calculateImageOrLabelDimensions_(\r\n    sheetWidth,\r\n    sheetHeight,\r\n    centerX,\r\n    centerY,\r\n    width,\r\n    height,\r\n    anchorX,\r\n    anchorY,\r\n    originX,\r\n    originY,\r\n    rotation,\r\n    scale,\r\n    snapToPixel,\r\n    padding,\r\n    fillStroke,\r\n    feature\r\n  ) {\r\n    anchorX *= scale[0];\r\n    anchorY *= scale[1];\r\n    let x = centerX - anchorX;\r\n    let y = centerY - anchorY;\r\n\r\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\r\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\r\n    const boxW = padding[3] + w * scale[0] + padding[1];\r\n    const boxH = padding[0] + h * scale[1] + padding[2];\r\n    const boxX = x - padding[3];\r\n    const boxY = y - padding[0];\r\n\r\n    if (fillStroke || rotation !== 0) {\r\n      p1[0] = boxX;\r\n      p4[0] = boxX;\r\n      p1[1] = boxY;\r\n      p2[1] = boxY;\r\n      p2[0] = boxX + boxW;\r\n      p3[0] = p2[0];\r\n      p3[1] = boxY + boxH;\r\n      p4[1] = p3[1];\r\n    }\r\n\r\n    let transform;\r\n    if (rotation !== 0) {\r\n      transform = composeTransform(\r\n        createTransform(),\r\n        centerX,\r\n        centerY,\r\n        1,\r\n        1,\r\n        rotation,\r\n        -centerX,\r\n        -centerY\r\n      );\r\n\r\n      applyTransform(transform, p1);\r\n      applyTransform(transform, p2);\r\n      applyTransform(transform, p3);\r\n      applyTransform(transform, p4);\r\n      createOrUpdate(\r\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\r\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\r\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\r\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\r\n        tmpExtent\r\n      );\r\n    } else {\r\n      createOrUpdate(\r\n        Math.min(boxX, boxX + boxW),\r\n        Math.min(boxY, boxY + boxH),\r\n        Math.max(boxX, boxX + boxW),\r\n        Math.max(boxY, boxY + boxH),\r\n        tmpExtent\r\n      );\r\n    }\r\n    if (snapToPixel) {\r\n      x = Math.round(x);\r\n      y = Math.round(y);\r\n    }\r\n    return {\r\n      drawImageX: x,\r\n      drawImageY: y,\r\n      drawImageW: w,\r\n      drawImageH: h,\r\n      originX: originX,\r\n      originY: originY,\r\n      declutterBox: {\r\n        minX: tmpExtent[0],\r\n        minY: tmpExtent[1],\r\n        maxX: tmpExtent[2],\r\n        maxY: tmpExtent[3],\r\n        value: feature,\r\n      },\r\n      canvasTransform: transform,\r\n      scale: scale,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {CanvasRenderingContext2D} context Context.\r\n   * @param {number} contextScale Scale of the context.\r\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\r\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\r\n   * @param {number} opacity Opacity.\r\n   * @param {Array<*>} fillInstruction Fill instruction.\r\n   * @param {Array<*>} strokeInstruction Stroke instruction.\r\n   * @return {boolean} The image or label was rendered.\r\n   */\r\n  replayImageOrLabel_(\r\n    context,\r\n    contextScale,\r\n    imageOrLabel,\r\n    dimensions,\r\n    opacity,\r\n    fillInstruction,\r\n    strokeInstruction\r\n  ) {\r\n    const fillStroke = !!(fillInstruction || strokeInstruction);\r\n\r\n    const box = dimensions.declutterBox;\r\n    const canvas = context.canvas;\r\n    const strokePadding = strokeInstruction\r\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\r\n      : 0;\r\n    const intersects =\r\n      box.minX - strokePadding <= canvas.width / contextScale &&\r\n      box.maxX + strokePadding >= 0 &&\r\n      box.minY - strokePadding <= canvas.height / contextScale &&\r\n      box.maxY + strokePadding >= 0;\r\n\r\n    if (intersects) {\r\n      if (fillStroke) {\r\n        this.replayTextBackground_(\r\n          context,\r\n          p1,\r\n          p2,\r\n          p3,\r\n          p4,\r\n          /** @type {Array<*>} */ (fillInstruction),\r\n          /** @type {Array<*>} */ (strokeInstruction)\r\n        );\r\n      }\r\n      drawImageOrLabel(\r\n        context,\r\n        dimensions.canvasTransform,\r\n        opacity,\r\n        imageOrLabel,\r\n        dimensions.originX,\r\n        dimensions.originY,\r\n        dimensions.drawImageW,\r\n        dimensions.drawImageH,\r\n        dimensions.drawImageX,\r\n        dimensions.drawImageY,\r\n        dimensions.scale\r\n      );\r\n    }\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {CanvasRenderingContext2D} context Context.\r\n   */\r\n  fill_(context) {\r\n    if (this.alignFill_) {\r\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\r\n      const repeatSize = 512 * this.pixelRatio;\r\n      context.save();\r\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\r\n      context.rotate(this.viewRotation_);\r\n    }\r\n    context.fill();\r\n    if (this.alignFill_) {\r\n      context.restore();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {CanvasRenderingContext2D} context Context.\r\n   * @param {Array<*>} instruction Instruction.\r\n   */\r\n  setStrokeStyle_(context, instruction) {\r\n    context['strokeStyle'] =\r\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\r\n    context.lineWidth = /** @type {number} */ (instruction[2]);\r\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\r\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\r\n    context.miterLimit = /** @type {number} */ (instruction[5]);\r\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\r\n    context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {string|Array<string>} text The text to draw.\r\n   * @param {string} textKey The key of the text state.\r\n   * @param {string} strokeKey The key for the stroke state.\r\n   * @param {string} fillKey The key for the fill state.\r\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\r\n   */\r\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\r\n    const textState = this.textStates[textKey];\r\n\r\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\r\n\r\n    const strokeState = this.strokeStates[strokeKey];\r\n    const pixelRatio = this.pixelRatio;\r\n    const align = horizontalTextAlign(\r\n      Array.isArray(text) ? text[0] : text,\r\n      textState.textAlign || defaultTextAlign\r\n    );\r\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\r\n    const strokeWidth =\r\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\r\n\r\n    // Remove the 2 pixels we added in createLabel() for the anchor\r\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\r\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\r\n    const anchorY =\r\n      (baseline * label.height) / pixelRatio +\r\n      2 * (0.5 - baseline) * strokeWidth;\r\n\r\n    return {\r\n      label: label,\r\n      anchorX: anchorX,\r\n      anchorY: anchorY,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {CanvasRenderingContext2D} context Context.\r\n   * @param {number} contextScale Scale of the context.\r\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\r\n   * @param {Array<*>} instructions Instructions array.\r\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\r\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\r\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\r\n   *     features that intersect this extent.\r\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\r\n   * @return {T|undefined} Callback result.\r\n   * @template T\r\n   */\r\n  execute_(\r\n    context,\r\n    contextScale,\r\n    transform,\r\n    instructions,\r\n    snapToPixel,\r\n    featureCallback,\r\n    hitExtent,\r\n    declutterTree\r\n  ) {\r\n    /** @type {Array<number>} */\r\n    let pixelCoordinates;\r\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\r\n      pixelCoordinates = this.pixelCoordinates_;\r\n    } else {\r\n      if (!this.pixelCoordinates_) {\r\n        this.pixelCoordinates_ = [];\r\n      }\r\n      pixelCoordinates = transform2D(\r\n        this.coordinates,\r\n        0,\r\n        this.coordinates.length,\r\n        2,\r\n        transform,\r\n        this.pixelCoordinates_\r\n      );\r\n      transformSetFromArray(this.renderedTransform_, transform);\r\n    }\r\n    let i = 0; // instruction index\r\n    const ii = instructions.length; // end of instructions\r\n    let d = 0; // data index\r\n    let dd; // end of per-instruction data\r\n    let anchorX,\r\n      anchorY,\r\n      prevX,\r\n      prevY,\r\n      roundX,\r\n      roundY,\r\n      image,\r\n      text,\r\n      textKey,\r\n      strokeKey,\r\n      fillKey;\r\n    let pendingFill = 0;\r\n    let pendingStroke = 0;\r\n    let lastFillInstruction = null;\r\n    let lastStrokeInstruction = null;\r\n    const coordinateCache = this.coordinateCache_;\r\n    const viewRotation = this.viewRotation_;\r\n    const viewRotationFromTransform =\r\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\r\n\r\n    const state = /** @type {import(\"../../render.js\").State} */ ({\r\n      context: context,\r\n      pixelRatio: this.pixelRatio,\r\n      resolution: this.resolution,\r\n      rotation: viewRotation,\r\n    });\r\n\r\n    // When the batch size gets too big, performance decreases. 200 is a good\r\n    // balance between batch size and number of fill/stroke instructions.\r\n    const batchSize =\r\n      this.instructions != instructions || this.overlaps ? 0 : 200;\r\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\r\n    let x, y, currentGeometry;\r\n    while (i < ii) {\r\n      const instruction = instructions[i];\r\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\r\n        instruction[0]\r\n      );\r\n      switch (type) {\r\n        case CanvasInstruction.BEGIN_GEOMETRY:\r\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\r\n            instruction[1]\r\n          );\r\n          currentGeometry = instruction[3];\r\n          if (!feature.getGeometry()) {\r\n            i = /** @type {number} */ (instruction[2]);\r\n          } else if (\r\n            hitExtent !== undefined &&\r\n            !intersects(hitExtent, currentGeometry.getExtent())\r\n          ) {\r\n            i = /** @type {number} */ (instruction[2]) + 1;\r\n          } else {\r\n            ++i;\r\n          }\r\n          break;\r\n        case CanvasInstruction.BEGIN_PATH:\r\n          if (pendingFill > batchSize) {\r\n            this.fill_(context);\r\n            pendingFill = 0;\r\n          }\r\n          if (pendingStroke > batchSize) {\r\n            context.stroke();\r\n            pendingStroke = 0;\r\n          }\r\n          if (!pendingFill && !pendingStroke) {\r\n            context.beginPath();\r\n            prevX = NaN;\r\n            prevY = NaN;\r\n          }\r\n          ++i;\r\n          break;\r\n        case CanvasInstruction.CIRCLE:\r\n          d = /** @type {number} */ (instruction[1]);\r\n          const x1 = pixelCoordinates[d];\r\n          const y1 = pixelCoordinates[d + 1];\r\n          const x2 = pixelCoordinates[d + 2];\r\n          const y2 = pixelCoordinates[d + 3];\r\n          const dx = x2 - x1;\r\n          const dy = y2 - y1;\r\n          const r = Math.sqrt(dx * dx + dy * dy);\r\n          context.moveTo(x1 + r, y1);\r\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\r\n          ++i;\r\n          break;\r\n        case CanvasInstruction.CLOSE_PATH:\r\n          context.closePath();\r\n          ++i;\r\n          break;\r\n        case CanvasInstruction.CUSTOM:\r\n          d = /** @type {number} */ (instruction[1]);\r\n          dd = instruction[2];\r\n          const geometry =\r\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\r\n              instruction[3]\r\n            );\r\n          const renderer = instruction[4];\r\n          const fn = instruction.length == 6 ? instruction[5] : undefined;\r\n          state.geometry = geometry;\r\n          state.feature = feature;\r\n          if (!(i in coordinateCache)) {\r\n            coordinateCache[i] = [];\r\n          }\r\n          const coords = coordinateCache[i];\r\n          if (fn) {\r\n            fn(pixelCoordinates, d, dd, 2, coords);\r\n          } else {\r\n            coords[0] = pixelCoordinates[d];\r\n            coords[1] = pixelCoordinates[d + 1];\r\n            coords.length = 2;\r\n          }\r\n          renderer(coords, state);\r\n          ++i;\r\n          break;\r\n        case CanvasInstruction.DRAW_IMAGE:\r\n          d = /** @type {number} */ (instruction[1]);\r\n          dd = /** @type {number} */ (instruction[2]);\r\n          image =\r\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\r\n              instruction[3]\r\n            );\r\n\r\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\r\n          anchorX = /** @type {number} */ (instruction[4]);\r\n          anchorY = /** @type {number} */ (instruction[5]);\r\n          let height = /** @type {number} */ (instruction[6]);\r\n          const opacity = /** @type {number} */ (instruction[7]);\r\n          const originX = /** @type {number} */ (instruction[8]);\r\n          const originY = /** @type {number} */ (instruction[9]);\r\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\r\n          let rotation = /** @type {number} */ (instruction[11]);\r\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\r\n            instruction[12]\r\n          );\r\n          let width = /** @type {number} */ (instruction[13]);\r\n          const declutterMode =\r\n            /** @type {\"declutter\"|\"obstacle\"|\"none\"|undefined} */ (\r\n              instruction[14]\r\n            );\r\n          const declutterImageWithText =\r\n            /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (\r\n              instruction[15]\r\n            );\r\n\r\n          if (!image && instruction.length >= 20) {\r\n            // create label images\r\n            text = /** @type {string} */ (instruction[19]);\r\n            textKey = /** @type {string} */ (instruction[20]);\r\n            strokeKey = /** @type {string} */ (instruction[21]);\r\n            fillKey = /** @type {string} */ (instruction[22]);\r\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\r\n              text,\r\n              textKey,\r\n              strokeKey,\r\n              fillKey\r\n            );\r\n            image = labelWithAnchor.label;\r\n            instruction[3] = image;\r\n            const textOffsetX = /** @type {number} */ (instruction[23]);\r\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\r\n            instruction[4] = anchorX;\r\n            const textOffsetY = /** @type {number} */ (instruction[24]);\r\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\r\n            instruction[5] = anchorY;\r\n            height = image.height;\r\n            instruction[6] = height;\r\n            width = image.width;\r\n            instruction[13] = width;\r\n          }\r\n\r\n          let geometryWidths;\r\n          if (instruction.length > 25) {\r\n            geometryWidths = /** @type {number} */ (instruction[25]);\r\n          }\r\n\r\n          let padding, backgroundFill, backgroundStroke;\r\n          if (instruction.length > 17) {\r\n            padding = /** @type {Array<number>} */ (instruction[16]);\r\n            backgroundFill = /** @type {boolean} */ (instruction[17]);\r\n            backgroundStroke = /** @type {boolean} */ (instruction[18]);\r\n          } else {\r\n            padding = defaultPadding;\r\n            backgroundFill = false;\r\n            backgroundStroke = false;\r\n          }\r\n\r\n          if (rotateWithView && viewRotationFromTransform) {\r\n            // Canvas is expected to be rotated to reverse view rotation.\r\n            rotation += viewRotation;\r\n          } else if (!rotateWithView && !viewRotationFromTransform) {\r\n            // Canvas is not rotated, images need to be rotated back to be north-up.\r\n            rotation -= viewRotation;\r\n          }\r\n          let widthIndex = 0;\r\n          for (; d < dd; d += 2) {\r\n            if (\r\n              geometryWidths &&\r\n              geometryWidths[widthIndex++] < width / this.pixelRatio\r\n            ) {\r\n              continue;\r\n            }\r\n            const dimensions = this.calculateImageOrLabelDimensions_(\r\n              image.width,\r\n              image.height,\r\n              pixelCoordinates[d],\r\n              pixelCoordinates[d + 1],\r\n              width,\r\n              height,\r\n              anchorX,\r\n              anchorY,\r\n              originX,\r\n              originY,\r\n              rotation,\r\n              scale,\r\n              snapToPixel,\r\n              padding,\r\n              backgroundFill || backgroundStroke,\r\n              feature\r\n            );\r\n            /** @type {ReplayImageOrLabelArgs} */\r\n            const args = [\r\n              context,\r\n              contextScale,\r\n              image,\r\n              dimensions,\r\n              opacity,\r\n              backgroundFill\r\n                ? /** @type {Array<*>} */ (lastFillInstruction)\r\n                : null,\r\n              backgroundStroke\r\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\r\n                : null,\r\n            ];\r\n            if (declutterTree) {\r\n              if (declutterMode === 'none') {\r\n                // not rendered in declutter group\r\n                continue;\r\n              } else if (declutterMode === 'obstacle') {\r\n                // will always be drawn, thus no collision detection, but insert as obstacle\r\n                declutterTree.insert(dimensions.declutterBox);\r\n                continue;\r\n              } else {\r\n                let imageArgs;\r\n                let imageDeclutterBox;\r\n                if (declutterImageWithText) {\r\n                  const index = dd - d;\r\n                  if (!declutterImageWithText[index]) {\r\n                    // We now have the image for an image+text combination.\r\n                    declutterImageWithText[index] = args;\r\n                    // Don't render anything for now, wait for the text.\r\n                    continue;\r\n                  }\r\n                  imageArgs = declutterImageWithText[index];\r\n                  delete declutterImageWithText[index];\r\n                  imageDeclutterBox = getDeclutterBox(imageArgs);\r\n                  if (declutterTree.collides(imageDeclutterBox)) {\r\n                    continue;\r\n                  }\r\n                }\r\n                if (declutterTree.collides(dimensions.declutterBox)) {\r\n                  continue;\r\n                }\r\n                if (imageArgs) {\r\n                  // We now have image and text for an image+text combination.\r\n                  declutterTree.insert(imageDeclutterBox);\r\n                  // Render the image before we render the text.\r\n                  this.replayImageOrLabel_.apply(this, imageArgs);\r\n                }\r\n                declutterTree.insert(dimensions.declutterBox);\r\n              }\r\n            }\r\n            this.replayImageOrLabel_.apply(this, args);\r\n          }\r\n          ++i;\r\n          break;\r\n        case CanvasInstruction.DRAW_CHARS:\r\n          const begin = /** @type {number} */ (instruction[1]);\r\n          const end = /** @type {number} */ (instruction[2]);\r\n          const baseline = /** @type {number} */ (instruction[3]);\r\n          const overflow = /** @type {number} */ (instruction[4]);\r\n          fillKey = /** @type {string} */ (instruction[5]);\r\n          const maxAngle = /** @type {number} */ (instruction[6]);\r\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\r\n          const offsetY = /** @type {number} */ (instruction[8]);\r\n          strokeKey = /** @type {string} */ (instruction[9]);\r\n          const strokeWidth = /** @type {number} */ (instruction[10]);\r\n          text = /** @type {string} */ (instruction[11]);\r\n          textKey = /** @type {string} */ (instruction[12]);\r\n          const pixelRatioScale = [\r\n            /** @type {number} */ (instruction[13]),\r\n            /** @type {number} */ (instruction[13]),\r\n          ];\r\n\r\n          const textState = this.textStates[textKey];\r\n          const font = textState.font;\r\n          const textScale = [\r\n            textState.scale[0] * measurePixelRatio,\r\n            textState.scale[1] * measurePixelRatio,\r\n          ];\r\n\r\n          let cachedWidths;\r\n          if (font in this.widths_) {\r\n            cachedWidths = this.widths_[font];\r\n          } else {\r\n            cachedWidths = {};\r\n            this.widths_[font] = cachedWidths;\r\n          }\r\n\r\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\r\n          const textLength =\r\n            Math.abs(textScale[0]) *\r\n            measureAndCacheTextWidth(font, text, cachedWidths);\r\n          if (overflow || textLength <= pathLength) {\r\n            const textAlign = this.textStates[textKey].textAlign;\r\n            const startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\r\n            const parts = drawTextOnPath(\r\n              pixelCoordinates,\r\n              begin,\r\n              end,\r\n              2,\r\n              text,\r\n              startM,\r\n              maxAngle,\r\n              Math.abs(textScale[0]),\r\n              measureAndCacheTextWidth,\r\n              font,\r\n              cachedWidths,\r\n              viewRotationFromTransform ? 0 : this.viewRotation_\r\n            );\r\n            drawChars: if (parts) {\r\n              /** @type {Array<ReplayImageOrLabelArgs>} */\r\n              const replayImageOrLabelArgs = [];\r\n              let c, cc, chars, label, part;\r\n              if (strokeKey) {\r\n                for (c = 0, cc = parts.length; c < cc; ++c) {\r\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\r\n                  chars = /** @type {string} */ (part[4]);\r\n                  label = this.createLabel(chars, textKey, '', strokeKey);\r\n                  anchorX =\r\n                    /** @type {number} */ (part[2]) +\r\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\r\n                  anchorY =\r\n                    baseline * label.height +\r\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\r\n                      textScale[0] -\r\n                    offsetY;\r\n                  const dimensions = this.calculateImageOrLabelDimensions_(\r\n                    label.width,\r\n                    label.height,\r\n                    part[0],\r\n                    part[1],\r\n                    label.width,\r\n                    label.height,\r\n                    anchorX,\r\n                    anchorY,\r\n                    0,\r\n                    0,\r\n                    part[3],\r\n                    pixelRatioScale,\r\n                    false,\r\n                    defaultPadding,\r\n                    false,\r\n                    feature\r\n                  );\r\n                  if (\r\n                    declutterTree &&\r\n                    declutterTree.collides(dimensions.declutterBox)\r\n                  ) {\r\n                    break drawChars;\r\n                  }\r\n                  replayImageOrLabelArgs.push([\r\n                    context,\r\n                    contextScale,\r\n                    label,\r\n                    dimensions,\r\n                    1,\r\n                    null,\r\n                    null,\r\n                  ]);\r\n                }\r\n              }\r\n              if (fillKey) {\r\n                for (c = 0, cc = parts.length; c < cc; ++c) {\r\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\r\n                  chars = /** @type {string} */ (part[4]);\r\n                  label = this.createLabel(chars, textKey, fillKey, '');\r\n                  anchorX = /** @type {number} */ (part[2]);\r\n                  anchorY = baseline * label.height - offsetY;\r\n                  const dimensions = this.calculateImageOrLabelDimensions_(\r\n                    label.width,\r\n                    label.height,\r\n                    part[0],\r\n                    part[1],\r\n                    label.width,\r\n                    label.height,\r\n                    anchorX,\r\n                    anchorY,\r\n                    0,\r\n                    0,\r\n                    part[3],\r\n                    pixelRatioScale,\r\n                    false,\r\n                    defaultPadding,\r\n                    false,\r\n                    feature\r\n                  );\r\n                  if (\r\n                    declutterTree &&\r\n                    declutterTree.collides(dimensions.declutterBox)\r\n                  ) {\r\n                    break drawChars;\r\n                  }\r\n                  replayImageOrLabelArgs.push([\r\n                    context,\r\n                    contextScale,\r\n                    label,\r\n                    dimensions,\r\n                    1,\r\n                    null,\r\n                    null,\r\n                  ]);\r\n                }\r\n              }\r\n              if (declutterTree) {\r\n                declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\r\n              }\r\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\r\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\r\n              }\r\n            }\r\n          }\r\n          ++i;\r\n          break;\r\n        case CanvasInstruction.END_GEOMETRY:\r\n          if (featureCallback !== undefined) {\r\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\r\n              instruction[1]\r\n            );\r\n            const result = featureCallback(feature, currentGeometry);\r\n            if (result) {\r\n              return result;\r\n            }\r\n          }\r\n          ++i;\r\n          break;\r\n        case CanvasInstruction.FILL:\r\n          if (batchSize) {\r\n            pendingFill++;\r\n          } else {\r\n            this.fill_(context);\r\n          }\r\n          ++i;\r\n          break;\r\n        case CanvasInstruction.MOVE_TO_LINE_TO:\r\n          d = /** @type {number} */ (instruction[1]);\r\n          dd = /** @type {number} */ (instruction[2]);\r\n          x = pixelCoordinates[d];\r\n          y = pixelCoordinates[d + 1];\r\n          roundX = (x + 0.5) | 0;\r\n          roundY = (y + 0.5) | 0;\r\n          if (roundX !== prevX || roundY !== prevY) {\r\n            context.moveTo(x, y);\r\n            prevX = roundX;\r\n            prevY = roundY;\r\n          }\r\n          for (d += 2; d < dd; d += 2) {\r\n            x = pixelCoordinates[d];\r\n            y = pixelCoordinates[d + 1];\r\n            roundX = (x + 0.5) | 0;\r\n            roundY = (y + 0.5) | 0;\r\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\r\n              context.lineTo(x, y);\r\n              prevX = roundX;\r\n              prevY = roundY;\r\n            }\r\n          }\r\n          ++i;\r\n          break;\r\n        case CanvasInstruction.SET_FILL_STYLE:\r\n          lastFillInstruction = instruction;\r\n          this.alignFill_ = instruction[2];\r\n\r\n          if (pendingFill) {\r\n            this.fill_(context);\r\n            pendingFill = 0;\r\n            if (pendingStroke) {\r\n              context.stroke();\r\n              pendingStroke = 0;\r\n            }\r\n          }\r\n\r\n          context.fillStyle =\r\n            /** @type {import(\"../../colorlike.js\").ColorLike} */ (\r\n              instruction[1]\r\n            );\r\n          ++i;\r\n          break;\r\n        case CanvasInstruction.SET_STROKE_STYLE:\r\n          lastStrokeInstruction = instruction;\r\n          if (pendingStroke) {\r\n            context.stroke();\r\n            pendingStroke = 0;\r\n          }\r\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\r\n          ++i;\r\n          break;\r\n        case CanvasInstruction.STROKE:\r\n          if (batchSize) {\r\n            pendingStroke++;\r\n          } else {\r\n            context.stroke();\r\n          }\r\n          ++i;\r\n          break;\r\n        default: // consume the instruction anyway, to avoid an infinite loop\r\n          ++i;\r\n          break;\r\n      }\r\n    }\r\n    if (pendingFill) {\r\n      this.fill_(context);\r\n    }\r\n    if (pendingStroke) {\r\n      context.stroke();\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  /**\r\n   * @param {CanvasRenderingContext2D} context Context.\r\n   * @param {number} contextScale Scale of the context.\r\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\r\n   * @param {number} viewRotation View rotation.\r\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\r\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\r\n   */\r\n  execute(\r\n    context,\r\n    contextScale,\r\n    transform,\r\n    viewRotation,\r\n    snapToPixel,\r\n    declutterTree\r\n  ) {\r\n    this.viewRotation_ = viewRotation;\r\n    this.execute_(\r\n      context,\r\n      contextScale,\r\n      transform,\r\n      this.instructions,\r\n      snapToPixel,\r\n      undefined,\r\n      undefined,\r\n      declutterTree\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @param {CanvasRenderingContext2D} context Context.\r\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\r\n   * @param {number} viewRotation View rotation.\r\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\r\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\r\n   *     features that intersect this extent.\r\n   * @return {T|undefined} Callback result.\r\n   * @template T\r\n   */\r\n  executeHitDetection(\r\n    context,\r\n    transform,\r\n    viewRotation,\r\n    featureCallback,\r\n    hitExtent\r\n  ) {\r\n    this.viewRotation_ = viewRotation;\r\n    return this.execute_(\r\n      context,\r\n      1,\r\n      transform,\r\n      this.hitDetectionInstructions,\r\n      true,\r\n      featureCallback,\r\n      hitExtent\r\n    );\r\n  }\r\n}\r\n\r\nexport default Executor;\r\n","/**\r\n * @module ol/render/canvas/ExecutorGroup\r\n */\r\n\r\nimport Executor from './Executor.js';\r\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\r\nimport {\r\n  compose as composeTransform,\r\n  create as createTransform,\r\n} from '../../transform.js';\r\nimport {createCanvasContext2D} from '../../dom.js';\r\nimport {isEmpty} from '../../obj.js';\r\nimport {numberSafeCompareFunction} from '../../array.js';\r\nimport {transform2D} from '../../geom/flat/transform.js';\r\n\r\n/**\r\n * @const\r\n * @type {Array<import(\"../canvas.js\").BuilderType>}\r\n */\r\nconst ORDER = ['Polygon', 'Circle', 'LineString', 'Image', 'Text', 'Default'];\r\n\r\nclass ExecutorGroup {\r\n  /**\r\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\r\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\r\n   * should be set here, unless the target context does not exceed that extent (which\r\n   * can be the case when rendering to tiles).\r\n   * @param {number} resolution Resolution.\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\r\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\r\n   * The serializable instructions.\r\n   * @param {number} [renderBuffer] Optional rendering buffer.\r\n   */\r\n  constructor(\r\n    maxExtent,\r\n    resolution,\r\n    pixelRatio,\r\n    overlaps,\r\n    allInstructions,\r\n    renderBuffer\r\n  ) {\r\n    /**\r\n     * @private\r\n     * @type {import(\"../../extent.js\").Extent}\r\n     */\r\n    this.maxExtent_ = maxExtent;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.overlaps_ = overlaps;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.pixelRatio_ = pixelRatio;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.resolution_ = resolution;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.renderBuffer_ = renderBuffer;\r\n\r\n    /**\r\n     * @private\r\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Executor\").default>>}\r\n     */\r\n    this.executorsByZIndex_ = {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {CanvasRenderingContext2D}\r\n     */\r\n    this.hitDetectionContext_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../../transform.js\").Transform}\r\n     */\r\n    this.hitDetectionTransform_ = createTransform();\r\n\r\n    this.createExecutors_(allInstructions);\r\n  }\r\n\r\n  /**\r\n   * @param {CanvasRenderingContext2D} context Context.\r\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\r\n   */\r\n  clip(context, transform) {\r\n    const flatClipCoords = this.getClipCoords(transform);\r\n    context.beginPath();\r\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\r\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\r\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\r\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\r\n    context.clip();\r\n  }\r\n\r\n  /**\r\n   * Create executors and populate them using the provided instructions.\r\n   * @private\r\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\r\n   */\r\n  createExecutors_(allInstructions) {\r\n    for (const zIndex in allInstructions) {\r\n      let executors = this.executorsByZIndex_[zIndex];\r\n      if (executors === undefined) {\r\n        executors = {};\r\n        this.executorsByZIndex_[zIndex] = executors;\r\n      }\r\n      const instructionByZindex = allInstructions[zIndex];\r\n      for (const builderType in instructionByZindex) {\r\n        const instructions = instructionByZindex[builderType];\r\n        executors[builderType] = new Executor(\r\n          this.resolution_,\r\n          this.pixelRatio_,\r\n          this.overlaps_,\r\n          instructions\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Array<import(\"../canvas.js\").BuilderType>} executors Executors.\r\n   * @return {boolean} Has executors of the provided types.\r\n   */\r\n  hasExecutors(executors) {\r\n    for (const zIndex in this.executorsByZIndex_) {\r\n      const candidates = this.executorsByZIndex_[zIndex];\r\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\r\n        if (executors[i] in candidates) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\r\n   * @param {number} resolution Resolution.\r\n   * @param {number} rotation Rotation.\r\n   * @param {number} hitTolerance Hit tolerance in pixels.\r\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\r\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\r\n   * @return {T|undefined} Callback result.\r\n   * @template T\r\n   */\r\n  forEachFeatureAtCoordinate(\r\n    coordinate,\r\n    resolution,\r\n    rotation,\r\n    hitTolerance,\r\n    callback,\r\n    declutteredFeatures\r\n  ) {\r\n    hitTolerance = Math.round(hitTolerance);\r\n    const contextSize = hitTolerance * 2 + 1;\r\n    const transform = composeTransform(\r\n      this.hitDetectionTransform_,\r\n      hitTolerance + 0.5,\r\n      hitTolerance + 0.5,\r\n      1 / resolution,\r\n      -1 / resolution,\r\n      -rotation,\r\n      -coordinate[0],\r\n      -coordinate[1]\r\n    );\r\n\r\n    const newContext = !this.hitDetectionContext_;\r\n    if (newContext) {\r\n      this.hitDetectionContext_ = createCanvasContext2D(\r\n        contextSize,\r\n        contextSize\r\n      );\r\n    }\r\n    const context = this.hitDetectionContext_;\r\n\r\n    if (\r\n      context.canvas.width !== contextSize ||\r\n      context.canvas.height !== contextSize\r\n    ) {\r\n      context.canvas.width = contextSize;\r\n      context.canvas.height = contextSize;\r\n    } else if (!newContext) {\r\n      context.clearRect(0, 0, contextSize, contextSize);\r\n    }\r\n\r\n    /**\r\n     * @type {import(\"../../extent.js\").Extent}\r\n     */\r\n    let hitExtent;\r\n    if (this.renderBuffer_ !== undefined) {\r\n      hitExtent = createEmpty();\r\n      extendCoordinate(hitExtent, coordinate);\r\n      buffer(\r\n        hitExtent,\r\n        resolution * (this.renderBuffer_ + hitTolerance),\r\n        hitExtent\r\n      );\r\n    }\r\n\r\n    const indexes = getPixelIndexArray(hitTolerance);\r\n\r\n    let builderType;\r\n\r\n    /**\r\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\r\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\r\n     * @return {T|undefined} Callback result.\r\n     */\r\n    function featureCallback(feature, geometry) {\r\n      const imageData = context.getImageData(\r\n        0,\r\n        0,\r\n        contextSize,\r\n        contextSize\r\n      ).data;\r\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\r\n        if (imageData[indexes[i]] > 0) {\r\n          if (\r\n            !declutteredFeatures ||\r\n            (builderType !== 'Image' && builderType !== 'Text') ||\r\n            declutteredFeatures.includes(feature)\r\n          ) {\r\n            const idx = (indexes[i] - 3) / 4;\r\n            const x = hitTolerance - (idx % contextSize);\r\n            const y = hitTolerance - ((idx / contextSize) | 0);\r\n            const result = callback(feature, geometry, x * x + y * y);\r\n            if (result) {\r\n              return result;\r\n            }\r\n          }\r\n          context.clearRect(0, 0, contextSize, contextSize);\r\n          break;\r\n        }\r\n      }\r\n      return undefined;\r\n    }\r\n\r\n    /** @type {Array<number>} */\r\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\r\n    zs.sort(numberSafeCompareFunction);\r\n\r\n    let i, j, executors, executor, result;\r\n    for (i = zs.length - 1; i >= 0; --i) {\r\n      const zIndexKey = zs[i].toString();\r\n      executors = this.executorsByZIndex_[zIndexKey];\r\n      for (j = ORDER.length - 1; j >= 0; --j) {\r\n        builderType = ORDER[j];\r\n        executor = executors[builderType];\r\n        if (executor !== undefined) {\r\n          result = executor.executeHitDetection(\r\n            context,\r\n            transform,\r\n            rotation,\r\n            featureCallback,\r\n            hitExtent\r\n          );\r\n          if (result) {\r\n            return result;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\r\n   * @return {Array<number>|null} Clip coordinates.\r\n   */\r\n  getClipCoords(transform) {\r\n    const maxExtent = this.maxExtent_;\r\n    if (!maxExtent) {\r\n      return null;\r\n    }\r\n    const minX = maxExtent[0];\r\n    const minY = maxExtent[1];\r\n    const maxX = maxExtent[2];\r\n    const maxY = maxExtent[3];\r\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\r\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\r\n    return flatClipCoords;\r\n  }\r\n\r\n  /**\r\n   * @return {boolean} Is empty.\r\n   */\r\n  isEmpty() {\r\n    return isEmpty(this.executorsByZIndex_);\r\n  }\r\n\r\n  /**\r\n   * @param {CanvasRenderingContext2D} context Context.\r\n   * @param {number} contextScale Scale of the context.\r\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\r\n   * @param {number} viewRotation View rotation.\r\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\r\n   * @param {Array<import(\"../canvas.js\").BuilderType>} [builderTypes] Ordered replay types to replay.\r\n   *     Default is {@link module:ol/render/replay~ORDER}\r\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\r\n   */\r\n  execute(\r\n    context,\r\n    contextScale,\r\n    transform,\r\n    viewRotation,\r\n    snapToPixel,\r\n    builderTypes,\r\n    declutterTree\r\n  ) {\r\n    /** @type {Array<number>} */\r\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\r\n    zs.sort(numberSafeCompareFunction);\r\n\r\n    // setup clipping so that the parts of over-simplified geometries are not\r\n    // visible outside the current extent when panning\r\n    if (this.maxExtent_) {\r\n      context.save();\r\n      this.clip(context, transform);\r\n    }\r\n\r\n    builderTypes = builderTypes ? builderTypes : ORDER;\r\n    let i, ii, j, jj, replays, replay;\r\n    if (declutterTree) {\r\n      zs.reverse();\r\n    }\r\n    for (i = 0, ii = zs.length; i < ii; ++i) {\r\n      const zIndexKey = zs[i].toString();\r\n      replays = this.executorsByZIndex_[zIndexKey];\r\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\r\n        const builderType = builderTypes[j];\r\n        replay = replays[builderType];\r\n        if (replay !== undefined) {\r\n          replay.execute(\r\n            context,\r\n            contextScale,\r\n            transform,\r\n            viewRotation,\r\n            snapToPixel,\r\n            declutterTree\r\n          );\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.maxExtent_) {\r\n      context.restore();\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * This cache is used to store arrays of indexes for calculated pixel circles\r\n * to increase performance.\r\n * It is a static property to allow each Replaygroup to access it.\r\n * @type {Object<number, Array<number>>}\r\n */\r\nconst circlePixelIndexArrayCache = {};\r\n\r\n/**\r\n * This methods creates an array with indexes of all pixels within a circle,\r\n * ordered by how close they are to the center.\r\n * A cache is used to increase performance.\r\n * @param {number} radius Radius.\r\n * @return {Array<number>} An array with indexes within a circle.\r\n */\r\nexport function getPixelIndexArray(radius) {\r\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\r\n    return circlePixelIndexArrayCache[radius];\r\n  }\r\n\r\n  const size = radius * 2 + 1;\r\n  const maxDistanceSq = radius * radius;\r\n  const distances = new Array(maxDistanceSq + 1);\r\n  for (let i = 0; i <= radius; ++i) {\r\n    for (let j = 0; j <= radius; ++j) {\r\n      const distanceSq = i * i + j * j;\r\n      if (distanceSq > maxDistanceSq) {\r\n        break;\r\n      }\r\n      let distance = distances[distanceSq];\r\n      if (!distance) {\r\n        distance = [];\r\n        distances[distanceSq] = distance;\r\n      }\r\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\r\n      if (i > 0) {\r\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\r\n      }\r\n      if (j > 0) {\r\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\r\n        if (i > 0) {\r\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const pixelIndex = [];\r\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\r\n    if (distances[i]) {\r\n      pixelIndex.push(...distances[i]);\r\n    }\r\n  }\r\n\r\n  circlePixelIndexArrayCache[radius] = pixelIndex;\r\n  return pixelIndex;\r\n}\r\n\r\nexport default ExecutorGroup;\r\n","/**\r\n * @module ol/render/canvas/Immediate\r\n */\r\n// FIXME test, especially polygons with holes and multipolygons\r\n// FIXME need to handle large thick features (where pixel size matters)\r\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\r\n\r\nimport VectorContext from '../VectorContext.js';\r\nimport {asColorLike} from '../../colorlike.js';\r\nimport {\r\n  compose as composeTransform,\r\n  create as createTransform,\r\n} from '../../transform.js';\r\nimport {\r\n  defaultFillStyle,\r\n  defaultFont,\r\n  defaultLineCap,\r\n  defaultLineDash,\r\n  defaultLineDashOffset,\r\n  defaultLineJoin,\r\n  defaultLineWidth,\r\n  defaultMiterLimit,\r\n  defaultStrokeStyle,\r\n  defaultTextAlign,\r\n  defaultTextBaseline,\r\n} from '../canvas.js';\r\nimport {equals} from '../../array.js';\r\nimport {intersects} from '../../extent.js';\r\nimport {transform2D} from '../../geom/flat/transform.js';\r\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\r\n\r\n/**\r\n * @classdesc\r\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext} that implements\r\n * direct rendering of features and geometries to an HTML5 Canvas context.\r\n * Instances of this class are created internally by the library and\r\n * provided to application code as vectorContext member of the\r\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\r\n * render events emitted by layers and maps.\r\n */\r\nclass CanvasImmediateRenderer extends VectorContext {\r\n  /**\r\n   * @param {CanvasRenderingContext2D} context Context.\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\r\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\r\n   * @param {number} viewRotation View rotation.\r\n   * @param {number} [squaredTolerance] Optional squared tolerance for simplification.\r\n   * @param {import(\"../../proj.js\").TransformFunction} [userTransform] Transform from user to view projection.\r\n   */\r\n  constructor(\r\n    context,\r\n    pixelRatio,\r\n    extent,\r\n    transform,\r\n    viewRotation,\r\n    squaredTolerance,\r\n    userTransform\r\n  ) {\r\n    super();\r\n\r\n    /**\r\n     * @private\r\n     * @type {CanvasRenderingContext2D}\r\n     */\r\n    this.context_ = context;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.pixelRatio_ = pixelRatio;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../../extent.js\").Extent}\r\n     */\r\n    this.extent_ = extent;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../../transform.js\").Transform}\r\n     */\r\n    this.transform_ = transform;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.viewRotation_ = viewRotation;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.squaredTolerance_ = squaredTolerance;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../../proj.js\").TransformFunction}\r\n     */\r\n    this.userTransform_ = userTransform;\r\n\r\n    /**\r\n     * @private\r\n     * @type {?import(\"../canvas.js\").FillState}\r\n     */\r\n    this.contextFillState_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {?import(\"../canvas.js\").StrokeState}\r\n     */\r\n    this.contextStrokeState_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {?import(\"../canvas.js\").TextState}\r\n     */\r\n    this.contextTextState_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {?import(\"../canvas.js\").FillState}\r\n     */\r\n    this.fillState_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {?import(\"../canvas.js\").StrokeState}\r\n     */\r\n    this.strokeState_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\r\n     */\r\n    this.image_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.imageAnchorX_ = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.imageAnchorY_ = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.imageHeight_ = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.imageOpacity_ = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.imageOriginX_ = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.imageOriginY_ = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.imageRotateWithView_ = false;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.imageRotation_ = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../../size.js\").Size}\r\n     */\r\n    this.imageScale_ = [0, 0];\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.imageWidth_ = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {string}\r\n     */\r\n    this.text_ = '';\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.textOffsetX_ = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.textOffsetY_ = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.textRotateWithView_ = false;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.textRotation_ = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../../size.js\").Size}\r\n     */\r\n    this.textScale_ = [0, 0];\r\n\r\n    /**\r\n     * @private\r\n     * @type {?import(\"../canvas.js\").FillState}\r\n     */\r\n    this.textFillState_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {?import(\"../canvas.js\").StrokeState}\r\n     */\r\n    this.textStrokeState_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {?import(\"../canvas.js\").TextState}\r\n     */\r\n    this.textState_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<number>}\r\n     */\r\n    this.pixelCoordinates_ = [];\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../../transform.js\").Transform}\r\n     */\r\n    this.tmpLocalTransform_ = createTransform();\r\n  }\r\n\r\n  /**\r\n   * @param {Array<number>} flatCoordinates Flat coordinates.\r\n   * @param {number} offset Offset.\r\n   * @param {number} end End.\r\n   * @param {number} stride Stride.\r\n   * @private\r\n   */\r\n  drawImages_(flatCoordinates, offset, end, stride) {\r\n    if (!this.image_) {\r\n      return;\r\n    }\r\n    const pixelCoordinates = transform2D(\r\n      flatCoordinates,\r\n      offset,\r\n      end,\r\n      stride,\r\n      this.transform_,\r\n      this.pixelCoordinates_\r\n    );\r\n    const context = this.context_;\r\n    const localTransform = this.tmpLocalTransform_;\r\n    const alpha = context.globalAlpha;\r\n    if (this.imageOpacity_ != 1) {\r\n      context.globalAlpha = alpha * this.imageOpacity_;\r\n    }\r\n    let rotation = this.imageRotation_;\r\n    if (this.imageRotateWithView_) {\r\n      rotation += this.viewRotation_;\r\n    }\r\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\r\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\r\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\r\n      if (\r\n        rotation !== 0 ||\r\n        this.imageScale_[0] != 1 ||\r\n        this.imageScale_[1] != 1\r\n      ) {\r\n        const centerX = x + this.imageAnchorX_;\r\n        const centerY = y + this.imageAnchorY_;\r\n        composeTransform(\r\n          localTransform,\r\n          centerX,\r\n          centerY,\r\n          1,\r\n          1,\r\n          rotation,\r\n          -centerX,\r\n          -centerY\r\n        );\r\n        context.setTransform.apply(context, localTransform);\r\n        context.translate(centerX, centerY);\r\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\r\n        context.drawImage(\r\n          this.image_,\r\n          this.imageOriginX_,\r\n          this.imageOriginY_,\r\n          this.imageWidth_,\r\n          this.imageHeight_,\r\n          -this.imageAnchorX_,\r\n          -this.imageAnchorY_,\r\n          this.imageWidth_,\r\n          this.imageHeight_\r\n        );\r\n        context.setTransform(1, 0, 0, 1, 0, 0);\r\n      } else {\r\n        context.drawImage(\r\n          this.image_,\r\n          this.imageOriginX_,\r\n          this.imageOriginY_,\r\n          this.imageWidth_,\r\n          this.imageHeight_,\r\n          x,\r\n          y,\r\n          this.imageWidth_,\r\n          this.imageHeight_\r\n        );\r\n      }\r\n    }\r\n    if (this.imageOpacity_ != 1) {\r\n      context.globalAlpha = alpha;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Array<number>} flatCoordinates Flat coordinates.\r\n   * @param {number} offset Offset.\r\n   * @param {number} end End.\r\n   * @param {number} stride Stride.\r\n   * @private\r\n   */\r\n  drawText_(flatCoordinates, offset, end, stride) {\r\n    if (!this.textState_ || this.text_ === '') {\r\n      return;\r\n    }\r\n    if (this.textFillState_) {\r\n      this.setContextFillState_(this.textFillState_);\r\n    }\r\n    if (this.textStrokeState_) {\r\n      this.setContextStrokeState_(this.textStrokeState_);\r\n    }\r\n    this.setContextTextState_(this.textState_);\r\n    const pixelCoordinates = transform2D(\r\n      flatCoordinates,\r\n      offset,\r\n      end,\r\n      stride,\r\n      this.transform_,\r\n      this.pixelCoordinates_\r\n    );\r\n    const context = this.context_;\r\n    let rotation = this.textRotation_;\r\n    if (this.textRotateWithView_) {\r\n      rotation += this.viewRotation_;\r\n    }\r\n    for (; offset < end; offset += stride) {\r\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\r\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\r\n      if (\r\n        rotation !== 0 ||\r\n        this.textScale_[0] != 1 ||\r\n        this.textScale_[1] != 1\r\n      ) {\r\n        context.translate(x - this.textOffsetX_, y - this.textOffsetY_);\r\n        context.rotate(rotation);\r\n        context.translate(this.textOffsetX_, this.textOffsetY_);\r\n        context.scale(this.textScale_[0], this.textScale_[1]);\r\n        if (this.textStrokeState_) {\r\n          context.strokeText(this.text_, 0, 0);\r\n        }\r\n        if (this.textFillState_) {\r\n          context.fillText(this.text_, 0, 0);\r\n        }\r\n        context.setTransform(1, 0, 0, 1, 0, 0);\r\n      } else {\r\n        if (this.textStrokeState_) {\r\n          context.strokeText(this.text_, x, y);\r\n        }\r\n        if (this.textFillState_) {\r\n          context.fillText(this.text_, x, y);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Array<number>} flatCoordinates Flat coordinates.\r\n   * @param {number} offset Offset.\r\n   * @param {number} end End.\r\n   * @param {number} stride Stride.\r\n   * @param {boolean} close Close.\r\n   * @private\r\n   * @return {number} end End.\r\n   */\r\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\r\n    const context = this.context_;\r\n    const pixelCoordinates = transform2D(\r\n      flatCoordinates,\r\n      offset,\r\n      end,\r\n      stride,\r\n      this.transform_,\r\n      this.pixelCoordinates_\r\n    );\r\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\r\n    let length = pixelCoordinates.length;\r\n    if (close) {\r\n      length -= 2;\r\n    }\r\n    for (let i = 2; i < length; i += 2) {\r\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\r\n    }\r\n    if (close) {\r\n      context.closePath();\r\n    }\r\n    return end;\r\n  }\r\n\r\n  /**\r\n   * @param {Array<number>} flatCoordinates Flat coordinates.\r\n   * @param {number} offset Offset.\r\n   * @param {Array<number>} ends Ends.\r\n   * @param {number} stride Stride.\r\n   * @private\r\n   * @return {number} End.\r\n   */\r\n  drawRings_(flatCoordinates, offset, ends, stride) {\r\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\r\n      offset = this.moveToLineTo_(\r\n        flatCoordinates,\r\n        offset,\r\n        ends[i],\r\n        stride,\r\n        true\r\n      );\r\n    }\r\n    return offset;\r\n  }\r\n\r\n  /**\r\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\r\n   * the current fill and stroke styles.\r\n   *\r\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\r\n   * @api\r\n   */\r\n  drawCircle(geometry) {\r\n    if (!intersects(this.extent_, geometry.getExtent())) {\r\n      return;\r\n    }\r\n    if (this.fillState_ || this.strokeState_) {\r\n      if (this.fillState_) {\r\n        this.setContextFillState_(this.fillState_);\r\n      }\r\n      if (this.strokeState_) {\r\n        this.setContextStrokeState_(this.strokeState_);\r\n      }\r\n      const pixelCoordinates = transformGeom2D(\r\n        geometry,\r\n        this.transform_,\r\n        this.pixelCoordinates_\r\n      );\r\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\r\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\r\n      const radius = Math.sqrt(dx * dx + dy * dy);\r\n      const context = this.context_;\r\n      context.beginPath();\r\n      context.arc(\r\n        pixelCoordinates[0],\r\n        pixelCoordinates[1],\r\n        radius,\r\n        0,\r\n        2 * Math.PI\r\n      );\r\n      if (this.fillState_) {\r\n        context.fill();\r\n      }\r\n      if (this.strokeState_) {\r\n        context.stroke();\r\n      }\r\n    }\r\n    if (this.text_ !== '') {\r\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set the rendering style.  Note that since this is an immediate rendering API,\r\n   * any `zIndex` on the provided style will be ignored.\r\n   *\r\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\r\n   * @api\r\n   */\r\n  setStyle(style) {\r\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\r\n    this.setImageStyle(style.getImage());\r\n    this.setTextStyle(style.getText());\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\r\n   */\r\n  setTransform(transform) {\r\n    this.transform_ = transform;\r\n  }\r\n\r\n  /**\r\n   * Render a geometry into the canvas.  Call\r\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\r\n   *\r\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\r\n   * @api\r\n   */\r\n  drawGeometry(geometry) {\r\n    const type = geometry.getType();\r\n    switch (type) {\r\n      case 'Point':\r\n        this.drawPoint(\r\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry)\r\n        );\r\n        break;\r\n      case 'LineString':\r\n        this.drawLineString(\r\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry)\r\n        );\r\n        break;\r\n      case 'Polygon':\r\n        this.drawPolygon(\r\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\r\n        );\r\n        break;\r\n      case 'MultiPoint':\r\n        this.drawMultiPoint(\r\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry)\r\n        );\r\n        break;\r\n      case 'MultiLineString':\r\n        this.drawMultiLineString(\r\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\r\n            geometry\r\n          )\r\n        );\r\n        break;\r\n      case 'MultiPolygon':\r\n        this.drawMultiPolygon(\r\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry)\r\n        );\r\n        break;\r\n      case 'GeometryCollection':\r\n        this.drawGeometryCollection(\r\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\r\n            geometry\r\n          )\r\n        );\r\n        break;\r\n      case 'Circle':\r\n        this.drawCircle(\r\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry)\r\n        );\r\n        break;\r\n      default:\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\r\n   * style will be ignored - features are rendered immediately in the order that\r\n   * this method is called.  If you need `zIndex` support, you should be using an\r\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\r\n   *\r\n   * @param {import(\"../../Feature.js\").default} feature Feature.\r\n   * @param {import(\"../../style/Style.js\").default} style Style.\r\n   * @api\r\n   */\r\n  drawFeature(feature, style) {\r\n    const geometry = style.getGeometryFunction()(feature);\r\n    if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\r\n      return;\r\n    }\r\n    this.setStyle(style);\r\n    this.drawGeometry(geometry);\r\n  }\r\n\r\n  /**\r\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\r\n   * uses the current styles appropriate for each geometry in the collection.\r\n   *\r\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\r\n   */\r\n  drawGeometryCollection(geometry) {\r\n    const geometries = geometry.getGeometriesArray();\r\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\r\n      this.drawGeometry(geometries[i]);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\r\n   * the current style.\r\n   *\r\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\r\n   */\r\n  drawPoint(geometry) {\r\n    if (this.squaredTolerance_) {\r\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\r\n        geometry.simplifyTransformed(\r\n          this.squaredTolerance_,\r\n          this.userTransform_\r\n        )\r\n      );\r\n    }\r\n    const flatCoordinates = geometry.getFlatCoordinates();\r\n    const stride = geometry.getStride();\r\n    if (this.image_) {\r\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\r\n    }\r\n    if (this.text_ !== '') {\r\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\r\n   * uses the current style.\r\n   *\r\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\r\n   */\r\n  drawMultiPoint(geometry) {\r\n    if (this.squaredTolerance_) {\r\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\r\n        geometry.simplifyTransformed(\r\n          this.squaredTolerance_,\r\n          this.userTransform_\r\n        )\r\n      );\r\n    }\r\n    const flatCoordinates = geometry.getFlatCoordinates();\r\n    const stride = geometry.getStride();\r\n    if (this.image_) {\r\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\r\n    }\r\n    if (this.text_ !== '') {\r\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Render a LineString into the canvas.  Rendering is immediate and uses\r\n   * the current style.\r\n   *\r\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\r\n   */\r\n  drawLineString(geometry) {\r\n    if (this.squaredTolerance_) {\r\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\r\n        geometry.simplifyTransformed(\r\n          this.squaredTolerance_,\r\n          this.userTransform_\r\n        )\r\n      );\r\n    }\r\n    if (!intersects(this.extent_, geometry.getExtent())) {\r\n      return;\r\n    }\r\n    if (this.strokeState_) {\r\n      this.setContextStrokeState_(this.strokeState_);\r\n      const context = this.context_;\r\n      const flatCoordinates = geometry.getFlatCoordinates();\r\n      context.beginPath();\r\n      this.moveToLineTo_(\r\n        flatCoordinates,\r\n        0,\r\n        flatCoordinates.length,\r\n        geometry.getStride(),\r\n        false\r\n      );\r\n      context.stroke();\r\n    }\r\n    if (this.text_ !== '') {\r\n      const flatMidpoint = geometry.getFlatMidpoint();\r\n      this.drawText_(flatMidpoint, 0, 2, 2);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\r\n   * and uses the current style.\r\n   *\r\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\r\n   */\r\n  drawMultiLineString(geometry) {\r\n    if (this.squaredTolerance_) {\r\n      geometry =\r\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\r\n          geometry.simplifyTransformed(\r\n            this.squaredTolerance_,\r\n            this.userTransform_\r\n          )\r\n        );\r\n    }\r\n    const geometryExtent = geometry.getExtent();\r\n    if (!intersects(this.extent_, geometryExtent)) {\r\n      return;\r\n    }\r\n    if (this.strokeState_) {\r\n      this.setContextStrokeState_(this.strokeState_);\r\n      const context = this.context_;\r\n      const flatCoordinates = geometry.getFlatCoordinates();\r\n      let offset = 0;\r\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\r\n      const stride = geometry.getStride();\r\n      context.beginPath();\r\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\r\n        offset = this.moveToLineTo_(\r\n          flatCoordinates,\r\n          offset,\r\n          ends[i],\r\n          stride,\r\n          false\r\n        );\r\n      }\r\n      context.stroke();\r\n    }\r\n    if (this.text_ !== '') {\r\n      const flatMidpoints = geometry.getFlatMidpoints();\r\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\r\n   * the current style.\r\n   *\r\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\r\n   */\r\n  drawPolygon(geometry) {\r\n    if (this.squaredTolerance_) {\r\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\r\n        geometry.simplifyTransformed(\r\n          this.squaredTolerance_,\r\n          this.userTransform_\r\n        )\r\n      );\r\n    }\r\n    if (!intersects(this.extent_, geometry.getExtent())) {\r\n      return;\r\n    }\r\n    if (this.strokeState_ || this.fillState_) {\r\n      if (this.fillState_) {\r\n        this.setContextFillState_(this.fillState_);\r\n      }\r\n      if (this.strokeState_) {\r\n        this.setContextStrokeState_(this.strokeState_);\r\n      }\r\n      const context = this.context_;\r\n      context.beginPath();\r\n      this.drawRings_(\r\n        geometry.getOrientedFlatCoordinates(),\r\n        0,\r\n        /** @type {Array<number>} */ (geometry.getEnds()),\r\n        geometry.getStride()\r\n      );\r\n      if (this.fillState_) {\r\n        context.fill();\r\n      }\r\n      if (this.strokeState_) {\r\n        context.stroke();\r\n      }\r\n    }\r\n    if (this.text_ !== '') {\r\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\r\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\r\n   * uses the current style.\r\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\r\n   */\r\n  drawMultiPolygon(geometry) {\r\n    if (this.squaredTolerance_) {\r\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\r\n        geometry.simplifyTransformed(\r\n          this.squaredTolerance_,\r\n          this.userTransform_\r\n        )\r\n      );\r\n    }\r\n    if (!intersects(this.extent_, geometry.getExtent())) {\r\n      return;\r\n    }\r\n    if (this.strokeState_ || this.fillState_) {\r\n      if (this.fillState_) {\r\n        this.setContextFillState_(this.fillState_);\r\n      }\r\n      if (this.strokeState_) {\r\n        this.setContextStrokeState_(this.strokeState_);\r\n      }\r\n      const context = this.context_;\r\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\r\n      let offset = 0;\r\n      const endss = geometry.getEndss();\r\n      const stride = geometry.getStride();\r\n      context.beginPath();\r\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\r\n        const ends = endss[i];\r\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\r\n      }\r\n      if (this.fillState_) {\r\n        context.fill();\r\n      }\r\n      if (this.strokeState_) {\r\n        context.stroke();\r\n      }\r\n    }\r\n    if (this.text_ !== '') {\r\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\r\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\r\n   * @private\r\n   */\r\n  setContextFillState_(fillState) {\r\n    const context = this.context_;\r\n    const contextFillState = this.contextFillState_;\r\n    if (!contextFillState) {\r\n      context.fillStyle = fillState.fillStyle;\r\n      this.contextFillState_ = {\r\n        fillStyle: fillState.fillStyle,\r\n      };\r\n    } else {\r\n      if (contextFillState.fillStyle != fillState.fillStyle) {\r\n        contextFillState.fillStyle = fillState.fillStyle;\r\n        context.fillStyle = fillState.fillStyle;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\r\n   * @private\r\n   */\r\n  setContextStrokeState_(strokeState) {\r\n    const context = this.context_;\r\n    const contextStrokeState = this.contextStrokeState_;\r\n    if (!contextStrokeState) {\r\n      context.lineCap = strokeState.lineCap;\r\n      context.setLineDash(strokeState.lineDash);\r\n      context.lineDashOffset = strokeState.lineDashOffset;\r\n      context.lineJoin = strokeState.lineJoin;\r\n      context.lineWidth = strokeState.lineWidth;\r\n      context.miterLimit = strokeState.miterLimit;\r\n      context.strokeStyle = strokeState.strokeStyle;\r\n      this.contextStrokeState_ = {\r\n        lineCap: strokeState.lineCap,\r\n        lineDash: strokeState.lineDash,\r\n        lineDashOffset: strokeState.lineDashOffset,\r\n        lineJoin: strokeState.lineJoin,\r\n        lineWidth: strokeState.lineWidth,\r\n        miterLimit: strokeState.miterLimit,\r\n        strokeStyle: strokeState.strokeStyle,\r\n      };\r\n    } else {\r\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\r\n        contextStrokeState.lineCap = strokeState.lineCap;\r\n        context.lineCap = strokeState.lineCap;\r\n      }\r\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\r\n        context.setLineDash(\r\n          (contextStrokeState.lineDash = strokeState.lineDash)\r\n        );\r\n      }\r\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\r\n        contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\r\n        context.lineDashOffset = strokeState.lineDashOffset;\r\n      }\r\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\r\n        contextStrokeState.lineJoin = strokeState.lineJoin;\r\n        context.lineJoin = strokeState.lineJoin;\r\n      }\r\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\r\n        contextStrokeState.lineWidth = strokeState.lineWidth;\r\n        context.lineWidth = strokeState.lineWidth;\r\n      }\r\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\r\n        contextStrokeState.miterLimit = strokeState.miterLimit;\r\n        context.miterLimit = strokeState.miterLimit;\r\n      }\r\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\r\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\r\n        context.strokeStyle = strokeState.strokeStyle;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\r\n   * @private\r\n   */\r\n  setContextTextState_(textState) {\r\n    const context = this.context_;\r\n    const contextTextState = this.contextTextState_;\r\n    const textAlign = textState.textAlign\r\n      ? textState.textAlign\r\n      : defaultTextAlign;\r\n    if (!contextTextState) {\r\n      context.font = textState.font;\r\n      context.textAlign = textAlign;\r\n      context.textBaseline = textState.textBaseline;\r\n      this.contextTextState_ = {\r\n        font: textState.font,\r\n        textAlign: textAlign,\r\n        textBaseline: textState.textBaseline,\r\n      };\r\n    } else {\r\n      if (contextTextState.font != textState.font) {\r\n        contextTextState.font = textState.font;\r\n        context.font = textState.font;\r\n      }\r\n      if (contextTextState.textAlign != textAlign) {\r\n        contextTextState.textAlign = textAlign;\r\n        context.textAlign = textAlign;\r\n      }\r\n      if (contextTextState.textBaseline != textState.textBaseline) {\r\n        contextTextState.textBaseline = textState.textBaseline;\r\n        context.textBaseline = textState.textBaseline;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set the fill and stroke style for subsequent draw operations.  To clear\r\n   * either fill or stroke styles, pass null for the appropriate parameter.\r\n   *\r\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\r\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\r\n   */\r\n  setFillStrokeStyle(fillStyle, strokeStyle) {\r\n    if (!fillStyle) {\r\n      this.fillState_ = null;\r\n    } else {\r\n      const fillStyleColor = fillStyle.getColor();\r\n      this.fillState_ = {\r\n        fillStyle: asColorLike(\r\n          fillStyleColor ? fillStyleColor : defaultFillStyle\r\n        ),\r\n      };\r\n    }\r\n    if (!strokeStyle) {\r\n      this.strokeState_ = null;\r\n    } else {\r\n      const strokeStyleColor = strokeStyle.getColor();\r\n      const strokeStyleLineCap = strokeStyle.getLineCap();\r\n      const strokeStyleLineDash = strokeStyle.getLineDash();\r\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\r\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\r\n      const strokeStyleWidth = strokeStyle.getWidth();\r\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\r\n      const lineDash = strokeStyleLineDash\r\n        ? strokeStyleLineDash\r\n        : defaultLineDash;\r\n      this.strokeState_ = {\r\n        lineCap:\r\n          strokeStyleLineCap !== undefined\r\n            ? strokeStyleLineCap\r\n            : defaultLineCap,\r\n        lineDash:\r\n          this.pixelRatio_ === 1\r\n            ? lineDash\r\n            : lineDash.map((n) => n * this.pixelRatio_),\r\n        lineDashOffset:\r\n          (strokeStyleLineDashOffset\r\n            ? strokeStyleLineDashOffset\r\n            : defaultLineDashOffset) * this.pixelRatio_,\r\n        lineJoin:\r\n          strokeStyleLineJoin !== undefined\r\n            ? strokeStyleLineJoin\r\n            : defaultLineJoin,\r\n        lineWidth:\r\n          (strokeStyleWidth !== undefined\r\n            ? strokeStyleWidth\r\n            : defaultLineWidth) * this.pixelRatio_,\r\n        miterLimit:\r\n          strokeStyleMiterLimit !== undefined\r\n            ? strokeStyleMiterLimit\r\n            : defaultMiterLimit,\r\n        strokeStyle: asColorLike(\r\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\r\n        ),\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set the image style for subsequent draw operations.  Pass null to remove\r\n   * the image style.\r\n   *\r\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\r\n   */\r\n  setImageStyle(imageStyle) {\r\n    let imageSize;\r\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\r\n      this.image_ = null;\r\n      return;\r\n    }\r\n    const imagePixelRatio = imageStyle.getPixelRatio(this.pixelRatio_);\r\n    const imageAnchor = imageStyle.getAnchor();\r\n    const imageOrigin = imageStyle.getOrigin();\r\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\r\n    this.imageAnchorX_ = imageAnchor[0] * imagePixelRatio;\r\n    this.imageAnchorY_ = imageAnchor[1] * imagePixelRatio;\r\n    this.imageHeight_ = imageSize[1] * imagePixelRatio;\r\n    this.imageOpacity_ = imageStyle.getOpacity();\r\n    this.imageOriginX_ = imageOrigin[0];\r\n    this.imageOriginY_ = imageOrigin[1];\r\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\r\n    this.imageRotation_ = imageStyle.getRotation();\r\n    const imageScale = imageStyle.getScaleArray();\r\n    this.imageScale_ = [\r\n      (imageScale[0] * this.pixelRatio_) / imagePixelRatio,\r\n      (imageScale[1] * this.pixelRatio_) / imagePixelRatio,\r\n    ];\r\n    this.imageWidth_ = imageSize[0] * imagePixelRatio;\r\n  }\r\n\r\n  /**\r\n   * Set the text style for subsequent draw operations.  Pass null to\r\n   * remove the text style.\r\n   *\r\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\r\n   */\r\n  setTextStyle(textStyle) {\r\n    if (!textStyle) {\r\n      this.text_ = '';\r\n    } else {\r\n      const textFillStyle = textStyle.getFill();\r\n      if (!textFillStyle) {\r\n        this.textFillState_ = null;\r\n      } else {\r\n        const textFillStyleColor = textFillStyle.getColor();\r\n        this.textFillState_ = {\r\n          fillStyle: asColorLike(\r\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle\r\n          ),\r\n        };\r\n      }\r\n      const textStrokeStyle = textStyle.getStroke();\r\n      if (!textStrokeStyle) {\r\n        this.textStrokeState_ = null;\r\n      } else {\r\n        const textStrokeStyleColor = textStrokeStyle.getColor();\r\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\r\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\r\n        const textStrokeStyleLineDashOffset =\r\n          textStrokeStyle.getLineDashOffset();\r\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\r\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\r\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\r\n        this.textStrokeState_ = {\r\n          lineCap:\r\n            textStrokeStyleLineCap !== undefined\r\n              ? textStrokeStyleLineCap\r\n              : defaultLineCap,\r\n          lineDash: textStrokeStyleLineDash\r\n            ? textStrokeStyleLineDash\r\n            : defaultLineDash,\r\n          lineDashOffset: textStrokeStyleLineDashOffset\r\n            ? textStrokeStyleLineDashOffset\r\n            : defaultLineDashOffset,\r\n          lineJoin:\r\n            textStrokeStyleLineJoin !== undefined\r\n              ? textStrokeStyleLineJoin\r\n              : defaultLineJoin,\r\n          lineWidth:\r\n            textStrokeStyleWidth !== undefined\r\n              ? textStrokeStyleWidth\r\n              : defaultLineWidth,\r\n          miterLimit:\r\n            textStrokeStyleMiterLimit !== undefined\r\n              ? textStrokeStyleMiterLimit\r\n              : defaultMiterLimit,\r\n          strokeStyle: asColorLike(\r\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle\r\n          ),\r\n        };\r\n      }\r\n      const textFont = textStyle.getFont();\r\n      const textOffsetX = textStyle.getOffsetX();\r\n      const textOffsetY = textStyle.getOffsetY();\r\n      const textRotateWithView = textStyle.getRotateWithView();\r\n      const textRotation = textStyle.getRotation();\r\n      const textScale = textStyle.getScaleArray();\r\n      const textText = textStyle.getText();\r\n      const textTextAlign = textStyle.getTextAlign();\r\n      const textTextBaseline = textStyle.getTextBaseline();\r\n      this.textState_ = {\r\n        font: textFont !== undefined ? textFont : defaultFont,\r\n        textAlign:\r\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\r\n        textBaseline:\r\n          textTextBaseline !== undefined\r\n            ? textTextBaseline\r\n            : defaultTextBaseline,\r\n      };\r\n      this.text_ =\r\n        textText !== undefined\r\n          ? Array.isArray(textText)\r\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\r\n            : textText\r\n          : '';\r\n      this.textOffsetX_ =\r\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\r\n      this.textOffsetY_ =\r\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\r\n      this.textRotateWithView_ =\r\n        textRotateWithView !== undefined ? textRotateWithView : false;\r\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\r\n      this.textScale_ = [\r\n        this.pixelRatio_ * textScale[0],\r\n        this.pixelRatio_ * textScale[1],\r\n      ];\r\n    }\r\n  }\r\n}\r\n\r\nexport default CanvasImmediateRenderer;\r\n","/**\r\n * @module ol/render/canvas/hitdetect\r\n */\r\n\r\nimport CanvasImmediateRenderer from './Immediate.js';\r\nimport {Icon} from '../../style.js';\r\nimport {clamp} from '../../math.js';\r\nimport {createCanvasContext2D} from '../../dom.js';\r\nimport {intersects} from '../../extent.js';\r\nimport {numberSafeCompareFunction} from '../../array.js';\r\n\r\nexport const HIT_DETECT_RESOLUTION = 0.5;\r\n\r\n/**\r\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\r\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\r\n * for rendering features to all worlds of the viewport, from coordinates to css\r\n * pixels.\r\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\r\n * Features to consider for hit detection.\r\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\r\n * Layer style function.\r\n * @param {import(\"../../extent.js\").Extent} extent Extent.\r\n * @param {number} resolution Resolution.\r\n * @param {number} rotation Rotation.\r\n * @return {ImageData} Hit detection image data.\r\n */\r\nexport function createHitDetectionImageData(\r\n  size,\r\n  transforms,\r\n  features,\r\n  styleFunction,\r\n  extent,\r\n  resolution,\r\n  rotation\r\n) {\r\n  const width = size[0] * HIT_DETECT_RESOLUTION;\r\n  const height = size[1] * HIT_DETECT_RESOLUTION;\r\n  const context = createCanvasContext2D(width, height);\r\n  context.imageSmoothingEnabled = false;\r\n  const canvas = context.canvas;\r\n  const renderer = new CanvasImmediateRenderer(\r\n    context,\r\n    HIT_DETECT_RESOLUTION,\r\n    extent,\r\n    null,\r\n    rotation\r\n  );\r\n  const featureCount = features.length;\r\n  // Stretch hit detection index to use the whole available color range\r\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\r\n  const featuresByZIndex = {};\r\n  for (let i = 1; i <= featureCount; ++i) {\r\n    const feature = features[i - 1];\r\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\r\n    if (!styleFunction) {\r\n      continue;\r\n    }\r\n    let styles = featureStyleFunction(feature, resolution);\r\n    if (!styles) {\r\n      continue;\r\n    }\r\n    if (!Array.isArray(styles)) {\r\n      styles = [styles];\r\n    }\r\n    const index = i * indexFactor;\r\n    const color = '#' + ('000000' + index.toString(16)).slice(-6);\r\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\r\n      const originalStyle = styles[j];\r\n      const geometry = originalStyle.getGeometryFunction()(feature);\r\n      if (!geometry || !intersects(extent, geometry.getExtent())) {\r\n        continue;\r\n      }\r\n      const style = originalStyle.clone();\r\n      const fill = style.getFill();\r\n      if (fill) {\r\n        fill.setColor(color);\r\n      }\r\n      const stroke = style.getStroke();\r\n      if (stroke) {\r\n        stroke.setColor(color);\r\n        stroke.setLineDash(null);\r\n      }\r\n      style.setText(undefined);\r\n      const image = originalStyle.getImage();\r\n      if (image && image.getOpacity() !== 0) {\r\n        const imgSize = image.getImageSize();\r\n        if (!imgSize) {\r\n          continue;\r\n        }\r\n\r\n        const imgContext = createCanvasContext2D(\r\n          imgSize[0],\r\n          imgSize[1],\r\n          undefined,\r\n          {alpha: false}\r\n        );\r\n        const img = imgContext.canvas;\r\n        imgContext.fillStyle = color;\r\n        imgContext.fillRect(0, 0, img.width, img.height);\r\n        style.setImage(\r\n          new Icon({\r\n            img: img,\r\n            imgSize: imgSize,\r\n            anchor: image.getAnchor(),\r\n            anchorXUnits: 'pixels',\r\n            anchorYUnits: 'pixels',\r\n            offset: image.getOrigin(),\r\n            opacity: 1,\r\n            size: image.getSize(),\r\n            scale: image.getScale(),\r\n            rotation: image.getRotation(),\r\n            rotateWithView: image.getRotateWithView(),\r\n          })\r\n        );\r\n      }\r\n      const zIndex = style.getZIndex() || 0;\r\n      let byGeometryType = featuresByZIndex[zIndex];\r\n      if (!byGeometryType) {\r\n        byGeometryType = {};\r\n        featuresByZIndex[zIndex] = byGeometryType;\r\n        byGeometryType['Polygon'] = [];\r\n        byGeometryType['Circle'] = [];\r\n        byGeometryType['LineString'] = [];\r\n        byGeometryType['Point'] = [];\r\n      }\r\n      byGeometryType[geometry.getType().replace('Multi', '')].push(\r\n        geometry,\r\n        style\r\n      );\r\n    }\r\n  }\r\n\r\n  const zIndexKeys = Object.keys(featuresByZIndex)\r\n    .map(Number)\r\n    .sort(numberSafeCompareFunction);\r\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\r\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\r\n    for (const type in byGeometryType) {\r\n      const geomAndStyle = byGeometryType[type];\r\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\r\n        renderer.setStyle(geomAndStyle[j + 1]);\r\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\r\n          renderer.setTransform(transforms[k]);\r\n          renderer.drawGeometry(geomAndStyle[j]);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return context.getImageData(0, 0, canvas.width, canvas.height);\r\n}\r\n\r\n/**\r\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\r\n * detection canvas in css pixels.\r\n * @param {Array<import(\"../../Feature\").FeatureLike>} features Features. Has to\r\n * match the `features` array that was passed to `createHitDetectionImageData()`.\r\n * @param {ImageData} imageData Hit detection image data generated by\r\n * `createHitDetectionImageData()`.\r\n * @return {Array<import(\"../../Feature\").FeatureLike>} features Features.\r\n */\r\nexport function hitDetect(pixel, features, imageData) {\r\n  const resultFeatures = [];\r\n  if (imageData) {\r\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\r\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\r\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\r\n    // for browsers returning coordinates slightly larger than the actual canvas size\r\n    // due to a non-integer pixel ratio.\r\n    const index =\r\n      (clamp(x, 0, imageData.width - 1) +\r\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\r\n      4;\r\n    const r = imageData.data[index];\r\n    const g = imageData.data[index + 1];\r\n    const b = imageData.data[index + 2];\r\n    const i = b + 256 * (g + 256 * r);\r\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\r\n    if (i && i % indexFactor === 0) {\r\n      resultFeatures.push(features[i / indexFactor - 1]);\r\n    }\r\n  }\r\n  return resultFeatures;\r\n}\r\n","/**\r\n * @module ol/renderer/vector\r\n */\r\nimport ImageState from '../ImageState.js';\r\nimport {getUid} from '../util.js';\r\n\r\n/**\r\n * Feature callback. The callback will be called with three arguments. The first\r\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\r\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\r\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\r\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\r\n * @template T\r\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\r\n */\r\n\r\n/**\r\n * Tolerance for geometry simplification in device pixels.\r\n * @type {number}\r\n */\r\nconst SIMPLIFY_TOLERANCE = 0.5;\r\n\r\n/**\r\n * @const\r\n * @type {Object<import(\"../geom/Geometry.js\").Type,\r\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\r\n *                         import(\"../style/Style.js\").default, Object): void>}\r\n */\r\nconst GEOMETRY_RENDERERS = {\r\n  'Point': renderPointGeometry,\r\n  'LineString': renderLineStringGeometry,\r\n  'Polygon': renderPolygonGeometry,\r\n  'MultiPoint': renderMultiPointGeometry,\r\n  'MultiLineString': renderMultiLineStringGeometry,\r\n  'MultiPolygon': renderMultiPolygonGeometry,\r\n  'GeometryCollection': renderGeometryCollectionGeometry,\r\n  'Circle': renderCircleGeometry,\r\n};\r\n\r\n/**\r\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\r\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\r\n * @return {number} Order.\r\n */\r\nexport function defaultOrder(feature1, feature2) {\r\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\r\n}\r\n\r\n/**\r\n * @param {number} resolution Resolution.\r\n * @param {number} pixelRatio Pixel ratio.\r\n * @return {number} Squared pixel tolerance.\r\n */\r\nexport function getSquaredTolerance(resolution, pixelRatio) {\r\n  const tolerance = getTolerance(resolution, pixelRatio);\r\n  return tolerance * tolerance;\r\n}\r\n\r\n/**\r\n * @param {number} resolution Resolution.\r\n * @param {number} pixelRatio Pixel ratio.\r\n * @return {number} Pixel tolerance.\r\n */\r\nexport function getTolerance(resolution, pixelRatio) {\r\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\r\n}\r\n\r\n/**\r\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\r\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\r\n * @param {import(\"../style/Style.js\").default} style Style.\r\n * @param {import(\"../Feature.js\").default} feature Feature.\r\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\r\n */\r\nfunction renderCircleGeometry(\r\n  builderGroup,\r\n  geometry,\r\n  style,\r\n  feature,\r\n  declutterBuilderGroup\r\n) {\r\n  const fillStyle = style.getFill();\r\n  const strokeStyle = style.getStroke();\r\n  if (fillStyle || strokeStyle) {\r\n    const circleReplay = builderGroup.getBuilder(style.getZIndex(), 'Circle');\r\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\r\n    circleReplay.drawCircle(geometry, feature);\r\n  }\r\n  const textStyle = style.getText();\r\n  if (textStyle && textStyle.getText()) {\r\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\r\n      style.getZIndex(),\r\n      'Text'\r\n    );\r\n    textReplay.setTextStyle(textStyle);\r\n    textReplay.drawText(geometry, feature);\r\n  }\r\n}\r\n\r\n/**\r\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\r\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n * @param {import(\"../style/Style.js\").default} style Style.\r\n * @param {number} squaredTolerance Squared tolerance.\r\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\r\n * @param {import(\"../proj.js\").TransformFunction} [transform] Transform from user to view projection.\r\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\r\n * @return {boolean} `true` if style is loading.\r\n */\r\nexport function renderFeature(\r\n  replayGroup,\r\n  feature,\r\n  style,\r\n  squaredTolerance,\r\n  listener,\r\n  transform,\r\n  declutterBuilderGroup\r\n) {\r\n  let loading = false;\r\n  const imageStyle = style.getImage();\r\n  if (imageStyle) {\r\n    const imageState = imageStyle.getImageState();\r\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\r\n      imageStyle.unlistenImageChange(listener);\r\n    } else {\r\n      if (imageState == ImageState.IDLE) {\r\n        imageStyle.load();\r\n      }\r\n      imageStyle.listenImageChange(listener);\r\n      loading = true;\r\n    }\r\n  }\r\n  renderFeatureInternal(\r\n    replayGroup,\r\n    feature,\r\n    style,\r\n    squaredTolerance,\r\n    transform,\r\n    declutterBuilderGroup\r\n  );\r\n\r\n  return loading;\r\n}\r\n\r\n/**\r\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\r\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n * @param {import(\"../style/Style.js\").default} style Style.\r\n * @param {number} squaredTolerance Squared tolerance.\r\n * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\r\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\r\n */\r\nfunction renderFeatureInternal(\r\n  replayGroup,\r\n  feature,\r\n  style,\r\n  squaredTolerance,\r\n  transform,\r\n  declutterBuilderGroup\r\n) {\r\n  const geometry = style.getGeometryFunction()(feature);\r\n  if (!geometry) {\r\n    return;\r\n  }\r\n  const simplifiedGeometry = geometry.simplifyTransformed(\r\n    squaredTolerance,\r\n    transform\r\n  );\r\n  const renderer = style.getRenderer();\r\n  if (renderer) {\r\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\r\n  } else {\r\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\r\n    geometryRenderer(\r\n      replayGroup,\r\n      simplifiedGeometry,\r\n      style,\r\n      feature,\r\n      declutterBuilderGroup\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\r\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\r\n * @param {import(\"../style/Style.js\").default} style Style.\r\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n */\r\nfunction renderGeometry(replayGroup, geometry, style, feature) {\r\n  if (geometry.getType() == 'GeometryCollection') {\r\n    const geometries =\r\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\r\n        geometry\r\n      ).getGeometries();\r\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\r\n      renderGeometry(replayGroup, geometries[i], style, feature);\r\n    }\r\n    return;\r\n  }\r\n  const replay = replayGroup.getBuilder(style.getZIndex(), 'Default');\r\n  replay.drawCustom(\r\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\r\n    feature,\r\n    style.getRenderer(),\r\n    style.getHitDetectionRenderer()\r\n  );\r\n}\r\n\r\n/**\r\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\r\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\r\n * @param {import(\"../style/Style.js\").default} style Style.\r\n * @param {import(\"../Feature.js\").default} feature Feature.\r\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\r\n */\r\nfunction renderGeometryCollectionGeometry(\r\n  replayGroup,\r\n  geometry,\r\n  style,\r\n  feature,\r\n  declutterBuilderGroup\r\n) {\r\n  const geometries = geometry.getGeometriesArray();\r\n  let i, ii;\r\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\r\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\r\n    geometryRenderer(\r\n      replayGroup,\r\n      geometries[i],\r\n      style,\r\n      feature,\r\n      declutterBuilderGroup\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\r\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\r\n * @param {import(\"../style/Style.js\").default} style Style.\r\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\r\n */\r\nfunction renderLineStringGeometry(\r\n  builderGroup,\r\n  geometry,\r\n  style,\r\n  feature,\r\n  declutterBuilderGroup\r\n) {\r\n  const strokeStyle = style.getStroke();\r\n  if (strokeStyle) {\r\n    const lineStringReplay = builderGroup.getBuilder(\r\n      style.getZIndex(),\r\n      'LineString'\r\n    );\r\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\r\n    lineStringReplay.drawLineString(geometry, feature);\r\n  }\r\n  const textStyle = style.getText();\r\n  if (textStyle && textStyle.getText()) {\r\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\r\n      style.getZIndex(),\r\n      'Text'\r\n    );\r\n    textReplay.setTextStyle(textStyle);\r\n    textReplay.drawText(geometry, feature);\r\n  }\r\n}\r\n\r\n/**\r\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\r\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\r\n * @param {import(\"../style/Style.js\").default} style Style.\r\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\r\n */\r\nfunction renderMultiLineStringGeometry(\r\n  builderGroup,\r\n  geometry,\r\n  style,\r\n  feature,\r\n  declutterBuilderGroup\r\n) {\r\n  const strokeStyle = style.getStroke();\r\n  if (strokeStyle) {\r\n    const lineStringReplay = builderGroup.getBuilder(\r\n      style.getZIndex(),\r\n      'LineString'\r\n    );\r\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\r\n    lineStringReplay.drawMultiLineString(geometry, feature);\r\n  }\r\n  const textStyle = style.getText();\r\n  if (textStyle && textStyle.getText()) {\r\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\r\n      style.getZIndex(),\r\n      'Text'\r\n    );\r\n    textReplay.setTextStyle(textStyle);\r\n    textReplay.drawText(geometry, feature);\r\n  }\r\n}\r\n\r\n/**\r\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\r\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\r\n * @param {import(\"../style/Style.js\").default} style Style.\r\n * @param {import(\"../Feature.js\").default} feature Feature.\r\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\r\n */\r\nfunction renderMultiPolygonGeometry(\r\n  builderGroup,\r\n  geometry,\r\n  style,\r\n  feature,\r\n  declutterBuilderGroup\r\n) {\r\n  const fillStyle = style.getFill();\r\n  const strokeStyle = style.getStroke();\r\n  if (strokeStyle || fillStyle) {\r\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\r\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\r\n    polygonReplay.drawMultiPolygon(geometry, feature);\r\n  }\r\n  const textStyle = style.getText();\r\n  if (textStyle && textStyle.getText()) {\r\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\r\n      style.getZIndex(),\r\n      'Text'\r\n    );\r\n    textReplay.setTextStyle(textStyle);\r\n    textReplay.drawText(geometry, feature);\r\n  }\r\n}\r\n\r\n/**\r\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\r\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\r\n * @param {import(\"../style/Style.js\").default} style Style.\r\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\r\n */\r\nfunction renderPointGeometry(\r\n  builderGroup,\r\n  geometry,\r\n  style,\r\n  feature,\r\n  declutterBuilderGroup\r\n) {\r\n  const imageStyle = style.getImage();\r\n  const textStyle = style.getText();\r\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\r\n  let declutterImageWithText;\r\n  if (imageStyle) {\r\n    if (imageStyle.getImageState() != ImageState.LOADED) {\r\n      return;\r\n    }\r\n    let imageBuilderGroup = builderGroup;\r\n    if (declutterBuilderGroup) {\r\n      const declutterMode = imageStyle.getDeclutterMode();\r\n      if (declutterMode !== 'none') {\r\n        imageBuilderGroup = declutterBuilderGroup;\r\n        if (declutterMode === 'obstacle') {\r\n          // draw in non-declutter group:\r\n          const imageReplay = builderGroup.getBuilder(\r\n            style.getZIndex(),\r\n            'Image'\r\n          );\r\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\r\n          imageReplay.drawPoint(geometry, feature);\r\n        } else if (textStyle && textStyle.getText()) {\r\n          declutterImageWithText = {};\r\n        }\r\n      }\r\n    }\r\n    const imageReplay = imageBuilderGroup.getBuilder(\r\n      style.getZIndex(),\r\n      'Image'\r\n    );\r\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\r\n    imageReplay.drawPoint(geometry, feature);\r\n  }\r\n  if (textStyle && textStyle.getText()) {\r\n    let textBuilderGroup = builderGroup;\r\n    if (declutterBuilderGroup) {\r\n      textBuilderGroup = declutterBuilderGroup;\r\n    }\r\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\r\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\r\n    textReplay.drawText(geometry, feature);\r\n  }\r\n}\r\n\r\n/**\r\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\r\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\r\n * @param {import(\"../style/Style.js\").default} style Style.\r\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\r\n */\r\nfunction renderMultiPointGeometry(\r\n  builderGroup,\r\n  geometry,\r\n  style,\r\n  feature,\r\n  declutterBuilderGroup\r\n) {\r\n  const imageStyle = style.getImage();\r\n  const textStyle = style.getText();\r\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\r\n  let declutterImageWithText;\r\n  if (imageStyle) {\r\n    if (imageStyle.getImageState() != ImageState.LOADED) {\r\n      return;\r\n    }\r\n    let imageBuilderGroup = builderGroup;\r\n    if (declutterBuilderGroup) {\r\n      const declutterMode = imageStyle.getDeclutterMode();\r\n      if (declutterMode !== 'none') {\r\n        imageBuilderGroup = declutterBuilderGroup;\r\n        if (declutterMode === 'obstacle') {\r\n          // draw in non-declutter group:\r\n          const imageReplay = builderGroup.getBuilder(\r\n            style.getZIndex(),\r\n            'Image'\r\n          );\r\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\r\n          imageReplay.drawMultiPoint(geometry, feature);\r\n        } else if (textStyle && textStyle.getText()) {\r\n          declutterImageWithText = {};\r\n        }\r\n      }\r\n    }\r\n    const imageReplay = imageBuilderGroup.getBuilder(\r\n      style.getZIndex(),\r\n      'Image'\r\n    );\r\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\r\n    imageReplay.drawMultiPoint(geometry, feature);\r\n  }\r\n  if (textStyle && textStyle.getText()) {\r\n    let textBuilderGroup = builderGroup;\r\n    if (declutterBuilderGroup) {\r\n      textBuilderGroup = declutterBuilderGroup;\r\n    }\r\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\r\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\r\n    textReplay.drawText(geometry, feature);\r\n  }\r\n}\r\n\r\n/**\r\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\r\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\r\n * @param {import(\"../style/Style.js\").default} style Style.\r\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\r\n */\r\nfunction renderPolygonGeometry(\r\n  builderGroup,\r\n  geometry,\r\n  style,\r\n  feature,\r\n  declutterBuilderGroup\r\n) {\r\n  const fillStyle = style.getFill();\r\n  const strokeStyle = style.getStroke();\r\n  if (fillStyle || strokeStyle) {\r\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\r\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\r\n    polygonReplay.drawPolygon(geometry, feature);\r\n  }\r\n  const textStyle = style.getText();\r\n  if (textStyle && textStyle.getText()) {\r\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\r\n      style.getZIndex(),\r\n      'Text'\r\n    );\r\n    textReplay.setTextStyle(textStyle);\r\n    textReplay.drawText(geometry, feature);\r\n  }\r\n}\r\n","/**\r\n * @module ol/renderer/canvas/VectorLayer\r\n */\r\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\r\nimport CanvasLayerRenderer, {canvasPool} from './Layer.js';\r\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\r\nimport ViewHint from '../../ViewHint.js';\r\nimport {\r\n  HIT_DETECT_RESOLUTION,\r\n  createHitDetectionImageData,\r\n  hitDetect,\r\n} from '../../render/canvas/hitdetect.js';\r\nimport {\r\n  apply,\r\n  makeInverse,\r\n  makeScale,\r\n  toString as transformToString,\r\n} from '../../transform.js';\r\nimport {\r\n  buffer,\r\n  containsExtent,\r\n  createEmpty,\r\n  getWidth,\r\n  intersects as intersectsExtent,\r\n  wrapX as wrapExtentX,\r\n} from '../../extent.js';\r\nimport {createCanvasContext2D, releaseCanvas} from '../../dom.js';\r\nimport {\r\n  defaultOrder as defaultRenderOrder,\r\n  getTolerance as getRenderTolerance,\r\n  getSquaredTolerance as getSquaredRenderTolerance,\r\n  renderFeature,\r\n} from '../vector.js';\r\nimport {equals} from '../../array.js';\r\nimport {\r\n  fromUserExtent,\r\n  getTransformFromProjections,\r\n  getUserProjection,\r\n  toUserExtent,\r\n  toUserResolution,\r\n} from '../../proj.js';\r\nimport {getUid} from '../../util.js';\r\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\r\n\r\n/**\r\n * @classdesc\r\n * Canvas renderer for vector layers.\r\n * @api\r\n */\r\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\r\n  /**\r\n   * @param {import(\"../../layer/BaseVector.js\").default} vectorLayer Vector layer.\r\n   */\r\n  constructor(vectorLayer) {\r\n    super(vectorLayer);\r\n\r\n    /** @private */\r\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\r\n\r\n    /**\r\n     * @type {boolean}\r\n     */\r\n    this.animatingOrInteracting_;\r\n\r\n    /**\r\n     * @type {ImageData}\r\n     */\r\n    this.hitDetectionImageData_ = null;\r\n\r\n    /**\r\n     * @type {Array<import(\"../../Feature.js\").default>}\r\n     */\r\n    this.renderedFeatures_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.renderedRevision_ = -1;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.renderedResolution_ = NaN;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../../extent.js\").Extent}\r\n     */\r\n    this.renderedExtent_ = createEmpty();\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../../extent.js\").Extent}\r\n     */\r\n    this.wrappedRenderedExtent_ = createEmpty();\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.renderedRotation_;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../../coordinate\").Coordinate}\r\n     */\r\n    this.renderedCenter_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../../proj/Projection\").default}\r\n     */\r\n    this.renderedProjection_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\r\n     */\r\n    this.renderedRenderOrder_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\r\n     */\r\n    this.replayGroup_ = null;\r\n\r\n    /**\r\n     * A new replay group had to be created by `prepareFrame()`\r\n     * @type {boolean}\r\n     */\r\n    this.replayGroupChanged = true;\r\n\r\n    /**\r\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\r\n     */\r\n    this.declutterExecutorGroup = null;\r\n\r\n    /**\r\n     * Clipping to be performed by `renderFrame()`\r\n     * @type {boolean}\r\n     */\r\n    this.clipping = true;\r\n\r\n    /**\r\n     * @private\r\n     * @type {CanvasRenderingContext2D}\r\n     */\r\n    this.compositionContext_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.opacity_ = 1;\r\n  }\r\n\r\n  /**\r\n   * @param {ExecutorGroup} executorGroup Executor group.\r\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\r\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\r\n   */\r\n  renderWorlds(executorGroup, frameState, declutterTree) {\r\n    const extent = frameState.extent;\r\n    const viewState = frameState.viewState;\r\n    const center = viewState.center;\r\n    const resolution = viewState.resolution;\r\n    const projection = viewState.projection;\r\n    const rotation = viewState.rotation;\r\n    const projectionExtent = projection.getExtent();\r\n    const vectorSource = this.getLayer().getSource();\r\n    const pixelRatio = frameState.pixelRatio;\r\n    const viewHints = frameState.viewHints;\r\n    const snapToPixel = !(\r\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\r\n    );\r\n    const context = this.compositionContext_;\r\n    const width = Math.round(frameState.size[0] * pixelRatio);\r\n    const height = Math.round(frameState.size[1] * pixelRatio);\r\n\r\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\r\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\r\n    const endWorld = multiWorld\r\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\r\n      : 1;\r\n    let world = multiWorld\r\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\r\n      : 0;\r\n    do {\r\n      const transform = this.getRenderTransform(\r\n        center,\r\n        resolution,\r\n        rotation,\r\n        pixelRatio,\r\n        width,\r\n        height,\r\n        world * worldWidth\r\n      );\r\n      executorGroup.execute(\r\n        context,\r\n        1,\r\n        transform,\r\n        rotation,\r\n        snapToPixel,\r\n        undefined,\r\n        declutterTree\r\n      );\r\n    } while (++world < endWorld);\r\n  }\r\n\r\n  setupCompositionContext_() {\r\n    if (this.opacity_ !== 1) {\r\n      const compositionContext = createCanvasContext2D(\r\n        this.context.canvas.width,\r\n        this.context.canvas.height,\r\n        canvasPool\r\n      );\r\n      this.compositionContext_ = compositionContext;\r\n    } else {\r\n      this.compositionContext_ = this.context;\r\n    }\r\n  }\r\n\r\n  releaseCompositionContext_() {\r\n    if (this.opacity_ !== 1) {\r\n      const alpha = this.context.globalAlpha;\r\n      this.context.globalAlpha = this.opacity_;\r\n      this.context.drawImage(this.compositionContext_.canvas, 0, 0);\r\n      this.context.globalAlpha = alpha;\r\n      releaseCanvas(this.compositionContext_);\r\n      canvasPool.push(this.compositionContext_.canvas);\r\n      this.compositionContext_ = null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Render declutter items for this layer\r\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\r\n   */\r\n  renderDeclutter(frameState) {\r\n    if (this.declutterExecutorGroup) {\r\n      this.setupCompositionContext_();\r\n      this.renderWorlds(\r\n        this.declutterExecutorGroup,\r\n        frameState,\r\n        frameState.declutterTree\r\n      );\r\n      this.releaseCompositionContext_();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Render the layer.\r\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\r\n   * @param {HTMLElement} target Target that may be used to render content to.\r\n   * @return {HTMLElement} The rendered element.\r\n   */\r\n  renderFrame(frameState, target) {\r\n    const pixelRatio = frameState.pixelRatio;\r\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\r\n\r\n    // set forward and inverse pixel transforms\r\n    makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\r\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\r\n\r\n    const canvasTransform = transformToString(this.pixelTransform);\r\n\r\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\r\n    const context = this.context;\r\n    const canvas = context.canvas;\r\n\r\n    const replayGroup = this.replayGroup_;\r\n    const declutterExecutorGroup = this.declutterExecutorGroup;\r\n    if (\r\n      (!replayGroup || replayGroup.isEmpty()) &&\r\n      (!declutterExecutorGroup || declutterExecutorGroup.isEmpty())\r\n    ) {\r\n      return null;\r\n    }\r\n\r\n    // resize and clear\r\n    const width = Math.round(frameState.size[0] * pixelRatio);\r\n    const height = Math.round(frameState.size[1] * pixelRatio);\r\n    if (canvas.width != width || canvas.height != height) {\r\n      canvas.width = width;\r\n      canvas.height = height;\r\n      if (canvas.style.transform !== canvasTransform) {\r\n        canvas.style.transform = canvasTransform;\r\n      }\r\n    } else if (!this.containerReused) {\r\n      context.clearRect(0, 0, width, height);\r\n    }\r\n\r\n    this.preRender(context, frameState);\r\n\r\n    const viewState = frameState.viewState;\r\n    const projection = viewState.projection;\r\n\r\n    this.opacity_ = layerState.opacity;\r\n    this.setupCompositionContext_();\r\n\r\n    // clipped rendering if layer extent is set\r\n    let clipped = false;\r\n    let render = true;\r\n    if (layerState.extent && this.clipping) {\r\n      const layerExtent = fromUserExtent(layerState.extent, projection);\r\n      render = intersectsExtent(layerExtent, frameState.extent);\r\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\r\n      if (clipped) {\r\n        this.clipUnrotated(this.compositionContext_, frameState, layerExtent);\r\n      }\r\n    }\r\n\r\n    if (render) {\r\n      this.renderWorlds(replayGroup, frameState);\r\n    }\r\n\r\n    if (clipped) {\r\n      this.compositionContext_.restore();\r\n    }\r\n\r\n    this.releaseCompositionContext_();\r\n\r\n    this.postRender(context, frameState);\r\n\r\n    if (this.renderedRotation_ !== viewState.rotation) {\r\n      this.renderedRotation_ = viewState.rotation;\r\n      this.hitDetectionImageData_ = null;\r\n    }\r\n    return this.container;\r\n  }\r\n\r\n  /**\r\n   * Asynchronous layer level hit detection.\r\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\r\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise that resolves with an array of features.\r\n   */\r\n  getFeatures(pixel) {\r\n    return new Promise(\r\n      /**\r\n       * @param {function(Array<import(\"../../Feature\").default|import(\"../../render/Feature\").default>): void} resolve Resolver function.\r\n       * @this {CanvasVectorLayerRenderer}\r\n       */\r\n      function (resolve) {\r\n        if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\r\n          const size = [this.context.canvas.width, this.context.canvas.height];\r\n          apply(this.pixelTransform, size);\r\n          const center = this.renderedCenter_;\r\n          const resolution = this.renderedResolution_;\r\n          const rotation = this.renderedRotation_;\r\n          const projection = this.renderedProjection_;\r\n          const extent = this.wrappedRenderedExtent_;\r\n          const layer = this.getLayer();\r\n          const transforms = [];\r\n          const width = size[0] * HIT_DETECT_RESOLUTION;\r\n          const height = size[1] * HIT_DETECT_RESOLUTION;\r\n          transforms.push(\r\n            this.getRenderTransform(\r\n              center,\r\n              resolution,\r\n              rotation,\r\n              HIT_DETECT_RESOLUTION,\r\n              width,\r\n              height,\r\n              0\r\n            ).slice()\r\n          );\r\n          const source = layer.getSource();\r\n          const projectionExtent = projection.getExtent();\r\n          if (\r\n            source.getWrapX() &&\r\n            projection.canWrapX() &&\r\n            !containsExtent(projectionExtent, extent)\r\n          ) {\r\n            let startX = extent[0];\r\n            const worldWidth = getWidth(projectionExtent);\r\n            let world = 0;\r\n            let offsetX;\r\n            while (startX < projectionExtent[0]) {\r\n              --world;\r\n              offsetX = worldWidth * world;\r\n              transforms.push(\r\n                this.getRenderTransform(\r\n                  center,\r\n                  resolution,\r\n                  rotation,\r\n                  HIT_DETECT_RESOLUTION,\r\n                  width,\r\n                  height,\r\n                  offsetX\r\n                ).slice()\r\n              );\r\n              startX += worldWidth;\r\n            }\r\n            world = 0;\r\n            startX = extent[2];\r\n            while (startX > projectionExtent[2]) {\r\n              ++world;\r\n              offsetX = worldWidth * world;\r\n              transforms.push(\r\n                this.getRenderTransform(\r\n                  center,\r\n                  resolution,\r\n                  rotation,\r\n                  HIT_DETECT_RESOLUTION,\r\n                  width,\r\n                  height,\r\n                  offsetX\r\n                ).slice()\r\n              );\r\n              startX -= worldWidth;\r\n            }\r\n          }\r\n\r\n          this.hitDetectionImageData_ = createHitDetectionImageData(\r\n            size,\r\n            transforms,\r\n            this.renderedFeatures_,\r\n            layer.getStyleFunction(),\r\n            extent,\r\n            resolution,\r\n            rotation\r\n          );\r\n        }\r\n        resolve(\r\n          hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_)\r\n        );\r\n      }.bind(this)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\r\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\r\n   * @param {number} hitTolerance Hit tolerance in pixels.\r\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\r\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\r\n   * @return {T|undefined} Callback result.\r\n   * @template T\r\n   */\r\n  forEachFeatureAtCoordinate(\r\n    coordinate,\r\n    frameState,\r\n    hitTolerance,\r\n    callback,\r\n    matches\r\n  ) {\r\n    if (!this.replayGroup_) {\r\n      return undefined;\r\n    }\r\n    const resolution = frameState.viewState.resolution;\r\n    const rotation = frameState.viewState.rotation;\r\n    const layer = this.getLayer();\r\n\r\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\r\n    const features = {};\r\n\r\n    /**\r\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\r\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\r\n     * @param {number} distanceSq The squared distance to the click position\r\n     * @return {T|undefined} Callback result.\r\n     */\r\n    const featureCallback = function (feature, geometry, distanceSq) {\r\n      const key = getUid(feature);\r\n      const match = features[key];\r\n      if (!match) {\r\n        if (distanceSq === 0) {\r\n          features[key] = true;\r\n          return callback(feature, layer, geometry);\r\n        }\r\n        matches.push(\r\n          (features[key] = {\r\n            feature: feature,\r\n            layer: layer,\r\n            geometry: geometry,\r\n            distanceSq: distanceSq,\r\n            callback: callback,\r\n          })\r\n        );\r\n      } else if (match !== true && distanceSq < match.distanceSq) {\r\n        if (distanceSq === 0) {\r\n          features[key] = true;\r\n          matches.splice(matches.lastIndexOf(match), 1);\r\n          return callback(feature, layer, geometry);\r\n        }\r\n        match.geometry = geometry;\r\n        match.distanceSq = distanceSq;\r\n      }\r\n      return undefined;\r\n    };\r\n\r\n    let result;\r\n    const executorGroups = [this.replayGroup_];\r\n    if (this.declutterExecutorGroup) {\r\n      executorGroups.push(this.declutterExecutorGroup);\r\n    }\r\n    executorGroups.some((executorGroup) => {\r\n      return (result = executorGroup.forEachFeatureAtCoordinate(\r\n        coordinate,\r\n        resolution,\r\n        rotation,\r\n        hitTolerance,\r\n        featureCallback,\r\n        executorGroup === this.declutterExecutorGroup &&\r\n          frameState.declutterTree\r\n          ? frameState.declutterTree.all().map((item) => item.value)\r\n          : null\r\n      ));\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Perform action necessary to get the layer rendered after new fonts have loaded\r\n   */\r\n  handleFontsChanged() {\r\n    const layer = this.getLayer();\r\n    if (layer.getVisible() && this.replayGroup_) {\r\n      layer.changed();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle changes in image style state.\r\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\r\n   * @private\r\n   */\r\n  handleStyleImageChange_(event) {\r\n    this.renderIfReadyAndVisible();\r\n  }\r\n\r\n  /**\r\n   * Determine whether render should be called.\r\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\r\n   * @return {boolean} Layer is ready to be rendered.\r\n   */\r\n  prepareFrame(frameState) {\r\n    const vectorLayer = this.getLayer();\r\n    const vectorSource = vectorLayer.getSource();\r\n    if (!vectorSource) {\r\n      return false;\r\n    }\r\n\r\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\r\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\r\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\r\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\r\n\r\n    if (\r\n      (this.ready && !updateWhileAnimating && animating) ||\r\n      (!updateWhileInteracting && interacting)\r\n    ) {\r\n      this.animatingOrInteracting_ = true;\r\n      return true;\r\n    }\r\n    this.animatingOrInteracting_ = false;\r\n\r\n    const frameStateExtent = frameState.extent;\r\n    const viewState = frameState.viewState;\r\n    const projection = viewState.projection;\r\n    const resolution = viewState.resolution;\r\n    const pixelRatio = frameState.pixelRatio;\r\n    const vectorLayerRevision = vectorLayer.getRevision();\r\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\r\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\r\n\r\n    if (vectorLayerRenderOrder === undefined) {\r\n      vectorLayerRenderOrder = defaultRenderOrder;\r\n    }\r\n\r\n    const center = viewState.center.slice();\r\n    const extent = buffer(\r\n      frameStateExtent,\r\n      vectorLayerRenderBuffer * resolution\r\n    );\r\n    const renderedExtent = extent.slice();\r\n    const loadExtents = [extent.slice()];\r\n    const projectionExtent = projection.getExtent();\r\n\r\n    if (\r\n      vectorSource.getWrapX() &&\r\n      projection.canWrapX() &&\r\n      !containsExtent(projectionExtent, frameState.extent)\r\n    ) {\r\n      // For the replay group, we need an extent that intersects the real world\r\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\r\n      // to +540°, we add at least 1 world width on each side of the projection\r\n      // extent. If the viewport is wider than the world, we need to add half of\r\n      // the viewport width to make sure we cover the whole viewport.\r\n      const worldWidth = getWidth(projectionExtent);\r\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\r\n      extent[0] = projectionExtent[0] - gutter;\r\n      extent[2] = projectionExtent[2] + gutter;\r\n      wrapCoordinateX(center, projection);\r\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\r\n      // If the extent crosses the date line, we load data for both edges of the worlds\r\n      if (\r\n        loadExtent[0] < projectionExtent[0] &&\r\n        loadExtent[2] < projectionExtent[2]\r\n      ) {\r\n        loadExtents.push([\r\n          loadExtent[0] + worldWidth,\r\n          loadExtent[1],\r\n          loadExtent[2] + worldWidth,\r\n          loadExtent[3],\r\n        ]);\r\n      } else if (\r\n        loadExtent[0] > projectionExtent[0] &&\r\n        loadExtent[2] > projectionExtent[2]\r\n      ) {\r\n        loadExtents.push([\r\n          loadExtent[0] - worldWidth,\r\n          loadExtent[1],\r\n          loadExtent[2] - worldWidth,\r\n          loadExtent[3],\r\n        ]);\r\n      }\r\n    }\r\n\r\n    if (\r\n      this.ready &&\r\n      this.renderedResolution_ == resolution &&\r\n      this.renderedRevision_ == vectorLayerRevision &&\r\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\r\n      containsExtent(this.wrappedRenderedExtent_, extent)\r\n    ) {\r\n      if (!equals(this.renderedExtent_, renderedExtent)) {\r\n        this.hitDetectionImageData_ = null;\r\n        this.renderedExtent_ = renderedExtent;\r\n      }\r\n      this.renderedCenter_ = center;\r\n      this.replayGroupChanged = false;\r\n      return true;\r\n    }\r\n\r\n    this.replayGroup_ = null;\r\n\r\n    const replayGroup = new CanvasBuilderGroup(\r\n      getRenderTolerance(resolution, pixelRatio),\r\n      extent,\r\n      resolution,\r\n      pixelRatio\r\n    );\r\n\r\n    let declutterBuilderGroup;\r\n    if (this.getLayer().getDeclutter()) {\r\n      declutterBuilderGroup = new CanvasBuilderGroup(\r\n        getRenderTolerance(resolution, pixelRatio),\r\n        extent,\r\n        resolution,\r\n        pixelRatio\r\n      );\r\n    }\r\n\r\n    const userProjection = getUserProjection();\r\n    let userTransform;\r\n    if (userProjection) {\r\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\r\n        const extent = loadExtents[i];\r\n        const userExtent = toUserExtent(extent, projection);\r\n        vectorSource.loadFeatures(\r\n          userExtent,\r\n          toUserResolution(resolution, projection),\r\n          userProjection\r\n        );\r\n      }\r\n      userTransform = getTransformFromProjections(userProjection, projection);\r\n    } else {\r\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\r\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\r\n      }\r\n    }\r\n\r\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\r\n    let ready = true;\r\n    const render =\r\n      /**\r\n       * @param {import(\"../../Feature.js\").default} feature Feature.\r\n       * @this {CanvasVectorLayerRenderer}\r\n       */\r\n      function (feature) {\r\n        let styles;\r\n        const styleFunction =\r\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\r\n        if (styleFunction) {\r\n          styles = styleFunction(feature, resolution);\r\n        }\r\n        if (styles) {\r\n          const dirty = this.renderFeature(\r\n            feature,\r\n            squaredTolerance,\r\n            styles,\r\n            replayGroup,\r\n            userTransform,\r\n            declutterBuilderGroup\r\n          );\r\n          ready = ready && !dirty;\r\n        }\r\n      }.bind(this);\r\n\r\n    const userExtent = toUserExtent(extent, projection);\r\n    /** @type {Array<import(\"../../Feature.js\").default>} */\r\n    const features = vectorSource.getFeaturesInExtent(userExtent);\r\n    if (vectorLayerRenderOrder) {\r\n      features.sort(vectorLayerRenderOrder);\r\n    }\r\n    for (let i = 0, ii = features.length; i < ii; ++i) {\r\n      render(features[i]);\r\n    }\r\n    this.renderedFeatures_ = features;\r\n    this.ready = ready;\r\n\r\n    const replayGroupInstructions = replayGroup.finish();\r\n    const executorGroup = new ExecutorGroup(\r\n      extent,\r\n      resolution,\r\n      pixelRatio,\r\n      vectorSource.getOverlaps(),\r\n      replayGroupInstructions,\r\n      vectorLayer.getRenderBuffer()\r\n    );\r\n\r\n    if (declutterBuilderGroup) {\r\n      this.declutterExecutorGroup = new ExecutorGroup(\r\n        extent,\r\n        resolution,\r\n        pixelRatio,\r\n        vectorSource.getOverlaps(),\r\n        declutterBuilderGroup.finish(),\r\n        vectorLayer.getRenderBuffer()\r\n      );\r\n    }\r\n\r\n    this.renderedResolution_ = resolution;\r\n    this.renderedRevision_ = vectorLayerRevision;\r\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\r\n    this.renderedExtent_ = renderedExtent;\r\n    this.wrappedRenderedExtent_ = extent;\r\n    this.renderedCenter_ = center;\r\n    this.renderedProjection_ = projection;\r\n    this.replayGroup_ = executorGroup;\r\n    this.hitDetectionImageData_ = null;\r\n\r\n    this.replayGroupChanged = true;\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../../Feature.js\").default} feature Feature.\r\n   * @param {number} squaredTolerance Squared render tolerance.\r\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\r\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\r\n   * @param {import(\"../../proj.js\").TransformFunction} [transform] Transform from user to view projection.\r\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\r\n   * @return {boolean} `true` if an image is loading.\r\n   */\r\n  renderFeature(\r\n    feature,\r\n    squaredTolerance,\r\n    styles,\r\n    builderGroup,\r\n    transform,\r\n    declutterBuilderGroup\r\n  ) {\r\n    if (!styles) {\r\n      return false;\r\n    }\r\n    let loading = false;\r\n    if (Array.isArray(styles)) {\r\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\r\n        loading =\r\n          renderFeature(\r\n            builderGroup,\r\n            feature,\r\n            styles[i],\r\n            squaredTolerance,\r\n            this.boundHandleStyleImageChange_,\r\n            transform,\r\n            declutterBuilderGroup\r\n          ) || loading;\r\n      }\r\n    } else {\r\n      loading = renderFeature(\r\n        builderGroup,\r\n        feature,\r\n        styles,\r\n        squaredTolerance,\r\n        this.boundHandleStyleImageChange_,\r\n        transform,\r\n        declutterBuilderGroup\r\n      );\r\n    }\r\n    return loading;\r\n  }\r\n}\r\n\r\nexport default CanvasVectorLayerRenderer;\r\n","/**\r\n * @module ol/layer/Vector\r\n */\r\nimport BaseVectorLayer from './BaseVector.js';\r\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\r\n\r\n/**\r\n * @classdesc\r\n * Vector data is rendered client-side, as vectors. This layer type provides most accurate rendering\r\n * even during animations. Points and labels stay upright on rotated views. For very large\r\n * amounts of vector data, performance may suffer during pan and zoom animations. In this case,\r\n * try {@link module:ol/layer/VectorImage~VectorImageLayer}.\r\n *\r\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\r\n * property on the layer object; for example, setting `title: 'My Title'` in the\r\n * options means that `title` is observable, and has get/set accessors.\r\n *\r\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\r\n * @extends {BaseVectorLayer<VectorSourceType, CanvasVectorLayerRenderer>}\r\n * @api\r\n */\r\nclass VectorLayer extends BaseVectorLayer {\r\n  /**\r\n   * @param {import(\"./BaseVector.js\").Options<VectorSourceType>} [options] Options.\r\n   */\r\n  constructor(options) {\r\n    super(options);\r\n  }\r\n\r\n  createRenderer() {\r\n    return new CanvasVectorLayerRenderer(this);\r\n  }\r\n}\r\n\r\nexport default VectorLayer;\r\n","/**\r\n * @module ol/structs/RBush\r\n */\r\nimport RBush_ from 'rbush';\r\nimport {createOrUpdate, equals} from '../extent.js';\r\nimport {getUid} from '../util.js';\r\nimport {isEmpty} from '../obj.js';\r\n\r\n/**\r\n * @typedef {Object} Entry\r\n * @property {number} minX MinX.\r\n * @property {number} minY MinY.\r\n * @property {number} maxX MaxX.\r\n * @property {number} maxY MaxY.\r\n * @property {Object} [value] Value.\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Wrapper around the RBush by Vladimir Agafonkin.\r\n * See https://github.com/mourner/rbush.\r\n *\r\n * @template T\r\n */\r\nclass RBush {\r\n  /**\r\n   * @param {number} [maxEntries] Max entries.\r\n   */\r\n  constructor(maxEntries) {\r\n    /**\r\n     * @private\r\n     */\r\n    this.rbush_ = new RBush_(maxEntries);\r\n\r\n    /**\r\n     * A mapping between the objects added to this rbush wrapper\r\n     * and the objects that are actually added to the internal rbush.\r\n     * @private\r\n     * @type {Object<string, Entry>}\r\n     */\r\n    this.items_ = {};\r\n  }\r\n\r\n  /**\r\n   * Insert a value into the RBush.\r\n   * @param {import(\"../extent.js\").Extent} extent Extent.\r\n   * @param {T} value Value.\r\n   */\r\n  insert(extent, value) {\r\n    /** @type {Entry} */\r\n    const item = {\r\n      minX: extent[0],\r\n      minY: extent[1],\r\n      maxX: extent[2],\r\n      maxY: extent[3],\r\n      value: value,\r\n    };\r\n\r\n    this.rbush_.insert(item);\r\n    this.items_[getUid(value)] = item;\r\n  }\r\n\r\n  /**\r\n   * Bulk-insert values into the RBush.\r\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\r\n   * @param {Array<T>} values Values.\r\n   */\r\n  load(extents, values) {\r\n    const items = new Array(values.length);\r\n    for (let i = 0, l = values.length; i < l; i++) {\r\n      const extent = extents[i];\r\n      const value = values[i];\r\n\r\n      /** @type {Entry} */\r\n      const item = {\r\n        minX: extent[0],\r\n        minY: extent[1],\r\n        maxX: extent[2],\r\n        maxY: extent[3],\r\n        value: value,\r\n      };\r\n      items[i] = item;\r\n      this.items_[getUid(value)] = item;\r\n    }\r\n    this.rbush_.load(items);\r\n  }\r\n\r\n  /**\r\n   * Remove a value from the RBush.\r\n   * @param {T} value Value.\r\n   * @return {boolean} Removed.\r\n   */\r\n  remove(value) {\r\n    const uid = getUid(value);\r\n\r\n    // get the object in which the value was wrapped when adding to the\r\n    // internal rbush. then use that object to do the removal.\r\n    const item = this.items_[uid];\r\n    delete this.items_[uid];\r\n    return this.rbush_.remove(item) !== null;\r\n  }\r\n\r\n  /**\r\n   * Update the extent of a value in the RBush.\r\n   * @param {import(\"../extent.js\").Extent} extent Extent.\r\n   * @param {T} value Value.\r\n   */\r\n  update(extent, value) {\r\n    const item = this.items_[getUid(value)];\r\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\r\n    if (!equals(bbox, extent)) {\r\n      this.remove(value);\r\n      this.insert(extent, value);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Return all values in the RBush.\r\n   * @return {Array<T>} All.\r\n   */\r\n  getAll() {\r\n    const items = this.rbush_.all();\r\n    return items.map(function (item) {\r\n      return item.value;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Return all values in the given extent.\r\n   * @param {import(\"../extent.js\").Extent} extent Extent.\r\n   * @return {Array<T>} All in extent.\r\n   */\r\n  getInExtent(extent) {\r\n    /** @type {Entry} */\r\n    const bbox = {\r\n      minX: extent[0],\r\n      minY: extent[1],\r\n      maxX: extent[2],\r\n      maxY: extent[3],\r\n    };\r\n    const items = this.rbush_.search(bbox);\r\n    return items.map(function (item) {\r\n      return item.value;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Calls a callback function with each value in the tree.\r\n   * If the callback returns a truthy value, this value is returned without\r\n   * checking the rest of the tree.\r\n   * @param {function(T): *} callback Callback.\r\n   * @return {*} Callback return value.\r\n   */\r\n  forEach(callback) {\r\n    return this.forEach_(this.getAll(), callback);\r\n  }\r\n\r\n  /**\r\n   * Calls a callback function with each value in the provided extent.\r\n   * @param {import(\"../extent.js\").Extent} extent Extent.\r\n   * @param {function(T): *} callback Callback.\r\n   * @return {*} Callback return value.\r\n   */\r\n  forEachInExtent(extent, callback) {\r\n    return this.forEach_(this.getInExtent(extent), callback);\r\n  }\r\n\r\n  /**\r\n   * @param {Array<T>} values Values.\r\n   * @param {function(T): *} callback Callback.\r\n   * @private\r\n   * @return {*} Callback return value.\r\n   */\r\n  forEach_(values, callback) {\r\n    let result;\r\n    for (let i = 0, l = values.length; i < l; i++) {\r\n      result = callback(values[i]);\r\n      if (result) {\r\n        return result;\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * @return {boolean} Is empty.\r\n   */\r\n  isEmpty() {\r\n    return isEmpty(this.items_);\r\n  }\r\n\r\n  /**\r\n   * Remove all values from the RBush.\r\n   */\r\n  clear() {\r\n    this.rbush_.clear();\r\n    this.items_ = {};\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\r\n   * @return {import(\"../extent.js\").Extent} Extent.\r\n   */\r\n  getExtent(extent) {\r\n    const data = this.rbush_.toJSON();\r\n    return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, extent);\r\n  }\r\n\r\n  /**\r\n   * @param {RBush} rbush R-Tree.\r\n   */\r\n  concat(rbush) {\r\n    this.rbush_.load(rbush.rbush_.all());\r\n    for (const i in rbush.items_) {\r\n      this.items_[i] = rbush.items_[i];\r\n    }\r\n  }\r\n}\r\n\r\nexport default RBush;\r\n","/**\r\n * @module ol/source/Source\r\n */\r\nimport BaseObject from '../Object.js';\r\nimport {abstract} from '../util.js';\r\nimport {get as getProjection} from '../proj.js';\r\n\r\n/**\r\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\r\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\r\n */\r\n\r\n/**\r\n * A function that takes a {@link module:ol/Map~FrameState} and returns a string or\r\n * an array of strings representing source attributions.\r\n *\r\n * @typedef {function(import(\"../Map.js\").FrameState): (string|Array<string>)} Attribution\r\n */\r\n\r\n/**\r\n * A type that can be used to provide attribution information for data sources.\r\n *\r\n * It represents either\r\n * * a simple string (e.g. `'© Acme Inc.'`)\r\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\r\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\r\n *\r\n * @typedef {string|Array<string>|Attribution} AttributionLike\r\n */\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {AttributionLike} [attributions] Attributions.\r\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\r\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\r\n * @property {import(\"./Source.js\").State} [state='ready'] State.\r\n * @property {boolean} [wrapX=false] WrapX.\r\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\r\n * the nearest neighbor is used when resampling.\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Abstract base class; normally only used for creating subclasses and not\r\n * instantiated in apps.\r\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\r\n *\r\n * A generic `change` event is triggered when the state of the source changes.\r\n * @abstract\r\n * @api\r\n */\r\nclass Source extends BaseObject {\r\n  /**\r\n   * @param {Options} options Source options.\r\n   */\r\n  constructor(options) {\r\n    super();\r\n\r\n    /**\r\n     * @protected\r\n     * @type {import(\"../proj/Projection.js\").default|null}\r\n     */\r\n    this.projection = getProjection(options.projection);\r\n\r\n    /**\r\n     * @private\r\n     * @type {?Attribution}\r\n     */\r\n    this.attributions_ = adaptAttributions(options.attributions);\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.attributionsCollapsible_ =\r\n      options.attributionsCollapsible !== undefined\r\n        ? options.attributionsCollapsible\r\n        : true;\r\n\r\n    /**\r\n     * This source is currently loading data. Sources that defer loading to the\r\n     * map's tile queue never set this to `true`.\r\n     * @type {boolean}\r\n     */\r\n    this.loading = false;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"./Source.js\").State}\r\n     */\r\n    this.state_ = options.state !== undefined ? options.state : 'ready';\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.interpolate_ = !!options.interpolate;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {function(import(\"../View.js\").ViewOptions):void}\r\n     */\r\n    this.viewResolver = null;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {function(Error):void}\r\n     */\r\n    this.viewRejector = null;\r\n\r\n    const self = this;\r\n    /**\r\n     * @private\r\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\r\n     */\r\n    this.viewPromise_ = new Promise(function (resolve, reject) {\r\n      self.viewResolver = resolve;\r\n      self.viewRejector = reject;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get the attribution function for the source.\r\n   * @return {?Attribution} Attribution function.\r\n   * @api\r\n   */\r\n  getAttributions() {\r\n    return this.attributions_;\r\n  }\r\n\r\n  /**\r\n   * @return {boolean} Attributions are collapsible.\r\n   * @api\r\n   */\r\n  getAttributionsCollapsible() {\r\n    return this.attributionsCollapsible_;\r\n  }\r\n\r\n  /**\r\n   * Get the projection of the source.\r\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\r\n   * @api\r\n   */\r\n  getProjection() {\r\n    return this.projection;\r\n  }\r\n\r\n  /**\r\n   * @abstract\r\n   * @return {Array<number>|null} Resolutions.\r\n   */\r\n  getResolutions() {\r\n    return abstract();\r\n  }\r\n\r\n  /**\r\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\r\n   */\r\n  getView() {\r\n    return this.viewPromise_;\r\n  }\r\n\r\n  /**\r\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\r\n   * @return {import(\"./Source.js\").State} State.\r\n   * @api\r\n   */\r\n  getState() {\r\n    return this.state_;\r\n  }\r\n\r\n  /**\r\n   * @return {boolean|undefined} Wrap X.\r\n   */\r\n  getWrapX() {\r\n    return this.wrapX_;\r\n  }\r\n\r\n  /**\r\n   * @return {boolean} Use linear interpolation when resampling.\r\n   */\r\n  getInterpolate() {\r\n    return this.interpolate_;\r\n  }\r\n\r\n  /**\r\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\r\n   * @api\r\n   */\r\n  refresh() {\r\n    this.changed();\r\n  }\r\n\r\n  /**\r\n   * Set the attributions of the source.\r\n   * @param {AttributionLike|undefined} attributions Attributions.\r\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\r\n   *     or `undefined`.\r\n   * @api\r\n   */\r\n  setAttributions(attributions) {\r\n    this.attributions_ = adaptAttributions(attributions);\r\n    this.changed();\r\n  }\r\n\r\n  /**\r\n   * Set the state of the source.\r\n   * @param {import(\"./Source.js\").State} state State.\r\n   */\r\n  setState(state) {\r\n    this.state_ = state;\r\n    this.changed();\r\n  }\r\n}\r\n\r\n/**\r\n * Turns the attributions option into an attributions function.\r\n * @param {AttributionLike|undefined} attributionLike The attribution option.\r\n * @return {Attribution|null} An attribution function (or null).\r\n */\r\nfunction adaptAttributions(attributionLike) {\r\n  if (!attributionLike) {\r\n    return null;\r\n  }\r\n  if (Array.isArray(attributionLike)) {\r\n    return function (frameState) {\r\n      return attributionLike;\r\n    };\r\n  }\r\n\r\n  if (typeof attributionLike === 'function') {\r\n    return attributionLike;\r\n  }\r\n\r\n  return function (frameState) {\r\n    return [attributionLike];\r\n  };\r\n}\r\n\r\nexport default Source;\r\n","/**\r\n * @module ol/source/VectorEventType\r\n */\r\n\r\n/**\r\n * @enum {string}\r\n */\r\nexport default {\r\n  /**\r\n   * Triggered when a feature is added to the source.\r\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\r\n   * @api\r\n   */\r\n  ADDFEATURE: 'addfeature',\r\n\r\n  /**\r\n   * Triggered when a feature is updated.\r\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\r\n   * @api\r\n   */\r\n  CHANGEFEATURE: 'changefeature',\r\n\r\n  /**\r\n   * Triggered when the clear method is called on the source.\r\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\r\n   * @api\r\n   */\r\n  CLEAR: 'clear',\r\n\r\n  /**\r\n   * Triggered when a feature is removed from the source.\r\n   * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\r\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\r\n   * @api\r\n   */\r\n  REMOVEFEATURE: 'removefeature',\r\n\r\n  /**\r\n   * Triggered when features starts loading.\r\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\r\n   * @api\r\n   */\r\n  FEATURESLOADSTART: 'featuresloadstart',\r\n\r\n  /**\r\n   * Triggered when features finishes loading.\r\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\r\n   * @api\r\n   */\r\n  FEATURESLOADEND: 'featuresloadend',\r\n\r\n  /**\r\n   * Triggered if feature loading results in an error.\r\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\r\n   * @api\r\n   */\r\n  FEATURESLOADERROR: 'featuresloaderror',\r\n};\r\n\r\n/**\r\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\r\n */\r\n","/**\r\n * @module ol/loadingstrategy\r\n */\r\n\r\nimport {fromUserExtent, fromUserResolution, toUserExtent} from './proj.js';\r\n\r\n/**\r\n * Strategy function for loading all features with a single request.\r\n * @param {import(\"./extent.js\").Extent} extent Extent.\r\n * @param {number} resolution Resolution.\r\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\r\n * @api\r\n */\r\nexport function all(extent, resolution) {\r\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\r\n}\r\n\r\n/**\r\n * Strategy function for loading features based on the view's extent and\r\n * resolution.\r\n * @param {import(\"./extent.js\").Extent} extent Extent.\r\n * @param {number} resolution Resolution.\r\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\r\n * @api\r\n */\r\nexport function bbox(extent, resolution) {\r\n  return [extent];\r\n}\r\n\r\n/**\r\n * Creates a strategy function for loading features based on a tile grid.\r\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\r\n * @return {function(import(\"./extent.js\").Extent, number, import(\"./proj.js\").Projection): Array<import(\"./extent.js\").Extent>} Loading strategy.\r\n * @api\r\n */\r\nexport function tile(tileGrid) {\r\n  return (\r\n    /**\r\n     * @param {import(\"./extent.js\").Extent} extent Extent.\r\n     * @param {number} resolution Resolution.\r\n     * @param {import(\"./proj.js\").Projection} projection Projection.\r\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\r\n     */\r\n    function (extent, resolution, projection) {\r\n      const z = tileGrid.getZForResolution(\r\n        fromUserResolution(resolution, projection)\r\n      );\r\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\r\n        fromUserExtent(extent, projection),\r\n        z\r\n      );\r\n      /** @type {Array<import(\"./extent.js\").Extent>} */\r\n      const extents = [];\r\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\r\n      const tileCoord = [z, 0, 0];\r\n      for (\r\n        tileCoord[1] = tileRange.minX;\r\n        tileCoord[1] <= tileRange.maxX;\r\n        ++tileCoord[1]\r\n      ) {\r\n        for (\r\n          tileCoord[2] = tileRange.minY;\r\n          tileCoord[2] <= tileRange.maxY;\r\n          ++tileCoord[2]\r\n        ) {\r\n          extents.push(\r\n            toUserExtent(tileGrid.getTileCoordExtent(tileCoord), projection)\r\n          );\r\n        }\r\n      }\r\n      return extents;\r\n    }\r\n  );\r\n}\r\n","/**\r\n * @module ol/featureloader\r\n */\r\nimport {VOID} from './functions.js';\r\n\r\n/**\r\n *\r\n * @type {boolean}\r\n * @private\r\n */\r\nlet withCredentials = false;\r\n\r\n/**\r\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\r\n * load features.\r\n *\r\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\r\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\r\n * {@link module:ol/proj/Projection~Projection} for the projection, an optional success callback that should get\r\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\r\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\r\n * `'featuresloaderror'` events. `this` within the function is bound to the\r\n * {@link module:ol/source/Vector~VectorSource} it's called from.\r\n *\r\n * The function is responsible for loading the features and adding them to the\r\n * source.\r\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\r\n *           import(\"./extent.js\").Extent,\r\n *           number,\r\n *           import(\"./proj/Projection.js\").default,\r\n *           function(Array<import(\"./Feature.js\").default>): void=,\r\n *           function(): void=): void} FeatureLoader\r\n * @api\r\n */\r\n\r\n/**\r\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\r\n * get the url to load features from.\r\n *\r\n * This function takes an {@link module:ol/extent~Extent} representing the area\r\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\r\n * and an {@link module:ol/proj/Projection~Projection} for the projection  as\r\n * arguments and returns a `{string}` representing the URL.\r\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\r\n * @api\r\n */\r\n\r\n/**\r\n * @param {string|FeatureUrlFunction} url Feature URL service.\r\n * @param {import(\"./format/Feature.js\").default} format Feature format.\r\n * @param {import(\"./extent.js\").Extent} extent Extent.\r\n * @param {number} resolution Resolution.\r\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\r\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\r\n *      Function called with the loaded features and optionally with the data projection.\r\n * @param {function(): void} failure Failure\r\n *      Function called when loading failed.\r\n */\r\nexport function loadFeaturesXhr(\r\n  url,\r\n  format,\r\n  extent,\r\n  resolution,\r\n  projection,\r\n  success,\r\n  failure\r\n) {\r\n  const xhr = new XMLHttpRequest();\r\n  xhr.open(\r\n    'GET',\r\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\r\n    true\r\n  );\r\n  if (format.getType() == 'arraybuffer') {\r\n    xhr.responseType = 'arraybuffer';\r\n  }\r\n  xhr.withCredentials = withCredentials;\r\n  /**\r\n   * @param {Event} event Event.\r\n   * @private\r\n   */\r\n  xhr.onload = function (event) {\r\n    // status will be 0 for file:// urls\r\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\r\n      const type = format.getType();\r\n      /** @type {Document|Node|Object|string|undefined} */\r\n      let source;\r\n      if (type == 'json' || type == 'text') {\r\n        source = xhr.responseText;\r\n      } else if (type == 'xml') {\r\n        source = xhr.responseXML;\r\n        if (!source) {\r\n          source = new DOMParser().parseFromString(\r\n            xhr.responseText,\r\n            'application/xml'\r\n          );\r\n        }\r\n      } else if (type == 'arraybuffer') {\r\n        source = /** @type {ArrayBuffer} */ (xhr.response);\r\n      }\r\n      if (source) {\r\n        success(\r\n          /** @type {Array<import(\"./Feature.js\").default>} */\r\n          (\r\n            format.readFeatures(source, {\r\n              extent: extent,\r\n              featureProjection: projection,\r\n            })\r\n          ),\r\n          format.readProjection(source)\r\n        );\r\n      } else {\r\n        failure();\r\n      }\r\n    } else {\r\n      failure();\r\n    }\r\n  };\r\n  /**\r\n   * @private\r\n   */\r\n  xhr.onerror = failure;\r\n  xhr.send();\r\n}\r\n\r\n/**\r\n * Create an XHR feature loader for a `url` and `format`. The feature loader\r\n * loads features (with XHR), parses the features, and adds them to the\r\n * vector source.\r\n * @param {string|FeatureUrlFunction} url Feature URL service.\r\n * @param {import(\"./format/Feature.js\").default} format Feature format.\r\n * @return {FeatureLoader} The feature loader.\r\n * @api\r\n */\r\nexport function xhr(url, format) {\r\n  /**\r\n   * @param {import(\"./extent.js\").Extent} extent Extent.\r\n   * @param {number} resolution Resolution.\r\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\r\n   * @param {function(Array<import(\"./Feature.js\").default>): void} [success] Success\r\n   *      Function called when loading succeeded.\r\n   * @param {function(): void} [failure] Failure\r\n   *      Function called when loading failed.\r\n   * @this {import(\"./source/Vector\").default}\r\n   */\r\n  return function (extent, resolution, projection, success, failure) {\r\n    const source = /** @type {import(\"./source/Vector\").default} */ (this);\r\n    loadFeaturesXhr(\r\n      url,\r\n      format,\r\n      extent,\r\n      resolution,\r\n      projection,\r\n      /**\r\n       * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\r\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\r\n       * projection.\r\n       */\r\n      function (features, dataProjection) {\r\n        source.addFeatures(features);\r\n        if (success !== undefined) {\r\n          success(features);\r\n        }\r\n      },\r\n      /* FIXME handle error */ failure ? failure : VOID\r\n    );\r\n  };\r\n}\r\n\r\n/**\r\n * Setter for the withCredentials configuration for the XHR.\r\n *\r\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\r\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\r\n * @api\r\n */\r\nexport function setWithCredentials(xhrWithCredentials) {\r\n  withCredentials = xhrWithCredentials;\r\n}\r\n","/**\r\n * @module ol/source/Vector\r\n */\r\n\r\nimport Collection from '../Collection.js';\r\nimport CollectionEventType from '../CollectionEventType.js';\r\nimport Event from '../events/Event.js';\r\nimport EventType from '../events/EventType.js';\r\nimport ObjectEventType from '../ObjectEventType.js';\r\nimport RBush from '../structs/RBush.js';\r\nimport Source from './Source.js';\r\nimport VectorEventType from './VectorEventType.js';\r\nimport {TRUE, VOID} from '../functions.js';\r\nimport {all as allStrategy} from '../loadingstrategy.js';\r\nimport {assert} from '../asserts.js';\r\nimport {containsExtent, equals, wrapAndSliceX} from '../extent.js';\r\nimport {extend} from '../array.js';\r\nimport {getUid} from '../util.js';\r\nimport {isEmpty} from '../obj.js';\r\nimport {listen, unlistenByKey} from '../events.js';\r\nimport {xhr} from '../featureloader.js';\r\n\r\n/**\r\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\r\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\r\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\r\n *\r\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\r\n * @api\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Events emitted by {@link module:ol/source/Vector~VectorSource} instances are instances of this\r\n * type.\r\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\r\n */\r\nexport class VectorSourceEvent extends Event {\r\n  /**\r\n   * @param {string} type Type.\r\n   * @param {import(\"../Feature.js\").default<Geometry>} [feature] Feature.\r\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} [features] Features.\r\n   */\r\n  constructor(type, feature, features) {\r\n    super(type);\r\n\r\n    /**\r\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\r\n     * @type {import(\"../Feature.js\").default<Geometry>|undefined}\r\n     * @api\r\n     */\r\n    this.feature = feature;\r\n\r\n    /**\r\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\r\n     * @type {Array<import(\"../Feature.js\").default<Geometry>>|undefined}\r\n     * @api\r\n     */\r\n    this.features = features;\r\n  }\r\n}\r\n\r\n/***\r\n * @template Return\r\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\r\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\r\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent, Return> &\r\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\r\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\r\n */\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\r\n * @property {Array<import(\"../Feature.js\").default<Geometry>>|Collection<import(\"../Feature.js\").default<Geometry>>} [features]\r\n * Features. If provided as {@link module:ol/Collection~Collection}, the features in the source\r\n * and the collection will stay in sync.\r\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\r\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\r\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\r\n * The loader function used to load features, from a remote source for example.\r\n * If this is not set and `url` is set, the source will create and use an XHR\r\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\r\n * will only fire if the `success` and `failure` callbacks are used.\r\n *\r\n * Example:\r\n *\r\n * ```js\r\n * import {Vector} from 'ol/source';\r\n * import {GeoJSON} from 'ol/format';\r\n * import {bbox} from 'ol/loadingstrategy';\r\n *\r\n * const vectorSource = new Vector({\r\n *   format: new GeoJSON(),\r\n *   loader: function(extent, resolution, projection, success, failure) {\r\n *      const proj = projection.getCode();\r\n *      const url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\r\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\r\n *          'outputFormat=application/json&srsname=' + proj + '&' +\r\n *          'bbox=' + extent.join(',') + ',' + proj;\r\n *      const xhr = new XMLHttpRequest();\r\n *      xhr.open('GET', url);\r\n *      const onError = function() {\r\n *        vectorSource.removeLoadedExtent(extent);\r\n *        failure();\r\n *      }\r\n *      xhr.onerror = onError;\r\n *      xhr.onload = function() {\r\n *        if (xhr.status == 200) {\r\n *          const features = vectorSource.getFormat().readFeatures(xhr.responseText);\r\n *          vectorSource.addFeatures(features);\r\n *          success(features);\r\n *        } else {\r\n *          onError();\r\n *        }\r\n *      }\r\n *      xhr.send();\r\n *    },\r\n *    strategy: bbox,\r\n *  });\r\n * ```\r\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\r\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\r\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\r\n * stroke operations.\r\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\r\n * By default an {@link module:ol/loadingstrategy.all}\r\n * strategy is used, a one-off strategy which loads all features at once.\r\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\r\n * Setting this option instructs the source to load features using an XHR loader\r\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\r\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\r\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\r\n * other loading strategies.\r\n * Requires `format` to be set as well.\r\n * When default XHR feature loader is provided, the features will\r\n * be transformed from the data projection to the view projection\r\n * during parsing. If your remote data source does not advertise its projection\r\n * properly, this transformation will be incorrect. For some formats, the\r\n * default projection (usually EPSG:4326) can be overridden by setting the\r\n * dataProjection constructor option on the format.\r\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\r\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\r\n * @property {boolean} [useSpatialIndex=true]\r\n * By default, an RTree is used as spatial index. When features are removed and\r\n * added frequently, and the total number of features is low, setting this to\r\n * `false` may improve performance.\r\n *\r\n * Note that\r\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\r\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\r\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\r\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\r\n * through all features.\r\n *\r\n * When set to `false`, the features will be maintained in an\r\n * {@link module:ol/Collection~Collection}, which can be retrieved through\r\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\r\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\r\n * -180° and 180° meridians to work properly, this should be set to `false`. The\r\n * resulting geometry coordinates will then exceed the world bounds.\r\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Provides a source of features for vector layers. Vector features provided\r\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\r\n * vector data that is optimized for rendering.\r\n *\r\n * @fires VectorSourceEvent\r\n * @api\r\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\r\n */\r\nclass VectorSource extends Source {\r\n  /**\r\n   * @param {Options<Geometry>} [options] Vector source options.\r\n   */\r\n  constructor(options) {\r\n    options = options || {};\r\n\r\n    super({\r\n      attributions: options.attributions,\r\n      interpolate: true,\r\n      projection: undefined,\r\n      state: 'ready',\r\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\r\n    });\r\n\r\n    /***\r\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\r\n     */\r\n    this.on;\r\n\r\n    /***\r\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\r\n     */\r\n    this.once;\r\n\r\n    /***\r\n     * @type {VectorSourceOnSignature<void>}\r\n     */\r\n    this.un;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../featureloader.js\").FeatureLoader}\r\n     */\r\n    this.loader_ = VOID;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../format/Feature.js\").default|undefined}\r\n     */\r\n    this.format_ = options.format;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\r\n\r\n    /**\r\n     * @private\r\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\r\n     */\r\n    this.url_ = options.url;\r\n\r\n    if (options.loader !== undefined) {\r\n      this.loader_ = options.loader;\r\n    } else if (this.url_ !== undefined) {\r\n      assert(this.format_, 7); // `format` must be set when `url` is set\r\n      // create a XHR feature loader for \"url\" and \"format\"\r\n      this.loader_ = xhr(\r\n        this.url_,\r\n        /** @type {import(\"../format/Feature.js\").default} */ (this.format_)\r\n      );\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @type {LoadingStrategy}\r\n     */\r\n    this.strategy_ =\r\n      options.strategy !== undefined ? options.strategy : allStrategy;\r\n\r\n    const useSpatialIndex =\r\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\r\n\r\n    /**\r\n     * @private\r\n     * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\r\n     */\r\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\r\n     */\r\n    this.loadedExtentsRtree_ = new RBush();\r\n\r\n    /**\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.loadingExtentsCount_ = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\r\n     */\r\n    this.nullGeometryFeatures_ = {};\r\n\r\n    /**\r\n     * A lookup of features by id (the return from feature.getId()).\r\n     * @private\r\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\r\n     */\r\n    this.idIndex_ = {};\r\n\r\n    /**\r\n     * A lookup of features by uid (using getUid(feature)).\r\n     * @private\r\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\r\n     */\r\n    this.uidIndex_ = {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\r\n     */\r\n    this.featureChangeKeys_ = {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {Collection<import(\"../Feature.js\").default<Geometry>>|null}\r\n     */\r\n    this.featuresCollection_ = null;\r\n\r\n    /** @type {Collection<import(\"../Feature.js\").default<Geometry>>} */\r\n    let collection;\r\n    /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */\r\n    let features;\r\n    if (Array.isArray(options.features)) {\r\n      features = options.features;\r\n    } else if (options.features) {\r\n      collection = options.features;\r\n      features = collection.getArray();\r\n    }\r\n    if (!useSpatialIndex && collection === undefined) {\r\n      collection = new Collection(features);\r\n    }\r\n    if (features !== undefined) {\r\n      this.addFeaturesInternal(features);\r\n    }\r\n    if (collection !== undefined) {\r\n      this.bindFeaturesCollection_(collection);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Add a single feature to the source.  If you want to add a batch of features\r\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\r\n   * instead. A feature will not be added to the source if feature with\r\n   * the same id is already there. The reason for this behavior is to avoid\r\n   * feature duplication when using bbox or tile loading strategies.\r\n   * Note: this also applies if an {@link module:ol/Collection~Collection} is used for features,\r\n   * meaning that if a feature with a duplicate id is added in the collection, it will\r\n   * be removed from it right away.\r\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\r\n   * @api\r\n   */\r\n  addFeature(feature) {\r\n    this.addFeatureInternal(feature);\r\n    this.changed();\r\n  }\r\n\r\n  /**\r\n   * Add a feature without firing a `change` event.\r\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\r\n   * @protected\r\n   */\r\n  addFeatureInternal(feature) {\r\n    const featureKey = getUid(feature);\r\n\r\n    if (!this.addToIndex_(featureKey, feature)) {\r\n      if (this.featuresCollection_) {\r\n        this.featuresCollection_.remove(feature);\r\n      }\r\n      return;\r\n    }\r\n\r\n    this.setupChangeEvents_(featureKey, feature);\r\n\r\n    const geometry = feature.getGeometry();\r\n    if (geometry) {\r\n      const extent = geometry.getExtent();\r\n      if (this.featuresRtree_) {\r\n        this.featuresRtree_.insert(extent, feature);\r\n      }\r\n    } else {\r\n      this.nullGeometryFeatures_[featureKey] = feature;\r\n    }\r\n\r\n    this.dispatchEvent(\r\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @param {string} featureKey Unique identifier for the feature.\r\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\r\n   * @private\r\n   */\r\n  setupChangeEvents_(featureKey, feature) {\r\n    this.featureChangeKeys_[featureKey] = [\r\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\r\n      listen(\r\n        feature,\r\n        ObjectEventType.PROPERTYCHANGE,\r\n        this.handleFeatureChange_,\r\n        this\r\n      ),\r\n    ];\r\n  }\r\n\r\n  /**\r\n   * @param {string} featureKey Unique identifier for the feature.\r\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\r\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\r\n   *     candidate for insertion into the Rtree.\r\n   * @private\r\n   */\r\n  addToIndex_(featureKey, feature) {\r\n    let valid = true;\r\n    const id = feature.getId();\r\n    if (id !== undefined) {\r\n      if (!(id.toString() in this.idIndex_)) {\r\n        this.idIndex_[id.toString()] = feature;\r\n      } else {\r\n        valid = false;\r\n      }\r\n    }\r\n    if (valid) {\r\n      assert(!(featureKey in this.uidIndex_), 30); // The passed `feature` was already added to the source\r\n      this.uidIndex_[featureKey] = feature;\r\n    }\r\n    return valid;\r\n  }\r\n\r\n  /**\r\n   * Add a batch of features to the source.\r\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\r\n   * @api\r\n   */\r\n  addFeatures(features) {\r\n    this.addFeaturesInternal(features);\r\n    this.changed();\r\n  }\r\n\r\n  /**\r\n   * Add features without firing a `change` event.\r\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\r\n   * @protected\r\n   */\r\n  addFeaturesInternal(features) {\r\n    const extents = [];\r\n    const newFeatures = [];\r\n    const geometryFeatures = [];\r\n\r\n    for (let i = 0, length = features.length; i < length; i++) {\r\n      const feature = features[i];\r\n      const featureKey = getUid(feature);\r\n      if (this.addToIndex_(featureKey, feature)) {\r\n        newFeatures.push(feature);\r\n      }\r\n    }\r\n\r\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\r\n      const feature = newFeatures[i];\r\n      const featureKey = getUid(feature);\r\n      this.setupChangeEvents_(featureKey, feature);\r\n\r\n      const geometry = feature.getGeometry();\r\n      if (geometry) {\r\n        const extent = geometry.getExtent();\r\n        extents.push(extent);\r\n        geometryFeatures.push(feature);\r\n      } else {\r\n        this.nullGeometryFeatures_[featureKey] = feature;\r\n      }\r\n    }\r\n    if (this.featuresRtree_) {\r\n      this.featuresRtree_.load(extents, geometryFeatures);\r\n    }\r\n\r\n    if (this.hasListener(VectorEventType.ADDFEATURE)) {\r\n      for (let i = 0, length = newFeatures.length; i < length; i++) {\r\n        this.dispatchEvent(\r\n          new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i])\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\r\n   * @private\r\n   */\r\n  bindFeaturesCollection_(collection) {\r\n    let modifyingCollection = false;\r\n    this.addEventListener(\r\n      VectorEventType.ADDFEATURE,\r\n      /**\r\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\r\n       */\r\n      function (evt) {\r\n        if (!modifyingCollection) {\r\n          modifyingCollection = true;\r\n          collection.push(evt.feature);\r\n          modifyingCollection = false;\r\n        }\r\n      }\r\n    );\r\n    this.addEventListener(\r\n      VectorEventType.REMOVEFEATURE,\r\n      /**\r\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\r\n       */\r\n      function (evt) {\r\n        if (!modifyingCollection) {\r\n          modifyingCollection = true;\r\n          collection.remove(evt.feature);\r\n          modifyingCollection = false;\r\n        }\r\n      }\r\n    );\r\n    collection.addEventListener(\r\n      CollectionEventType.ADD,\r\n      /**\r\n       * @param {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default<Geometry>>} evt The collection event\r\n       */\r\n      function (evt) {\r\n        if (!modifyingCollection) {\r\n          modifyingCollection = true;\r\n          this.addFeature(evt.element);\r\n          modifyingCollection = false;\r\n        }\r\n      }.bind(this)\r\n    );\r\n    collection.addEventListener(\r\n      CollectionEventType.REMOVE,\r\n      /**\r\n       * @param {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default<Geometry>>} evt The collection event\r\n       */\r\n      function (evt) {\r\n        if (!modifyingCollection) {\r\n          modifyingCollection = true;\r\n          this.removeFeature(evt.element);\r\n          modifyingCollection = false;\r\n        }\r\n      }.bind(this)\r\n    );\r\n    this.featuresCollection_ = collection;\r\n  }\r\n\r\n  /**\r\n   * Remove all features from the source.\r\n   * @param {boolean} [fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature} events.\r\n   * @api\r\n   */\r\n  clear(fast) {\r\n    if (fast) {\r\n      for (const featureId in this.featureChangeKeys_) {\r\n        const keys = this.featureChangeKeys_[featureId];\r\n        keys.forEach(unlistenByKey);\r\n      }\r\n      if (!this.featuresCollection_) {\r\n        this.featureChangeKeys_ = {};\r\n        this.idIndex_ = {};\r\n        this.uidIndex_ = {};\r\n      }\r\n    } else {\r\n      if (this.featuresRtree_) {\r\n        const removeAndIgnoreReturn = function (feature) {\r\n          this.removeFeatureInternal(feature);\r\n        }.bind(this);\r\n        this.featuresRtree_.forEach(removeAndIgnoreReturn);\r\n        for (const id in this.nullGeometryFeatures_) {\r\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\r\n        }\r\n      }\r\n    }\r\n    if (this.featuresCollection_) {\r\n      this.featuresCollection_.clear();\r\n    }\r\n\r\n    if (this.featuresRtree_) {\r\n      this.featuresRtree_.clear();\r\n    }\r\n    this.nullGeometryFeatures_ = {};\r\n\r\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\r\n    this.dispatchEvent(clearEvent);\r\n    this.changed();\r\n  }\r\n\r\n  /**\r\n   * Iterate through all features on the source, calling the provided callback\r\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\r\n   * stop and the function will return the same value.\r\n   * Note: this function only iterate through the feature that have a defined geometry.\r\n   *\r\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\r\n   *     on the source.  Return a truthy value to stop iteration.\r\n   * @return {T|undefined} The return value from the last call to the callback.\r\n   * @template T\r\n   * @api\r\n   */\r\n  forEachFeature(callback) {\r\n    if (this.featuresRtree_) {\r\n      return this.featuresRtree_.forEach(callback);\r\n    } else if (this.featuresCollection_) {\r\n      this.featuresCollection_.forEach(callback);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Iterate through all features whose geometries contain the provided\r\n   * coordinate, calling the callback with each feature.  If the callback returns\r\n   * a \"truthy\" value, iteration will stop and the function will return the same\r\n   * value.\r\n   *\r\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\r\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\r\n   *     whose goemetry contains the provided coordinate.\r\n   * @return {T|undefined} The return value from the last call to the callback.\r\n   * @template T\r\n   */\r\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\r\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\r\n    return this.forEachFeatureInExtent(extent, function (feature) {\r\n      const geometry = feature.getGeometry();\r\n      if (geometry.intersectsCoordinate(coordinate)) {\r\n        return callback(feature);\r\n      } else {\r\n        return undefined;\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Iterate through all features whose bounding box intersects the provided\r\n   * extent (note that the feature's geometry may not intersect the extent),\r\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\r\n   * value, iteration will stop and the function will return the same value.\r\n   *\r\n   * If you are interested in features whose geometry intersects an extent, call\r\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\r\n   *\r\n   * When `useSpatialIndex` is set to false, this method will loop through all\r\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\r\n   *\r\n   * @param {import(\"../extent.js\").Extent} extent Extent.\r\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\r\n   *     whose bounding box intersects the provided extent.\r\n   * @return {T|undefined} The return value from the last call to the callback.\r\n   * @template T\r\n   * @api\r\n   */\r\n  forEachFeatureInExtent(extent, callback) {\r\n    if (this.featuresRtree_) {\r\n      return this.featuresRtree_.forEachInExtent(extent, callback);\r\n    } else if (this.featuresCollection_) {\r\n      this.featuresCollection_.forEach(callback);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Iterate through all features whose geometry intersects the provided extent,\r\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\r\n   * value, iteration will stop and the function will return the same value.\r\n   *\r\n   * If you only want to test for bounding box intersection, call the\r\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\r\n   *\r\n   * @param {import(\"../extent.js\").Extent} extent Extent.\r\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\r\n   *     whose geometry intersects the provided extent.\r\n   * @return {T|undefined} The return value from the last call to the callback.\r\n   * @template T\r\n   * @api\r\n   */\r\n  forEachFeatureIntersectingExtent(extent, callback) {\r\n    return this.forEachFeatureInExtent(\r\n      extent,\r\n      /**\r\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\r\n       * @return {T|undefined} The return value from the last call to the callback.\r\n       */\r\n      function (feature) {\r\n        const geometry = feature.getGeometry();\r\n        if (geometry.intersectsExtent(extent)) {\r\n          const result = callback(feature);\r\n          if (result) {\r\n            return result;\r\n          }\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Get the features collection associated with this source. Will be `null`\r\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\r\n   * with an {@link module:ol/Collection~Collection} as `features`.\r\n   * @return {Collection<import(\"../Feature.js\").default<Geometry>>|null} The collection of features.\r\n   * @api\r\n   */\r\n  getFeaturesCollection() {\r\n    return this.featuresCollection_;\r\n  }\r\n\r\n  /**\r\n   * Get a snapshot of the features currently on the source in random order. The returned array\r\n   * is a copy, the features are references to the features in the source.\r\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\r\n   * @api\r\n   */\r\n  getFeatures() {\r\n    let features;\r\n    if (this.featuresCollection_) {\r\n      features = this.featuresCollection_.getArray().slice(0);\r\n    } else if (this.featuresRtree_) {\r\n      features = this.featuresRtree_.getAll();\r\n      if (!isEmpty(this.nullGeometryFeatures_)) {\r\n        extend(features, Object.values(this.nullGeometryFeatures_));\r\n      }\r\n    }\r\n    return /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (\r\n      features\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Get all features whose geometry intersects the provided coordinate.\r\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\r\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\r\n   * @api\r\n   */\r\n  getFeaturesAtCoordinate(coordinate) {\r\n    const features = [];\r\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\r\n      features.push(feature);\r\n    });\r\n    return features;\r\n  }\r\n\r\n  /**\r\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\r\n   * all features intersecting the given extent in random order (so it may include\r\n   * features whose geometries do not intersect the extent).\r\n   *\r\n   * When `useSpatialIndex` is set to false, this method will return all\r\n   * features.\r\n   *\r\n   * @param {import(\"../extent.js\").Extent} extent Extent.\r\n   * @param {import(\"../proj/Projection.js\").default} [projection] Include features\r\n   * where `extent` exceeds the x-axis bounds of `projection` and wraps around the world.\r\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\r\n   * @api\r\n   */\r\n  getFeaturesInExtent(extent, projection) {\r\n    if (this.featuresRtree_) {\r\n      const multiWorld = projection && projection.canWrapX() && this.getWrapX();\r\n\r\n      if (!multiWorld) {\r\n        return this.featuresRtree_.getInExtent(extent);\r\n      }\r\n\r\n      const extents = wrapAndSliceX(extent, projection);\r\n\r\n      return [].concat(\r\n        ...extents.map((anExtent) => this.featuresRtree_.getInExtent(anExtent))\r\n      );\r\n    } else if (this.featuresCollection_) {\r\n      return this.featuresCollection_.getArray().slice(0);\r\n    } else {\r\n      return [];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get the closest feature to the provided coordinate.\r\n   *\r\n   * This method is not available when the source is configured with\r\n   * `useSpatialIndex` set to `false`.\r\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\r\n   * @param {function(import(\"../Feature.js\").default<Geometry>):boolean} [filter] Feature filter function.\r\n   *     The filter function will receive one argument, the {@link module:ol/Feature~Feature feature}\r\n   *     and it should return a boolean value. By default, no filtering is made.\r\n   * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\r\n   * @api\r\n   */\r\n  getClosestFeatureToCoordinate(coordinate, filter) {\r\n    // Find the closest feature using branch and bound.  We start searching an\r\n    // infinite extent, and find the distance from the first feature found.  This\r\n    // becomes the closest feature.  We then compute a smaller extent which any\r\n    // closer feature must intersect.  We continue searching with this smaller\r\n    // extent, trying to find a closer feature.  Every time we find a closer\r\n    // feature, we update the extent being searched so that any even closer\r\n    // feature must intersect it.  We continue until we run out of features.\r\n    const x = coordinate[0];\r\n    const y = coordinate[1];\r\n    let closestFeature = null;\r\n    const closestPoint = [NaN, NaN];\r\n    let minSquaredDistance = Infinity;\r\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\r\n    filter = filter ? filter : TRUE;\r\n    this.featuresRtree_.forEachInExtent(\r\n      extent,\r\n      /**\r\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\r\n       */\r\n      function (feature) {\r\n        if (filter(feature)) {\r\n          const geometry = feature.getGeometry();\r\n          const previousMinSquaredDistance = minSquaredDistance;\r\n          minSquaredDistance = geometry.closestPointXY(\r\n            x,\r\n            y,\r\n            closestPoint,\r\n            minSquaredDistance\r\n          );\r\n          if (minSquaredDistance < previousMinSquaredDistance) {\r\n            closestFeature = feature;\r\n            // This is sneaky.  Reduce the extent that it is currently being\r\n            // searched while the R-Tree traversal using this same extent object\r\n            // is still in progress.  This is safe because the new extent is\r\n            // strictly contained by the old extent.\r\n            const minDistance = Math.sqrt(minSquaredDistance);\r\n            extent[0] = x - minDistance;\r\n            extent[1] = y - minDistance;\r\n            extent[2] = x + minDistance;\r\n            extent[3] = y + minDistance;\r\n          }\r\n        }\r\n      }\r\n    );\r\n    return closestFeature;\r\n  }\r\n\r\n  /**\r\n   * Get the extent of the features currently in the source.\r\n   *\r\n   * This method is not available when the source is configured with\r\n   * `useSpatialIndex` set to `false`.\r\n   * @param {import(\"../extent.js\").Extent} [extent] Destination extent. If provided, no new extent\r\n   *     will be created. Instead, that extent's coordinates will be overwritten.\r\n   * @return {import(\"../extent.js\").Extent} Extent.\r\n   * @api\r\n   */\r\n  getExtent(extent) {\r\n    return this.featuresRtree_.getExtent(extent);\r\n  }\r\n\r\n  /**\r\n   * Get a feature by its identifier (the value returned by feature.getId()).\r\n   * Note that the index treats string and numeric identifiers as the same.  So\r\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\r\n   *\r\n   * @param {string|number} id Feature identifier.\r\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\r\n   * @api\r\n   */\r\n  getFeatureById(id) {\r\n    const feature = this.idIndex_[id.toString()];\r\n    return feature !== undefined ? feature : null;\r\n  }\r\n\r\n  /**\r\n   * Get a feature by its internal unique identifier (using `getUid`).\r\n   *\r\n   * @param {string} uid Feature identifier.\r\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\r\n   */\r\n  getFeatureByUid(uid) {\r\n    const feature = this.uidIndex_[uid];\r\n    return feature !== undefined ? feature : null;\r\n  }\r\n\r\n  /**\r\n   * Get the format associated with this source.\r\n   *\r\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\r\n   * @api\r\n   */\r\n  getFormat() {\r\n    return this.format_;\r\n  }\r\n\r\n  /**\r\n   * @return {boolean} The source can have overlapping geometries.\r\n   */\r\n  getOverlaps() {\r\n    return this.overlaps_;\r\n  }\r\n\r\n  /**\r\n   * Get the url associated with this source.\r\n   *\r\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\r\n   * @api\r\n   */\r\n  getUrl() {\r\n    return this.url_;\r\n  }\r\n\r\n  /**\r\n   * @param {Event} event Event.\r\n   * @private\r\n   */\r\n  handleFeatureChange_(event) {\r\n    const feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (\r\n      event.target\r\n    );\r\n    const featureKey = getUid(feature);\r\n    const geometry = feature.getGeometry();\r\n    if (!geometry) {\r\n      if (!(featureKey in this.nullGeometryFeatures_)) {\r\n        if (this.featuresRtree_) {\r\n          this.featuresRtree_.remove(feature);\r\n        }\r\n        this.nullGeometryFeatures_[featureKey] = feature;\r\n      }\r\n    } else {\r\n      const extent = geometry.getExtent();\r\n      if (featureKey in this.nullGeometryFeatures_) {\r\n        delete this.nullGeometryFeatures_[featureKey];\r\n        if (this.featuresRtree_) {\r\n          this.featuresRtree_.insert(extent, feature);\r\n        }\r\n      } else {\r\n        if (this.featuresRtree_) {\r\n          this.featuresRtree_.update(extent, feature);\r\n        }\r\n      }\r\n    }\r\n    const id = feature.getId();\r\n    if (id !== undefined) {\r\n      const sid = id.toString();\r\n      if (this.idIndex_[sid] !== feature) {\r\n        this.removeFromIdIndex_(feature);\r\n        this.idIndex_[sid] = feature;\r\n      }\r\n    } else {\r\n      this.removeFromIdIndex_(feature);\r\n      this.uidIndex_[featureKey] = feature;\r\n    }\r\n    this.changed();\r\n    this.dispatchEvent(\r\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Returns true if the feature is contained within the source.\r\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\r\n   * @return {boolean} Has feature.\r\n   * @api\r\n   */\r\n  hasFeature(feature) {\r\n    const id = feature.getId();\r\n    if (id !== undefined) {\r\n      return id in this.idIndex_;\r\n    } else {\r\n      return getUid(feature) in this.uidIndex_;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @return {boolean} Is empty.\r\n   */\r\n  isEmpty() {\r\n    if (this.featuresRtree_) {\r\n      return (\r\n        this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_)\r\n      );\r\n    }\r\n    if (this.featuresCollection_) {\r\n      return this.featuresCollection_.getLength() === 0;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../extent.js\").Extent} extent Extent.\r\n   * @param {number} resolution Resolution.\r\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\r\n   */\r\n  loadFeatures(extent, resolution, projection) {\r\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\r\n    const extentsToLoad = this.strategy_(extent, resolution, projection);\r\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\r\n      const extentToLoad = extentsToLoad[i];\r\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\r\n        extentToLoad,\r\n        /**\r\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\r\n         * @return {boolean} Contains.\r\n         */\r\n        function (object) {\r\n          return containsExtent(object.extent, extentToLoad);\r\n        }\r\n      );\r\n      if (!alreadyLoaded) {\r\n        ++this.loadingExtentsCount_;\r\n        this.dispatchEvent(\r\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART)\r\n        );\r\n        this.loader_.call(\r\n          this,\r\n          extentToLoad,\r\n          resolution,\r\n          projection,\r\n          function (features) {\r\n            --this.loadingExtentsCount_;\r\n            this.dispatchEvent(\r\n              new VectorSourceEvent(\r\n                VectorEventType.FEATURESLOADEND,\r\n                undefined,\r\n                features\r\n              )\r\n            );\r\n          }.bind(this),\r\n          function () {\r\n            --this.loadingExtentsCount_;\r\n            this.dispatchEvent(\r\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR)\r\n            );\r\n          }.bind(this)\r\n        );\r\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\r\n      }\r\n    }\r\n    this.loading =\r\n      this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\r\n  }\r\n\r\n  refresh() {\r\n    this.clear(true);\r\n    this.loadedExtentsRtree_.clear();\r\n    super.refresh();\r\n  }\r\n\r\n  /**\r\n   * Remove an extent from the list of loaded extents.\r\n   * @param {import(\"../extent.js\").Extent} extent Extent.\r\n   * @api\r\n   */\r\n  removeLoadedExtent(extent) {\r\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\r\n    let obj;\r\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\r\n      if (equals(object.extent, extent)) {\r\n        obj = object;\r\n        return true;\r\n      }\r\n    });\r\n    if (obj) {\r\n      loadedExtentsRtree.remove(obj);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Remove a single feature from the source.  If you want to remove all features\r\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\r\n   * instead.\r\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\r\n   * @api\r\n   */\r\n  removeFeature(feature) {\r\n    if (!feature) {\r\n      return;\r\n    }\r\n    const featureKey = getUid(feature);\r\n    if (featureKey in this.nullGeometryFeatures_) {\r\n      delete this.nullGeometryFeatures_[featureKey];\r\n    } else {\r\n      if (this.featuresRtree_) {\r\n        this.featuresRtree_.remove(feature);\r\n      }\r\n    }\r\n    const result = this.removeFeatureInternal(feature);\r\n    if (result) {\r\n      this.changed();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Remove feature without firing a `change` event.\r\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\r\n   * @return {import(\"../Feature.js\").default<Geometry>|undefined} The removed feature\r\n   *     (or undefined if the feature was not found).\r\n   * @protected\r\n   */\r\n  removeFeatureInternal(feature) {\r\n    const featureKey = getUid(feature);\r\n    const featureChangeKeys = this.featureChangeKeys_[featureKey];\r\n    if (!featureChangeKeys) {\r\n      return;\r\n    }\r\n    featureChangeKeys.forEach(unlistenByKey);\r\n    delete this.featureChangeKeys_[featureKey];\r\n    const id = feature.getId();\r\n    if (id !== undefined) {\r\n      delete this.idIndex_[id.toString()];\r\n    }\r\n    delete this.uidIndex_[featureKey];\r\n    this.dispatchEvent(\r\n      new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature)\r\n    );\r\n    return feature;\r\n  }\r\n\r\n  /**\r\n   * Remove a feature from the id index.  Called internally when the feature id\r\n   * may have changed.\r\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\r\n   * @return {boolean} Removed the feature from the index.\r\n   * @private\r\n   */\r\n  removeFromIdIndex_(feature) {\r\n    let removed = false;\r\n    for (const id in this.idIndex_) {\r\n      if (this.idIndex_[id] === feature) {\r\n        delete this.idIndex_[id];\r\n        removed = true;\r\n        break;\r\n      }\r\n    }\r\n    return removed;\r\n  }\r\n\r\n  /**\r\n   * Set the new loader of the source. The next render cycle will use the\r\n   * new loader.\r\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\r\n   * @api\r\n   */\r\n  setLoader(loader) {\r\n    this.loader_ = loader;\r\n  }\r\n\r\n  /**\r\n   * Points the source to a new url. The next render cycle will use the new url.\r\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\r\n   * @api\r\n   */\r\n  setUrl(url) {\r\n    assert(this.format_, 7); // `format` must be set when `url` is set\r\n    this.url_ = url;\r\n    this.setLoader(xhr(url, this.format_));\r\n  }\r\n}\r\n\r\nexport default VectorSource;\r\n","/**\r\n * @module ol/layer/TileProperty\r\n */\r\n\r\n/**\r\n * @enum {string}\r\n */\r\nexport default {\r\n  PRELOAD: 'preload',\r\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\r\n};\r\n","/**\r\n * @module ol/layer/BaseTile\r\n */\r\nimport Layer from './Layer.js';\r\nimport TileProperty from './TileProperty.js';\r\n\r\n/***\r\n * @template Return\r\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\r\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\r\n *     'change:source'|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\r\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\r\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\r\n *   'change:source'|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\r\n */\r\n\r\n/**\r\n * @template {import(\"../source/Tile.js\").default} TileSourceType\r\n * @typedef {Object} Options\r\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\r\n * @property {number} [opacity=1] Opacity (0, 1).\r\n * @property {boolean} [visible=true] Visibility.\r\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\r\n * rendered outside of this extent.\r\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\r\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\r\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\r\n * method was used.\r\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\r\n * visible.\r\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\r\n * be visible.\r\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\r\n * visible.\r\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\r\n * be visible.\r\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\r\n * means no preloading.\r\n * @property {TileSourceType} [source] Source for this layer.\r\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\r\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\r\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\r\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\r\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\r\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * For layer sources that provide pre-rendered, tiled images in grids that are\r\n * organized by zoom levels for specific resolutions.\r\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\r\n * property on the layer object; for example, setting `title: 'My Title'` in the\r\n * options means that `title` is observable, and has get/set accessors.\r\n *\r\n * @template {import(\"../source/Tile.js\").default} TileSourceType\r\n * @template {import(\"../renderer/Layer.js\").default} RendererType\r\n * @extends {Layer<TileSourceType, RendererType>}\r\n * @api\r\n */\r\nclass BaseTileLayer extends Layer {\r\n  /**\r\n   * @param {Options<TileSourceType>} [options] Tile layer options.\r\n   */\r\n  constructor(options) {\r\n    options = options ? options : {};\r\n\r\n    const baseOptions = Object.assign({}, options);\r\n\r\n    delete baseOptions.preload;\r\n    delete baseOptions.useInterimTilesOnError;\r\n    super(baseOptions);\r\n\r\n    /***\r\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\r\n     */\r\n    this.on;\r\n\r\n    /***\r\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\r\n     */\r\n    this.once;\r\n\r\n    /***\r\n     * @type {BaseTileLayerOnSignature<void>}\r\n     */\r\n    this.un;\r\n\r\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\r\n    this.setUseInterimTilesOnError(\r\n      options.useInterimTilesOnError !== undefined\r\n        ? options.useInterimTilesOnError\r\n        : true\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Return the level as number to which we will preload tiles up to.\r\n   * @return {number} The level to preload tiles up to.\r\n   * @observable\r\n   * @api\r\n   */\r\n  getPreload() {\r\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\r\n  }\r\n\r\n  /**\r\n   * Set the level as number to which we will preload tiles up to.\r\n   * @param {number} preload The level to preload tiles up to.\r\n   * @observable\r\n   * @api\r\n   */\r\n  setPreload(preload) {\r\n    this.set(TileProperty.PRELOAD, preload);\r\n  }\r\n\r\n  /**\r\n   * Whether we use interim tiles on error.\r\n   * @return {boolean} Use interim tiles on error.\r\n   * @observable\r\n   * @api\r\n   */\r\n  getUseInterimTilesOnError() {\r\n    return /** @type {boolean} */ (\r\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Set whether we use interim tiles on error.\r\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\r\n   * @observable\r\n   * @api\r\n   */\r\n  setUseInterimTilesOnError(useInterimTilesOnError) {\r\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\r\n  }\r\n\r\n  /**\r\n   * Get data for a pixel location.  The return type depends on the source data.  For image tiles,\r\n   * a four element RGBA array will be returned.  For data tiles, the array length will match the\r\n   * number of bands in the dataset.  For requests outside the layer extent, `null` will be returned.\r\n   * Data for a image tiles can only be retrieved if the source's `crossOrigin` property is set.\r\n   *\r\n   * ```js\r\n   * // display layer data on every pointer move\r\n   * map.on('pointermove', (event) => {\r\n   *   console.log(layer.getData(event.pixel));\r\n   * });\r\n   * ```\r\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\r\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\r\n   * @api\r\n   */\r\n  getData(pixel) {\r\n    return super.getData(pixel);\r\n  }\r\n}\r\n\r\nexport default BaseTileLayer;\r\n","/**\r\n * @module ol/Tile\r\n */\r\nimport EventTarget from './events/Target.js';\r\nimport EventType from './events/EventType.js';\r\nimport TileState from './TileState.js';\r\nimport {abstract} from './util.js';\r\nimport {easeIn} from './easing.js';\r\n\r\n/**\r\n * A function that takes an {@link module:ol/Tile~Tile} for the tile and a\r\n * `{string}` for the url as arguments. The default is\r\n * ```js\r\n * source.setTileLoadFunction(function(tile, src) {\r\n *   tile.getImage().src = src;\r\n * });\r\n * ```\r\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\r\n * error handling:\r\n *\r\n * ```js\r\n * import TileState from 'ol/TileState';\r\n *\r\n * source.setTileLoadFunction(function(tile, src) {\r\n *   const xhr = new XMLHttpRequest();\r\n *   xhr.responseType = 'blob';\r\n *   xhr.addEventListener('loadend', function (evt) {\r\n *     const data = this.response;\r\n *     if (data !== undefined) {\r\n *       tile.getImage().src = URL.createObjectURL(data);\r\n *     } else {\r\n *       tile.setState(TileState.ERROR);\r\n *     }\r\n *   });\r\n *   xhr.addEventListener('error', function () {\r\n *     tile.setState(TileState.ERROR);\r\n *   });\r\n *   xhr.open('GET', src);\r\n *   xhr.send();\r\n * });\r\n * ```\r\n *\r\n * @typedef {function(Tile, string): void} LoadFunction\r\n * @api\r\n */\r\n\r\n/**\r\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\r\n * the url that provides a tile for a given tile coordinate.\r\n *\r\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\r\n * coordinate, a `{number}` representing the pixel ratio and a\r\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\r\n * and returns a `{string}` representing the tile URL, or undefined if no tile\r\n * should be requested for the passed tile coordinate.\r\n *\r\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\r\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\r\n * @api\r\n */\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {number} [transition=250] A duration for tile opacity\r\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\r\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\r\n * the nearest neighbor is used when resampling.\r\n * @api\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Base class for tiles.\r\n *\r\n * @abstract\r\n */\r\nclass Tile extends EventTarget {\r\n  /**\r\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\r\n   * @param {import(\"./TileState.js\").default} state State.\r\n   * @param {Options} [options] Tile options.\r\n   */\r\n  constructor(tileCoord, state, options) {\r\n    super();\r\n\r\n    options = options ? options : {};\r\n\r\n    /**\r\n     * @type {import(\"./tilecoord.js\").TileCoord}\r\n     */\r\n    this.tileCoord = tileCoord;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {import(\"./TileState.js\").default}\r\n     */\r\n    this.state = state;\r\n\r\n    /**\r\n     * An \"interim\" tile for this tile. The interim tile may be used while this\r\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\r\n     * on the source.\r\n     * @type {Tile}\r\n     */\r\n    this.interimTile = null;\r\n\r\n    /**\r\n     * A key assigned to the tile. This is used by the tile source to determine\r\n     * if this tile can effectively be used, or if a new tile should be created\r\n     * and this one be used as an interim tile for this new tile.\r\n     * @type {string}\r\n     */\r\n    this.key = '';\r\n\r\n    /**\r\n     * The duration for the opacity transition.\r\n     * @type {number}\r\n     */\r\n    this.transition_ =\r\n      options.transition === undefined ? 250 : options.transition;\r\n\r\n    /**\r\n     * Lookup of start times for rendering transitions.  If the start time is\r\n     * equal to -1, the transition is complete.\r\n     * @type {Object<string, number>}\r\n     */\r\n    this.transitionStarts_ = {};\r\n\r\n    /**\r\n     * @type {boolean}\r\n     */\r\n    this.interpolate = !!options.interpolate;\r\n  }\r\n\r\n  /**\r\n   * @protected\r\n   */\r\n  changed() {\r\n    this.dispatchEvent(EventType.CHANGE);\r\n  }\r\n\r\n  /**\r\n   * Called by the tile cache when the tile is removed from the cache due to expiry\r\n   */\r\n  release() {\r\n    if (this.state === TileState.ERROR) {\r\n      // to remove the `change` listener on this tile in `ol/TileQueue#handleTileChange`\r\n      this.setState(TileState.EMPTY);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @return {string} Key.\r\n   */\r\n  getKey() {\r\n    return this.key + '/' + this.tileCoord;\r\n  }\r\n\r\n  /**\r\n   * Get the interim tile most suitable for rendering using the chain of interim\r\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\r\n   * such tile exists, the original tile is returned.\r\n   * @return {!Tile} Best tile for rendering.\r\n   */\r\n  getInterimTile() {\r\n    if (!this.interimTile) {\r\n      //empty chain\r\n      return this;\r\n    }\r\n    let tile = this.interimTile;\r\n\r\n    // find the first loaded tile and return it. Since the chain is sorted in\r\n    // decreasing order of creation time, there is no need to search the remainder\r\n    // of the list (all those tiles correspond to older requests and will be\r\n    // cleaned up by refreshInterimChain)\r\n    do {\r\n      if (tile.getState() == TileState.LOADED) {\r\n        // Show tile immediately instead of fading it in after loading, because\r\n        // the interim tile is in place already\r\n        this.transition_ = 0;\r\n        return tile;\r\n      }\r\n      tile = tile.interimTile;\r\n    } while (tile);\r\n\r\n    // we can not find a better tile\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Goes through the chain of interim tiles and discards sections of the chain\r\n   * that are no longer relevant.\r\n   */\r\n  refreshInterimChain() {\r\n    if (!this.interimTile) {\r\n      return;\r\n    }\r\n\r\n    let tile = this.interimTile;\r\n\r\n    /**\r\n     * @type {Tile}\r\n     */\r\n    let prev = this;\r\n\r\n    do {\r\n      if (tile.getState() == TileState.LOADED) {\r\n        //we have a loaded tile, we can discard the rest of the list\r\n        //we would could abort any LOADING tile request\r\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\r\n        tile.interimTile = null;\r\n        break;\r\n      } else if (tile.getState() == TileState.LOADING) {\r\n        //keep this LOADING tile any loaded tiles later in the chain are\r\n        //older than this tile, so we're still interested in the request\r\n        prev = tile;\r\n      } else if (tile.getState() == TileState.IDLE) {\r\n        //the head of the list is the most current tile, we don't need\r\n        //to start any other requests for this chain\r\n        prev.interimTile = tile.interimTile;\r\n      } else {\r\n        prev = tile;\r\n      }\r\n      tile = prev.interimTile;\r\n    } while (tile);\r\n  }\r\n\r\n  /**\r\n   * Get the tile coordinate for this tile.\r\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\r\n   * @api\r\n   */\r\n  getTileCoord() {\r\n    return this.tileCoord;\r\n  }\r\n\r\n  /**\r\n   * @return {import(\"./TileState.js\").default} State.\r\n   */\r\n  getState() {\r\n    return this.state;\r\n  }\r\n\r\n  /**\r\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\r\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\r\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\r\n   * the tile queue and will block other requests.\r\n   * @param {import(\"./TileState.js\").default} state State.\r\n   * @api\r\n   */\r\n  setState(state) {\r\n    if (this.state !== TileState.ERROR && this.state > state) {\r\n      throw new Error('Tile load sequence violation');\r\n    }\r\n    this.state = state;\r\n    this.changed();\r\n  }\r\n\r\n  /**\r\n   * Load the image or retry if loading previously failed.\r\n   * Loading is taken care of by the tile queue, and calling this method is\r\n   * only needed for preloading or for reloading in case of an error.\r\n   * @abstract\r\n   * @api\r\n   */\r\n  load() {\r\n    abstract();\r\n  }\r\n\r\n  /**\r\n   * Get the alpha value for rendering.\r\n   * @param {string} id An id for the renderer.\r\n   * @param {number} time The render frame time.\r\n   * @return {number} A number between 0 and 1.\r\n   */\r\n  getAlpha(id, time) {\r\n    if (!this.transition_) {\r\n      return 1;\r\n    }\r\n\r\n    let start = this.transitionStarts_[id];\r\n    if (!start) {\r\n      start = time;\r\n      this.transitionStarts_[id] = start;\r\n    } else if (start === -1) {\r\n      return 1;\r\n    }\r\n\r\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\r\n    if (delta >= this.transition_) {\r\n      return 1;\r\n    }\r\n    return easeIn(delta / this.transition_);\r\n  }\r\n\r\n  /**\r\n   * Determine if a tile is in an alpha transition.  A tile is considered in\r\n   * transition if tile.getAlpha() has not yet been called or has been called\r\n   * and returned 1.\r\n   * @param {string} id An id for the renderer.\r\n   * @return {boolean} The tile is in transition.\r\n   */\r\n  inTransition(id) {\r\n    if (!this.transition_) {\r\n      return false;\r\n    }\r\n    return this.transitionStarts_[id] !== -1;\r\n  }\r\n\r\n  /**\r\n   * Mark a transition as complete.\r\n   * @param {string} id An id for the renderer.\r\n   */\r\n  endTransition(id) {\r\n    if (this.transition_) {\r\n      this.transitionStarts_[id] = -1;\r\n    }\r\n  }\r\n}\r\n\r\nexport default Tile;\r\n","/**\r\n * @module ol/ImageTile\r\n */\r\nimport Tile from './Tile.js';\r\nimport TileState from './TileState.js';\r\nimport {createCanvasContext2D} from './dom.js';\r\nimport {listenImage} from './Image.js';\r\n\r\nclass ImageTile extends Tile {\r\n  /**\r\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\r\n   * @param {import(\"./TileState.js\").default} state State.\r\n   * @param {string} src Image source URI.\r\n   * @param {?string} crossOrigin Cross origin.\r\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\r\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\r\n   */\r\n  constructor(tileCoord, state, src, crossOrigin, tileLoadFunction, options) {\r\n    super(tileCoord, state, options);\r\n\r\n    /**\r\n     * @private\r\n     * @type {?string}\r\n     */\r\n    this.crossOrigin_ = crossOrigin;\r\n\r\n    /**\r\n     * Image URI\r\n     *\r\n     * @private\r\n     * @type {string}\r\n     */\r\n    this.src_ = src;\r\n\r\n    this.key = src;\r\n\r\n    /**\r\n     * @private\r\n     * @type {HTMLImageElement|HTMLCanvasElement}\r\n     */\r\n    this.image_ = new Image();\r\n    if (crossOrigin !== null) {\r\n      this.image_.crossOrigin = crossOrigin;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @type {?function():void}\r\n     */\r\n    this.unlisten_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"./Tile.js\").LoadFunction}\r\n     */\r\n    this.tileLoadFunction_ = tileLoadFunction;\r\n  }\r\n\r\n  /**\r\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\r\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\r\n   * @api\r\n   */\r\n  getImage() {\r\n    return this.image_;\r\n  }\r\n\r\n  /**\r\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\r\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\r\n   */\r\n  setImage(element) {\r\n    this.image_ = element;\r\n    this.state = TileState.LOADED;\r\n    this.unlistenImage_();\r\n    this.changed();\r\n  }\r\n\r\n  /**\r\n   * Tracks loading or read errors.\r\n   *\r\n   * @private\r\n   */\r\n  handleImageError_() {\r\n    this.state = TileState.ERROR;\r\n    this.unlistenImage_();\r\n    this.image_ = getBlankImage();\r\n    this.changed();\r\n  }\r\n\r\n  /**\r\n   * Tracks successful image load.\r\n   *\r\n   * @private\r\n   */\r\n  handleImageLoad_() {\r\n    const image = /** @type {HTMLImageElement} */ (this.image_);\r\n    if (image.naturalWidth && image.naturalHeight) {\r\n      this.state = TileState.LOADED;\r\n    } else {\r\n      this.state = TileState.EMPTY;\r\n    }\r\n    this.unlistenImage_();\r\n    this.changed();\r\n  }\r\n\r\n  /**\r\n   * Load the image or retry if loading previously failed.\r\n   * Loading is taken care of by the tile queue, and calling this method is\r\n   * only needed for preloading or for reloading in case of an error.\r\n   *\r\n   * To retry loading tiles on failed requests, use a custom `tileLoadFunction`\r\n   * that checks for error status codes and reloads only when the status code is\r\n   * 408, 429, 500, 502, 503 and 504, and only when not too many retries have been\r\n   * made already:\r\n   *\r\n   * ```js\r\n   * const retryCodes = [408, 429, 500, 502, 503, 504];\r\n   * const retries = {};\r\n   * source.setTileLoadFunction((tile, src) => {\r\n   *   const image = tile.getImage();\r\n   *   fetch(src)\r\n   *     .then((response) => {\r\n   *       if (retryCodes.includes(response.status)) {\r\n   *         retries[src] = (retries[src] || 0) + 1;\r\n   *         if (retries[src] <= 3) {\r\n   *           setTimeout(() => tile.load(), retries[src] * 1000);\r\n   *         }\r\n   *         return Promise.reject();\r\n   *       }\r\n   *       return response.blob();\r\n   *     })\r\n   *     .then((blob) => {\r\n   *       const imageUrl = URL.createObjectURL(blob);\r\n   *       image.src = imageUrl;\r\n   *       setTimeout(() => URL.revokeObjectURL(imageUrl), 5000);\r\n   *     })\r\n   *     .catch(() => tile.setState(3)); // error\r\n   * });\r\n   * ```\r\n   *\r\n   * @api\r\n   */\r\n  load() {\r\n    if (this.state == TileState.ERROR) {\r\n      this.state = TileState.IDLE;\r\n      this.image_ = new Image();\r\n      if (this.crossOrigin_ !== null) {\r\n        this.image_.crossOrigin = this.crossOrigin_;\r\n      }\r\n    }\r\n    if (this.state == TileState.IDLE) {\r\n      this.state = TileState.LOADING;\r\n      this.changed();\r\n      this.tileLoadFunction_(this, this.src_);\r\n      this.unlisten_ = listenImage(\r\n        this.image_,\r\n        this.handleImageLoad_.bind(this),\r\n        this.handleImageError_.bind(this)\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Discards event handlers which listen for load completion or errors.\r\n   *\r\n   * @private\r\n   */\r\n  unlistenImage_() {\r\n    if (this.unlisten_) {\r\n      this.unlisten_();\r\n      this.unlisten_ = null;\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Get a 1-pixel blank image.\r\n * @return {HTMLCanvasElement} Blank image.\r\n */\r\nfunction getBlankImage() {\r\n  const ctx = createCanvasContext2D(1, 1);\r\n  ctx.fillStyle = 'rgba(0,0,0,0)';\r\n  ctx.fillRect(0, 0, 1, 1);\r\n  return ctx.canvas;\r\n}\r\n\r\nexport default ImageTile;\r\n","/**\r\n * @module ol/reproj/common\r\n */\r\n\r\n/**\r\n * Default maximum allowed threshold  (in pixels) for reprojection\r\n * triangulation.\r\n * @type {number}\r\n */\r\nexport const ERROR_THRESHOLD = 0.5;\r\n","/**\r\n * @module ol/reproj/Triangulation\r\n */\r\nimport {\r\n  boundingExtent,\r\n  createEmpty,\r\n  extendCoordinate,\r\n  getArea,\r\n  getBottomLeft,\r\n  getBottomRight,\r\n  getTopLeft,\r\n  getTopRight,\r\n  getWidth,\r\n  intersects,\r\n} from '../extent.js';\r\nimport {getTransform} from '../proj.js';\r\nimport {modulo} from '../math.js';\r\n\r\n/**\r\n * Single triangle; consists of 3 source points and 3 target points.\r\n * @typedef {Object} Triangle\r\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\r\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\r\n */\r\n\r\n/**\r\n * Maximum number of subdivision steps during raster reprojection triangulation.\r\n * Prevents high memory usage and large number of proj4 calls (for certain\r\n * transformations and areas). At most `2*(2^this)` triangles are created for\r\n * each triangulated extent (tile/image).\r\n * @type {number}\r\n */\r\nconst MAX_SUBDIVISION = 10;\r\n\r\n/**\r\n * Maximum allowed size of triangle relative to world width. When transforming\r\n * corners of world extent between certain projections, the resulting\r\n * triangulation seems to have zero error and no subdivision is performed. If\r\n * the triangle width is more than this (relative to world width; 0-1),\r\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\r\n * @type {number}\r\n */\r\nconst MAX_TRIANGLE_WIDTH = 0.25;\r\n\r\n/**\r\n * @classdesc\r\n * Class containing triangulation of the given target extent.\r\n * Used for determining source data and the reprojection itself.\r\n */\r\nclass Triangulation {\r\n  /**\r\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\r\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\r\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\r\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\r\n   * @param {number} errorThreshold Acceptable error (in source units).\r\n   * @param {?number} destinationResolution The (optional) resolution of the destination.\r\n   */\r\n  constructor(\r\n    sourceProj,\r\n    targetProj,\r\n    targetExtent,\r\n    maxSourceExtent,\r\n    errorThreshold,\r\n    destinationResolution\r\n  ) {\r\n    /**\r\n     * @type {import(\"../proj/Projection.js\").default}\r\n     * @private\r\n     */\r\n    this.sourceProj_ = sourceProj;\r\n\r\n    /**\r\n     * @type {import(\"../proj/Projection.js\").default}\r\n     * @private\r\n     */\r\n    this.targetProj_ = targetProj;\r\n\r\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\r\n    let transformInvCache = {};\r\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\r\n\r\n    /**\r\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\r\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\r\n     * @private\r\n     */\r\n    this.transformInv_ = function (c) {\r\n      const key = c[0] + '/' + c[1];\r\n      if (!transformInvCache[key]) {\r\n        transformInvCache[key] = transformInv(c);\r\n      }\r\n      return transformInvCache[key];\r\n    };\r\n\r\n    /**\r\n     * @type {import(\"../extent.js\").Extent}\r\n     * @private\r\n     */\r\n    this.maxSourceExtent_ = maxSourceExtent;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\r\n\r\n    /**\r\n     * @type {Array<Triangle>}\r\n     * @private\r\n     */\r\n    this.triangles_ = [];\r\n\r\n    /**\r\n     * Indicates that the triangulation crosses edge of the source projection.\r\n     * @type {boolean}\r\n     * @private\r\n     */\r\n    this.wrapsXInSource_ = false;\r\n\r\n    /**\r\n     * @type {boolean}\r\n     * @private\r\n     */\r\n    this.canWrapXInSource_ =\r\n      this.sourceProj_.canWrapX() &&\r\n      !!maxSourceExtent &&\r\n      !!this.sourceProj_.getExtent() &&\r\n      getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent());\r\n\r\n    /**\r\n     * @type {?number}\r\n     * @private\r\n     */\r\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\r\n      ? getWidth(this.sourceProj_.getExtent())\r\n      : null;\r\n\r\n    /**\r\n     * @type {?number}\r\n     * @private\r\n     */\r\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\r\n      ? getWidth(this.targetProj_.getExtent())\r\n      : null;\r\n\r\n    const destinationTopLeft = getTopLeft(targetExtent);\r\n    const destinationTopRight = getTopRight(targetExtent);\r\n    const destinationBottomRight = getBottomRight(targetExtent);\r\n    const destinationBottomLeft = getBottomLeft(targetExtent);\r\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\r\n    const sourceTopRight = this.transformInv_(destinationTopRight);\r\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\r\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\r\n\r\n    /*\r\n     * The maxSubdivision controls how many splittings of the target area can\r\n     * be done. The idea here is to do a linear mapping of the target areas\r\n     * but the actual overal reprojection (can be) extremely non-linear. The\r\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\r\n     * tile size. However this function is also called to remap canvas rendered\r\n     * layers which can be much larger. This calculation increases the maxSubdivision\r\n     * value by the right factor so that each 256x256 pixel area has\r\n     * MAX_SUBDIVISION divisions.\r\n     */\r\n    const maxSubdivision =\r\n      MAX_SUBDIVISION +\r\n      (destinationResolution\r\n        ? Math.max(\r\n            0,\r\n            Math.ceil(\r\n              Math.log2(\r\n                getArea(targetExtent) /\r\n                  (destinationResolution * destinationResolution * 256 * 256)\r\n              )\r\n            )\r\n          )\r\n        : 0);\r\n\r\n    this.addQuad_(\r\n      destinationTopLeft,\r\n      destinationTopRight,\r\n      destinationBottomRight,\r\n      destinationBottomLeft,\r\n      sourceTopLeft,\r\n      sourceTopRight,\r\n      sourceBottomRight,\r\n      sourceBottomLeft,\r\n      maxSubdivision\r\n    );\r\n\r\n    if (this.wrapsXInSource_) {\r\n      let leftBound = Infinity;\r\n      this.triangles_.forEach(function (triangle, i, arr) {\r\n        leftBound = Math.min(\r\n          leftBound,\r\n          triangle.source[0][0],\r\n          triangle.source[1][0],\r\n          triangle.source[2][0]\r\n        );\r\n      });\r\n\r\n      // Shift triangles to be as close to `leftBound` as possible\r\n      // (if the distance is more than `worldWidth / 2` it can be closer.\r\n      this.triangles_.forEach(\r\n        function (triangle) {\r\n          if (\r\n            Math.max(\r\n              triangle.source[0][0],\r\n              triangle.source[1][0],\r\n              triangle.source[2][0]\r\n            ) -\r\n              leftBound >\r\n            this.sourceWorldWidth_ / 2\r\n          ) {\r\n            const newTriangle = [\r\n              [triangle.source[0][0], triangle.source[0][1]],\r\n              [triangle.source[1][0], triangle.source[1][1]],\r\n              [triangle.source[2][0], triangle.source[2][1]],\r\n            ];\r\n            if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\r\n              newTriangle[0][0] -= this.sourceWorldWidth_;\r\n            }\r\n            if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\r\n              newTriangle[1][0] -= this.sourceWorldWidth_;\r\n            }\r\n            if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\r\n              newTriangle[2][0] -= this.sourceWorldWidth_;\r\n            }\r\n\r\n            // Rarely (if the extent contains both the dateline and prime meridian)\r\n            // the shift can in turn break some triangles.\r\n            // Detect this here and don't shift in such cases.\r\n            const minX = Math.min(\r\n              newTriangle[0][0],\r\n              newTriangle[1][0],\r\n              newTriangle[2][0]\r\n            );\r\n            const maxX = Math.max(\r\n              newTriangle[0][0],\r\n              newTriangle[1][0],\r\n              newTriangle[2][0]\r\n            );\r\n            if (maxX - minX < this.sourceWorldWidth_ / 2) {\r\n              triangle.source = newTriangle;\r\n            }\r\n          }\r\n        }.bind(this)\r\n      );\r\n    }\r\n\r\n    transformInvCache = {};\r\n  }\r\n\r\n  /**\r\n   * Adds triangle to the triangulation.\r\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\r\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\r\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\r\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\r\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\r\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\r\n   * @private\r\n   */\r\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\r\n    this.triangles_.push({\r\n      source: [aSrc, bSrc, cSrc],\r\n      target: [a, b, c],\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Adds quad (points in clock-wise order) to the triangulation\r\n   * (and reprojects the vertices) if valid.\r\n   * Performs quad subdivision if needed to increase precision.\r\n   *\r\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\r\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\r\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\r\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\r\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\r\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\r\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\r\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\r\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\r\n   * @private\r\n   */\r\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\r\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\r\n    const sourceCoverageX = this.sourceWorldWidth_\r\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\r\n      : null;\r\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\r\n\r\n    // when the quad is wrapped in the source projection\r\n    // it covers most of the projection extent, but not fully\r\n    const wrapsX =\r\n      this.sourceProj_.canWrapX() &&\r\n      sourceCoverageX > 0.5 &&\r\n      sourceCoverageX < 1;\r\n\r\n    let needsSubdivision = false;\r\n\r\n    if (maxSubdivision > 0) {\r\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\r\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\r\n        const targetCoverageX =\r\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\r\n        needsSubdivision =\r\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\r\n      }\r\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\r\n        needsSubdivision =\r\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\r\n      }\r\n    }\r\n\r\n    if (!needsSubdivision && this.maxSourceExtent_) {\r\n      if (\r\n        isFinite(sourceQuadExtent[0]) &&\r\n        isFinite(sourceQuadExtent[1]) &&\r\n        isFinite(sourceQuadExtent[2]) &&\r\n        isFinite(sourceQuadExtent[3])\r\n      ) {\r\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\r\n          // whole quad outside source projection extent -> ignore\r\n          return;\r\n        }\r\n      }\r\n    }\r\n\r\n    let isNotFinite = 0;\r\n\r\n    if (!needsSubdivision) {\r\n      if (\r\n        !isFinite(aSrc[0]) ||\r\n        !isFinite(aSrc[1]) ||\r\n        !isFinite(bSrc[0]) ||\r\n        !isFinite(bSrc[1]) ||\r\n        !isFinite(cSrc[0]) ||\r\n        !isFinite(cSrc[1]) ||\r\n        !isFinite(dSrc[0]) ||\r\n        !isFinite(dSrc[1])\r\n      ) {\r\n        if (maxSubdivision > 0) {\r\n          needsSubdivision = true;\r\n        } else {\r\n          // It might be the case that only 1 of the points is infinite. In this case\r\n          // we can draw a single triangle with the other three points\r\n          isNotFinite =\r\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\r\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\r\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\r\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\r\n          if (\r\n            isNotFinite != 1 &&\r\n            isNotFinite != 2 &&\r\n            isNotFinite != 4 &&\r\n            isNotFinite != 8\r\n          ) {\r\n            return;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (maxSubdivision > 0) {\r\n      if (!needsSubdivision) {\r\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\r\n        const centerSrc = this.transformInv_(center);\r\n\r\n        let dx;\r\n        if (wrapsX) {\r\n          const centerSrcEstimX =\r\n            (modulo(aSrc[0], sourceWorldWidth) +\r\n              modulo(cSrc[0], sourceWorldWidth)) /\r\n            2;\r\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\r\n        } else {\r\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\r\n        }\r\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\r\n        const centerSrcErrorSquared = dx * dx + dy * dy;\r\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\r\n      }\r\n      if (needsSubdivision) {\r\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\r\n          // split horizontally (top & bottom)\r\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\r\n          const bcSrc = this.transformInv_(bc);\r\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\r\n          const daSrc = this.transformInv_(da);\r\n\r\n          this.addQuad_(\r\n            a,\r\n            b,\r\n            bc,\r\n            da,\r\n            aSrc,\r\n            bSrc,\r\n            bcSrc,\r\n            daSrc,\r\n            maxSubdivision - 1\r\n          );\r\n          this.addQuad_(\r\n            da,\r\n            bc,\r\n            c,\r\n            d,\r\n            daSrc,\r\n            bcSrc,\r\n            cSrc,\r\n            dSrc,\r\n            maxSubdivision - 1\r\n          );\r\n        } else {\r\n          // split vertically (left & right)\r\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\r\n          const abSrc = this.transformInv_(ab);\r\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\r\n          const cdSrc = this.transformInv_(cd);\r\n\r\n          this.addQuad_(\r\n            a,\r\n            ab,\r\n            cd,\r\n            d,\r\n            aSrc,\r\n            abSrc,\r\n            cdSrc,\r\n            dSrc,\r\n            maxSubdivision - 1\r\n          );\r\n          this.addQuad_(\r\n            ab,\r\n            b,\r\n            c,\r\n            cd,\r\n            abSrc,\r\n            bSrc,\r\n            cSrc,\r\n            cdSrc,\r\n            maxSubdivision - 1\r\n          );\r\n        }\r\n        return;\r\n      }\r\n    }\r\n\r\n    if (wrapsX) {\r\n      if (!this.canWrapXInSource_) {\r\n        return;\r\n      }\r\n      this.wrapsXInSource_ = true;\r\n    }\r\n\r\n    // Exactly zero or one of *Src is not finite\r\n    // The triangles must have the diagonal line as the first side\r\n    // This is to allow easy code in reproj.s to make it straight for broken\r\n    // browsers that can't handle diagonal clipping\r\n    if ((isNotFinite & 0xb) == 0) {\r\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\r\n    }\r\n    if ((isNotFinite & 0xe) == 0) {\r\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\r\n    }\r\n    if (isNotFinite) {\r\n      // Try the other two triangles\r\n      if ((isNotFinite & 0xd) == 0) {\r\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\r\n      }\r\n      if ((isNotFinite & 0x7) == 0) {\r\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Calculates extent of the `source` coordinates from all the triangles.\r\n   *\r\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\r\n   */\r\n  calculateSourceExtent() {\r\n    const extent = createEmpty();\r\n\r\n    this.triangles_.forEach(function (triangle, i, arr) {\r\n      const src = triangle.source;\r\n      extendCoordinate(extent, src[0]);\r\n      extendCoordinate(extent, src[1]);\r\n      extendCoordinate(extent, src[2]);\r\n    });\r\n\r\n    return extent;\r\n  }\r\n\r\n  /**\r\n   * @return {Array<Triangle>} Array of the calculated triangles.\r\n   */\r\n  getTriangles() {\r\n    return this.triangles_;\r\n  }\r\n}\r\n\r\nexport default Triangulation;\r\n","/**\r\n * @module ol/reproj\r\n */\r\nimport {\r\n  containsCoordinate,\r\n  createEmpty,\r\n  extend,\r\n  forEachCorner,\r\n  getCenter,\r\n  getHeight,\r\n  getTopLeft,\r\n  getWidth,\r\n} from './extent.js';\r\nimport {createCanvasContext2D} from './dom.js';\r\nimport {getPointResolution, transform} from './proj.js';\r\nimport {solveLinearSystem} from './math.js';\r\n\r\nlet brokenDiagonalRendering_;\r\n\r\n/**\r\n * @type {Array<HTMLCanvasElement>}\r\n */\r\nexport const canvasPool = [];\r\n\r\n/**\r\n * This draws a small triangle into a canvas by setting the triangle as the clip region\r\n * and then drawing a (too large) rectangle\r\n *\r\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\r\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\r\n * @param {number} v1 The y-coordinate of the second point.\r\n * @param {number} u2 The x-coordinate of the third point.\r\n * @param {number} v2 The y-coordinate of the third point.\r\n */\r\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\r\n  ctx.beginPath();\r\n  ctx.moveTo(0, 0);\r\n  ctx.lineTo(u1, v1);\r\n  ctx.lineTo(u2, v2);\r\n  ctx.closePath();\r\n  ctx.save();\r\n  ctx.clip();\r\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\r\n  ctx.restore();\r\n}\r\n\r\n/**\r\n * Given the data from getImageData, see if the right values appear at the provided offset.\r\n * Returns true if either the color or transparency is off\r\n *\r\n * @param {Uint8ClampedArray} data The data returned from getImageData\r\n * @param {number} offset The pixel offset from the start of data.\r\n * @return {boolean} true if the diagonal rendering is broken\r\n */\r\nfunction verifyBrokenDiagonalRendering(data, offset) {\r\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\r\n  return (\r\n    Math.abs(data[offset * 4] - 210) > 2 ||\r\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\r\n  );\r\n}\r\n\r\n/**\r\n * Determines if the current browser configuration can render triangular clip regions correctly.\r\n * This value is cached so the function is only expensive the first time called.\r\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\r\n * Chrome works, and everything seems to work on OSX and Android. This function caches the\r\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\r\n * running, but lets hope not.\r\n *\r\n * @return {boolean} true if the Diagonal Rendering is broken.\r\n */\r\nfunction isBrokenDiagonalRendering() {\r\n  if (brokenDiagonalRendering_ === undefined) {\r\n    const ctx = document.createElement('canvas').getContext('2d');\r\n    ctx.globalCompositeOperation = 'lighter';\r\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\r\n    drawTestTriangle(ctx, 4, 5, 4, 0);\r\n    drawTestTriangle(ctx, 4, 5, 0, 5);\r\n    const data = ctx.getImageData(0, 0, 3, 3).data;\r\n    brokenDiagonalRendering_ =\r\n      verifyBrokenDiagonalRendering(data, 0) ||\r\n      verifyBrokenDiagonalRendering(data, 4) ||\r\n      verifyBrokenDiagonalRendering(data, 8);\r\n  }\r\n\r\n  return brokenDiagonalRendering_;\r\n}\r\n\r\n/**\r\n * Calculates ideal resolution to use from the source in order to achieve\r\n * pixel mapping as close as possible to 1:1 during reprojection.\r\n * The resolution is calculated regardless of what resolutions\r\n * are actually available in the dataset (TileGrid, Image, ...).\r\n *\r\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\r\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\r\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\r\n * @param {number} targetResolution Target resolution.\r\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\r\n */\r\nexport function calculateSourceResolution(\r\n  sourceProj,\r\n  targetProj,\r\n  targetCenter,\r\n  targetResolution\r\n) {\r\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\r\n\r\n  // calculate the ideal resolution of the source data\r\n  let sourceResolution = getPointResolution(\r\n    targetProj,\r\n    targetResolution,\r\n    targetCenter\r\n  );\r\n\r\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\r\n  if (targetMetersPerUnit !== undefined) {\r\n    sourceResolution *= targetMetersPerUnit;\r\n  }\r\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\r\n  if (sourceMetersPerUnit !== undefined) {\r\n    sourceResolution /= sourceMetersPerUnit;\r\n  }\r\n\r\n  // Based on the projection properties, the point resolution at the specified\r\n  // coordinates may be slightly different. We need to reverse-compensate this\r\n  // in order to achieve optimal results.\r\n\r\n  const sourceExtent = sourceProj.getExtent();\r\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\r\n    const compensationFactor =\r\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\r\n      sourceResolution;\r\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\r\n      sourceResolution /= compensationFactor;\r\n    }\r\n  }\r\n\r\n  return sourceResolution;\r\n}\r\n\r\n/**\r\n * Calculates ideal resolution to use from the source in order to achieve\r\n * pixel mapping as close as possible to 1:1 during reprojection.\r\n * The resolution is calculated regardless of what resolutions\r\n * are actually available in the dataset (TileGrid, Image, ...).\r\n *\r\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\r\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\r\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\r\n * @param {number} targetResolution Target resolution.\r\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\r\n */\r\nexport function calculateSourceExtentResolution(\r\n  sourceProj,\r\n  targetProj,\r\n  targetExtent,\r\n  targetResolution\r\n) {\r\n  const targetCenter = getCenter(targetExtent);\r\n  let sourceResolution = calculateSourceResolution(\r\n    sourceProj,\r\n    targetProj,\r\n    targetCenter,\r\n    targetResolution\r\n  );\r\n\r\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\r\n    forEachCorner(targetExtent, function (corner) {\r\n      sourceResolution = calculateSourceResolution(\r\n        sourceProj,\r\n        targetProj,\r\n        corner,\r\n        targetResolution\r\n      );\r\n      return isFinite(sourceResolution) && sourceResolution > 0;\r\n    });\r\n  }\r\n\r\n  return sourceResolution;\r\n}\r\n\r\n/**\r\n * @typedef {Object} ImageExtent\r\n * @property {import(\"./extent.js\").Extent} extent Extent.\r\n * @property {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\r\n */\r\n\r\n/**\r\n * Renders the source data into new canvas based on the triangulation.\r\n *\r\n * @param {number} width Width of the canvas.\r\n * @param {number} height Height of the canvas.\r\n * @param {number} pixelRatio Pixel ratio.\r\n * @param {number} sourceResolution Source resolution.\r\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\r\n * @param {number} targetResolution Target resolution.\r\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\r\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\r\n * @param {Array<ImageExtent>} sources Array of sources.\r\n * @param {number} gutter Gutter of the sources.\r\n * @param {boolean} [renderEdges] Render reprojection edges.\r\n * @param {boolean} [interpolate] Use linear interpolation when resampling.\r\n * @return {HTMLCanvasElement} Canvas with reprojected data.\r\n */\r\nexport function render(\r\n  width,\r\n  height,\r\n  pixelRatio,\r\n  sourceResolution,\r\n  sourceExtent,\r\n  targetResolution,\r\n  targetExtent,\r\n  triangulation,\r\n  sources,\r\n  gutter,\r\n  renderEdges,\r\n  interpolate\r\n) {\r\n  const context = createCanvasContext2D(\r\n    Math.round(pixelRatio * width),\r\n    Math.round(pixelRatio * height),\r\n    canvasPool\r\n  );\r\n\r\n  if (!interpolate) {\r\n    context.imageSmoothingEnabled = false;\r\n  }\r\n\r\n  if (sources.length === 0) {\r\n    return context.canvas;\r\n  }\r\n\r\n  context.scale(pixelRatio, pixelRatio);\r\n\r\n  function pixelRound(value) {\r\n    return Math.round(value * pixelRatio) / pixelRatio;\r\n  }\r\n\r\n  context.globalCompositeOperation = 'lighter';\r\n\r\n  const sourceDataExtent = createEmpty();\r\n  sources.forEach(function (src, i, arr) {\r\n    extend(sourceDataExtent, src.extent);\r\n  });\r\n\r\n  const canvasWidthInUnits = getWidth(sourceDataExtent);\r\n  const canvasHeightInUnits = getHeight(sourceDataExtent);\r\n  const stitchContext = createCanvasContext2D(\r\n    Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution),\r\n    Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution)\r\n  );\r\n\r\n  if (!interpolate) {\r\n    stitchContext.imageSmoothingEnabled = false;\r\n  }\r\n\r\n  const stitchScale = pixelRatio / sourceResolution;\r\n\r\n  sources.forEach(function (src, i, arr) {\r\n    const xPos = src.extent[0] - sourceDataExtent[0];\r\n    const yPos = -(src.extent[3] - sourceDataExtent[3]);\r\n    const srcWidth = getWidth(src.extent);\r\n    const srcHeight = getHeight(src.extent);\r\n\r\n    // This test should never fail -- but it does. Need to find a fix the upstream condition\r\n    if (src.image.width > 0 && src.image.height > 0) {\r\n      stitchContext.drawImage(\r\n        src.image,\r\n        gutter,\r\n        gutter,\r\n        src.image.width - 2 * gutter,\r\n        src.image.height - 2 * gutter,\r\n        xPos * stitchScale,\r\n        yPos * stitchScale,\r\n        srcWidth * stitchScale,\r\n        srcHeight * stitchScale\r\n      );\r\n    }\r\n  });\r\n\r\n  const targetTopLeft = getTopLeft(targetExtent);\r\n\r\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\r\n    /* Calculate affine transform (src -> dst)\r\n     * Resulting matrix can be used to transform coordinate\r\n     * from `sourceProjection` to destination pixels.\r\n     *\r\n     * To optimize number of context calls and increase numerical stability,\r\n     * we also do the following operations:\r\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\r\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\r\n     *\r\n     * Src points: xi, yi\r\n     * Dst points: ui, vi\r\n     * Affine coefficients: aij\r\n     *\r\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\r\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\r\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\r\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\r\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\r\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\r\n     */\r\n    const source = triangle.source;\r\n    const target = triangle.target;\r\n    let x0 = source[0][0],\r\n      y0 = source[0][1];\r\n    let x1 = source[1][0],\r\n      y1 = source[1][1];\r\n    let x2 = source[2][0],\r\n      y2 = source[2][1];\r\n    // Make sure that everything is on pixel boundaries\r\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\r\n    const v0 = pixelRound(\r\n      -(target[0][1] - targetTopLeft[1]) / targetResolution\r\n    );\r\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\r\n    const v1 = pixelRound(\r\n      -(target[1][1] - targetTopLeft[1]) / targetResolution\r\n    );\r\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\r\n    const v2 = pixelRound(\r\n      -(target[2][1] - targetTopLeft[1]) / targetResolution\r\n    );\r\n\r\n    // Shift all the source points to improve numerical stability\r\n    // of all the subsequent calculations. The [x0, y0] is used here.\r\n    // This is also used to simplify the linear system.\r\n    const sourceNumericalShiftX = x0;\r\n    const sourceNumericalShiftY = y0;\r\n    x0 = 0;\r\n    y0 = 0;\r\n    x1 -= sourceNumericalShiftX;\r\n    y1 -= sourceNumericalShiftY;\r\n    x2 -= sourceNumericalShiftX;\r\n    y2 -= sourceNumericalShiftY;\r\n\r\n    const augmentedMatrix = [\r\n      [x1, y1, 0, 0, u1 - u0],\r\n      [x2, y2, 0, 0, u2 - u0],\r\n      [0, 0, x1, y1, v1 - v0],\r\n      [0, 0, x2, y2, v2 - v0],\r\n    ];\r\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\r\n    if (!affineCoefs) {\r\n      return;\r\n    }\r\n\r\n    context.save();\r\n    context.beginPath();\r\n\r\n    if (isBrokenDiagonalRendering() || !interpolate) {\r\n      // Make sure that all lines are horizontal or vertical\r\n      context.moveTo(u1, v1);\r\n      // This is the diagonal line. Do it in 4 steps\r\n      const steps = 4;\r\n      const ud = u0 - u1;\r\n      const vd = v0 - v1;\r\n      for (let step = 0; step < steps; step++) {\r\n        // Go horizontally\r\n        context.lineTo(\r\n          u1 + pixelRound(((step + 1) * ud) / steps),\r\n          v1 + pixelRound((step * vd) / (steps - 1))\r\n        );\r\n        // Go vertically\r\n        if (step != steps - 1) {\r\n          context.lineTo(\r\n            u1 + pixelRound(((step + 1) * ud) / steps),\r\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1))\r\n          );\r\n        }\r\n      }\r\n      // We are almost at u0r, v0r\r\n      context.lineTo(u2, v2);\r\n    } else {\r\n      context.moveTo(u1, v1);\r\n      context.lineTo(u0, v0);\r\n      context.lineTo(u2, v2);\r\n    }\r\n\r\n    context.clip();\r\n\r\n    context.transform(\r\n      affineCoefs[0],\r\n      affineCoefs[2],\r\n      affineCoefs[1],\r\n      affineCoefs[3],\r\n      u0,\r\n      v0\r\n    );\r\n\r\n    context.translate(\r\n      sourceDataExtent[0] - sourceNumericalShiftX,\r\n      sourceDataExtent[3] - sourceNumericalShiftY\r\n    );\r\n\r\n    context.scale(\r\n      sourceResolution / pixelRatio,\r\n      -sourceResolution / pixelRatio\r\n    );\r\n\r\n    context.drawImage(stitchContext.canvas, 0, 0);\r\n    context.restore();\r\n  });\r\n\r\n  if (renderEdges) {\r\n    context.save();\r\n\r\n    context.globalCompositeOperation = 'source-over';\r\n    context.strokeStyle = 'black';\r\n    context.lineWidth = 1;\r\n\r\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\r\n      const target = triangle.target;\r\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\r\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\r\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\r\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\r\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\r\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\r\n\r\n      context.beginPath();\r\n      context.moveTo(u1, v1);\r\n      context.lineTo(u0, v0);\r\n      context.lineTo(u2, v2);\r\n      context.closePath();\r\n      context.stroke();\r\n    });\r\n\r\n    context.restore();\r\n  }\r\n  return context.canvas;\r\n}\r\n","/**\r\n * @module ol/reproj/Tile\r\n */\r\nimport {ERROR_THRESHOLD} from './common.js';\r\n\r\nimport EventType from '../events/EventType.js';\r\nimport Tile from '../Tile.js';\r\nimport TileState from '../TileState.js';\r\nimport Triangulation from './Triangulation.js';\r\nimport {\r\n  calculateSourceExtentResolution,\r\n  canvasPool,\r\n  render as renderReprojected,\r\n} from '../reproj.js';\r\nimport {clamp} from '../math.js';\r\nimport {getArea, getIntersection} from '../extent.js';\r\nimport {listen, unlistenByKey} from '../events.js';\r\nimport {releaseCanvas} from '../dom.js';\r\n\r\n/**\r\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Class encapsulating single reprojected tile.\r\n * See {@link module:ol/source/TileImage~TileImage}.\r\n *\r\n */\r\nclass ReprojTile extends Tile {\r\n  /**\r\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\r\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\r\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\r\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\r\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\r\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   * @param {number} gutter Gutter of the source tiles.\r\n   * @param {FunctionType} getTileFunction\r\n   *     Function returning source tiles (z, x, y, pixelRatio).\r\n   * @param {number} [errorThreshold] Acceptable reprojection error (in px).\r\n   * @param {boolean} [renderEdges] Render reprojection edges.\r\n   * @param {boolean} [interpolate] Use linear interpolation when resampling.\r\n   */\r\n  constructor(\r\n    sourceProj,\r\n    sourceTileGrid,\r\n    targetProj,\r\n    targetTileGrid,\r\n    tileCoord,\r\n    wrappedTileCoord,\r\n    pixelRatio,\r\n    gutter,\r\n    getTileFunction,\r\n    errorThreshold,\r\n    renderEdges,\r\n    interpolate\r\n  ) {\r\n    super(tileCoord, TileState.IDLE, {interpolate: !!interpolate});\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.renderEdges_ = renderEdges !== undefined ? renderEdges : false;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.pixelRatio_ = pixelRatio;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.gutter_ = gutter;\r\n\r\n    /**\r\n     * @private\r\n     * @type {HTMLCanvasElement}\r\n     */\r\n    this.canvas_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\r\n     */\r\n    this.sourceTileGrid_ = sourceTileGrid;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\r\n     */\r\n    this.targetTileGrid_ = targetTileGrid;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../tilecoord.js\").TileCoord}\r\n     */\r\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\r\n\r\n    /**\r\n     * @private\r\n     * @type {!Array<import(\"../Tile.js\").default>}\r\n     */\r\n    this.sourceTiles_ = [];\r\n\r\n    /**\r\n     * @private\r\n     * @type {?Array<import(\"../events.js\").EventsKey>}\r\n     */\r\n    this.sourcesListenerKeys_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.sourceZ_ = 0;\r\n\r\n    const targetExtent = targetTileGrid.getTileCoordExtent(\r\n      this.wrappedTileCoord_\r\n    );\r\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\r\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\r\n\r\n    const limitedTargetExtent = maxTargetExtent\r\n      ? getIntersection(targetExtent, maxTargetExtent)\r\n      : targetExtent;\r\n\r\n    if (getArea(limitedTargetExtent) === 0) {\r\n      // Tile is completely outside range -> EMPTY\r\n      // TODO: is it actually correct that the source even creates the tile ?\r\n      this.state = TileState.EMPTY;\r\n      return;\r\n    }\r\n\r\n    const sourceProjExtent = sourceProj.getExtent();\r\n    if (sourceProjExtent) {\r\n      if (!maxSourceExtent) {\r\n        maxSourceExtent = sourceProjExtent;\r\n      } else {\r\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\r\n      }\r\n    }\r\n\r\n    const targetResolution = targetTileGrid.getResolution(\r\n      this.wrappedTileCoord_[0]\r\n    );\r\n\r\n    const sourceResolution = calculateSourceExtentResolution(\r\n      sourceProj,\r\n      targetProj,\r\n      limitedTargetExtent,\r\n      targetResolution\r\n    );\r\n\r\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\r\n      // invalid sourceResolution -> EMPTY\r\n      // probably edges of the projections when no extent is defined\r\n      this.state = TileState.EMPTY;\r\n      return;\r\n    }\r\n\r\n    const errorThresholdInPixels =\r\n      errorThreshold !== undefined ? errorThreshold : ERROR_THRESHOLD;\r\n\r\n    /**\r\n     * @private\r\n     * @type {!import(\"./Triangulation.js\").default}\r\n     */\r\n    this.triangulation_ = new Triangulation(\r\n      sourceProj,\r\n      targetProj,\r\n      limitedTargetExtent,\r\n      maxSourceExtent,\r\n      sourceResolution * errorThresholdInPixels,\r\n      targetResolution\r\n    );\r\n\r\n    if (this.triangulation_.getTriangles().length === 0) {\r\n      // no valid triangles -> EMPTY\r\n      this.state = TileState.EMPTY;\r\n      return;\r\n    }\r\n\r\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\r\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\r\n\r\n    if (maxSourceExtent) {\r\n      if (sourceProj.canWrapX()) {\r\n        sourceExtent[1] = clamp(\r\n          sourceExtent[1],\r\n          maxSourceExtent[1],\r\n          maxSourceExtent[3]\r\n        );\r\n        sourceExtent[3] = clamp(\r\n          sourceExtent[3],\r\n          maxSourceExtent[1],\r\n          maxSourceExtent[3]\r\n        );\r\n      } else {\r\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\r\n      }\r\n    }\r\n\r\n    if (!getArea(sourceExtent)) {\r\n      this.state = TileState.EMPTY;\r\n    } else {\r\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\r\n        sourceExtent,\r\n        this.sourceZ_\r\n      );\r\n\r\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\r\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\r\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\r\n          if (tile) {\r\n            this.sourceTiles_.push(tile);\r\n          }\r\n        }\r\n      }\r\n\r\n      if (this.sourceTiles_.length === 0) {\r\n        this.state = TileState.EMPTY;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get the HTML Canvas element for this tile.\r\n   * @return {HTMLCanvasElement} Canvas.\r\n   */\r\n  getImage() {\r\n    return this.canvas_;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  reproject_() {\r\n    const sources = [];\r\n    this.sourceTiles_.forEach(\r\n      function (tile, i, arr) {\r\n        if (tile && tile.getState() == TileState.LOADED) {\r\n          sources.push({\r\n            extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\r\n            image: tile.getImage(),\r\n          });\r\n        }\r\n      }.bind(this)\r\n    );\r\n    this.sourceTiles_.length = 0;\r\n\r\n    if (sources.length === 0) {\r\n      this.state = TileState.ERROR;\r\n    } else {\r\n      const z = this.wrappedTileCoord_[0];\r\n      const size = this.targetTileGrid_.getTileSize(z);\r\n      const width = typeof size === 'number' ? size : size[0];\r\n      const height = typeof size === 'number' ? size : size[1];\r\n      const targetResolution = this.targetTileGrid_.getResolution(z);\r\n      const sourceResolution = this.sourceTileGrid_.getResolution(\r\n        this.sourceZ_\r\n      );\r\n\r\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\r\n        this.wrappedTileCoord_\r\n      );\r\n\r\n      this.canvas_ = renderReprojected(\r\n        width,\r\n        height,\r\n        this.pixelRatio_,\r\n        sourceResolution,\r\n        this.sourceTileGrid_.getExtent(),\r\n        targetResolution,\r\n        targetExtent,\r\n        this.triangulation_,\r\n        sources,\r\n        this.gutter_,\r\n        this.renderEdges_,\r\n        this.interpolate\r\n      );\r\n\r\n      this.state = TileState.LOADED;\r\n    }\r\n    this.changed();\r\n  }\r\n\r\n  /**\r\n   * Load not yet loaded URI.\r\n   */\r\n  load() {\r\n    if (this.state == TileState.IDLE) {\r\n      this.state = TileState.LOADING;\r\n      this.changed();\r\n\r\n      let leftToLoad = 0;\r\n\r\n      this.sourcesListenerKeys_ = [];\r\n      this.sourceTiles_.forEach(\r\n        function (tile, i, arr) {\r\n          const state = tile.getState();\r\n          if (state == TileState.IDLE || state == TileState.LOADING) {\r\n            leftToLoad++;\r\n\r\n            const sourceListenKey = listen(\r\n              tile,\r\n              EventType.CHANGE,\r\n              function (e) {\r\n                const state = tile.getState();\r\n                if (\r\n                  state == TileState.LOADED ||\r\n                  state == TileState.ERROR ||\r\n                  state == TileState.EMPTY\r\n                ) {\r\n                  unlistenByKey(sourceListenKey);\r\n                  leftToLoad--;\r\n                  if (leftToLoad === 0) {\r\n                    this.unlistenSources_();\r\n                    this.reproject_();\r\n                  }\r\n                }\r\n              },\r\n              this\r\n            );\r\n            this.sourcesListenerKeys_.push(sourceListenKey);\r\n          }\r\n        }.bind(this)\r\n      );\r\n\r\n      if (leftToLoad === 0) {\r\n        setTimeout(this.reproject_.bind(this), 0);\r\n      } else {\r\n        this.sourceTiles_.forEach(function (tile, i, arr) {\r\n          const state = tile.getState();\r\n          if (state == TileState.IDLE) {\r\n            tile.load();\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  unlistenSources_() {\r\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\r\n    this.sourcesListenerKeys_ = null;\r\n  }\r\n\r\n  /**\r\n   * Remove from the cache due to expiry\r\n   */\r\n  release() {\r\n    if (this.canvas_) {\r\n      releaseCanvas(this.canvas_.getContext('2d'));\r\n      canvasPool.push(this.canvas_);\r\n      this.canvas_ = null;\r\n    }\r\n    super.release();\r\n  }\r\n}\r\n\r\nexport default ReprojTile;\r\n","/**\r\n * @module ol/TileRange\r\n */\r\n\r\n/**\r\n * A representation of a contiguous block of tiles.  A tile range is specified\r\n * by its min/max tile coordinates and is inclusive of coordinates.\r\n */\r\nclass TileRange {\r\n  /**\r\n   * @param {number} minX Minimum X.\r\n   * @param {number} maxX Maximum X.\r\n   * @param {number} minY Minimum Y.\r\n   * @param {number} maxY Maximum Y.\r\n   */\r\n  constructor(minX, maxX, minY, maxY) {\r\n    /**\r\n     * @type {number}\r\n     */\r\n    this.minX = minX;\r\n\r\n    /**\r\n     * @type {number}\r\n     */\r\n    this.maxX = maxX;\r\n\r\n    /**\r\n     * @type {number}\r\n     */\r\n    this.minY = minY;\r\n\r\n    /**\r\n     * @type {number}\r\n     */\r\n    this.maxY = maxY;\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\r\n   * @return {boolean} Contains tile coordinate.\r\n   */\r\n  contains(tileCoord) {\r\n    return this.containsXY(tileCoord[1], tileCoord[2]);\r\n  }\r\n\r\n  /**\r\n   * @param {TileRange} tileRange Tile range.\r\n   * @return {boolean} Contains.\r\n   */\r\n  containsTileRange(tileRange) {\r\n    return (\r\n      this.minX <= tileRange.minX &&\r\n      tileRange.maxX <= this.maxX &&\r\n      this.minY <= tileRange.minY &&\r\n      tileRange.maxY <= this.maxY\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @param {number} x Tile coordinate x.\r\n   * @param {number} y Tile coordinate y.\r\n   * @return {boolean} Contains coordinate.\r\n   */\r\n  containsXY(x, y) {\r\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\r\n  }\r\n\r\n  /**\r\n   * @param {TileRange} tileRange Tile range.\r\n   * @return {boolean} Equals.\r\n   */\r\n  equals(tileRange) {\r\n    return (\r\n      this.minX == tileRange.minX &&\r\n      this.minY == tileRange.minY &&\r\n      this.maxX == tileRange.maxX &&\r\n      this.maxY == tileRange.maxY\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @param {TileRange} tileRange Tile range.\r\n   */\r\n  extend(tileRange) {\r\n    if (tileRange.minX < this.minX) {\r\n      this.minX = tileRange.minX;\r\n    }\r\n    if (tileRange.maxX > this.maxX) {\r\n      this.maxX = tileRange.maxX;\r\n    }\r\n    if (tileRange.minY < this.minY) {\r\n      this.minY = tileRange.minY;\r\n    }\r\n    if (tileRange.maxY > this.maxY) {\r\n      this.maxY = tileRange.maxY;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @return {number} Height.\r\n   */\r\n  getHeight() {\r\n    return this.maxY - this.minY + 1;\r\n  }\r\n\r\n  /**\r\n   * @return {import(\"./size.js\").Size} Size.\r\n   */\r\n  getSize() {\r\n    return [this.getWidth(), this.getHeight()];\r\n  }\r\n\r\n  /**\r\n   * @return {number} Width.\r\n   */\r\n  getWidth() {\r\n    return this.maxX - this.minX + 1;\r\n  }\r\n\r\n  /**\r\n   * @param {TileRange} tileRange Tile range.\r\n   * @return {boolean} Intersects.\r\n   */\r\n  intersects(tileRange) {\r\n    return (\r\n      this.minX <= tileRange.maxX &&\r\n      this.maxX >= tileRange.minX &&\r\n      this.minY <= tileRange.maxY &&\r\n      this.maxY >= tileRange.minY\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * @param {number} minX Minimum X.\r\n * @param {number} maxX Maximum X.\r\n * @param {number} minY Minimum Y.\r\n * @param {number} maxY Maximum Y.\r\n * @param {TileRange} [tileRange] TileRange.\r\n * @return {TileRange} Tile range.\r\n */\r\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\r\n  if (tileRange !== undefined) {\r\n    tileRange.minX = minX;\r\n    tileRange.maxX = maxX;\r\n    tileRange.minY = minY;\r\n    tileRange.maxY = maxY;\r\n    return tileRange;\r\n  } else {\r\n    return new TileRange(minX, maxX, minY, maxY);\r\n  }\r\n}\r\n\r\nexport default TileRange;\r\n","/**\r\n * @module ol/renderer/canvas/TileLayer\r\n */\r\nimport CanvasLayerRenderer from './Layer.js';\r\nimport ImageTile from '../../ImageTile.js';\r\nimport ReprojTile from '../../reproj/Tile.js';\r\nimport TileRange from '../../TileRange.js';\r\nimport TileState from '../../TileState.js';\r\nimport {\r\n  apply as applyTransform,\r\n  compose as composeTransform,\r\n  makeInverse,\r\n  toString as toTransformString,\r\n} from '../../transform.js';\r\nimport {\r\n  containsCoordinate,\r\n  createEmpty,\r\n  equals,\r\n  getHeight,\r\n  getIntersection,\r\n  getRotatedViewport,\r\n  getTopLeft,\r\n  getWidth,\r\n  intersects,\r\n} from '../../extent.js';\r\nimport {fromUserExtent} from '../../proj.js';\r\nimport {getUid} from '../../util.js';\r\nimport {numberSafeCompareFunction} from '../../array.js';\r\nimport {toSize} from '../../size.js';\r\n\r\n/**\r\n * @classdesc\r\n * Canvas renderer for tile layers.\r\n * @api\r\n * @template {import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\r\n * @extends {CanvasLayerRenderer<LayerType>}\r\n */\r\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\r\n  /**\r\n   * @param {LayerType} tileLayer Tile layer.\r\n   */\r\n  constructor(tileLayer) {\r\n    super(tileLayer);\r\n\r\n    /**\r\n     * Rendered extent has changed since the previous `renderFrame()` call\r\n     * @type {boolean}\r\n     */\r\n    this.extentChanged = true;\r\n\r\n    /**\r\n     * @private\r\n     * @type {?import(\"../../extent.js\").Extent}\r\n     */\r\n    this.renderedExtent_ = null;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {number}\r\n     */\r\n    this.renderedPixelRatio;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {import(\"../../proj/Projection.js\").default}\r\n     */\r\n    this.renderedProjection = null;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {number}\r\n     */\r\n    this.renderedRevision;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {!Array<import(\"../../Tile.js\").default>}\r\n     */\r\n    this.renderedTiles = [];\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.newTiles_ = false;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {import(\"../../extent.js\").Extent}\r\n     */\r\n    this.tmpExtent = createEmpty();\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../../TileRange.js\").default}\r\n     */\r\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\r\n  }\r\n\r\n  /**\r\n   * @protected\r\n   * @param {import(\"../../Tile.js\").default} tile Tile.\r\n   * @return {boolean} Tile is drawable.\r\n   */\r\n  isDrawableTile(tile) {\r\n    const tileLayer = this.getLayer();\r\n    const tileState = tile.getState();\r\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\r\n    return (\r\n      tileState == TileState.LOADED ||\r\n      tileState == TileState.EMPTY ||\r\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @param {number} z Tile coordinate z.\r\n   * @param {number} x Tile coordinate x.\r\n   * @param {number} y Tile coordinate y.\r\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\r\n   * @return {!import(\"../../Tile.js\").default} Tile.\r\n   */\r\n  getTile(z, x, y, frameState) {\r\n    const pixelRatio = frameState.pixelRatio;\r\n    const projection = frameState.viewState.projection;\r\n    const tileLayer = this.getLayer();\r\n    const tileSource = tileLayer.getSource();\r\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\r\n    if (tile.getState() == TileState.ERROR) {\r\n      if (tileLayer.getUseInterimTilesOnError() && tileLayer.getPreload() > 0) {\r\n        // Preloaded tiles for lower resolutions might have finished loading.\r\n        this.newTiles_ = true;\r\n      }\r\n    }\r\n    if (!this.isDrawableTile(tile)) {\r\n      tile = tile.getInterimTile();\r\n    }\r\n    return tile;\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\r\n   * @return {Uint8ClampedArray} Data at the pixel location.\r\n   */\r\n  getData(pixel) {\r\n    const frameState = this.frameState;\r\n    if (!frameState) {\r\n      return null;\r\n    }\r\n\r\n    const layer = this.getLayer();\r\n    const coordinate = applyTransform(\r\n      frameState.pixelToCoordinateTransform,\r\n      pixel.slice()\r\n    );\r\n\r\n    const layerExtent = layer.getExtent();\r\n    if (layerExtent) {\r\n      if (!containsCoordinate(layerExtent, coordinate)) {\r\n        return null;\r\n      }\r\n    }\r\n\r\n    const pixelRatio = frameState.pixelRatio;\r\n    const projection = frameState.viewState.projection;\r\n    const viewState = frameState.viewState;\r\n    const source = layer.getRenderSource();\r\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\r\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\r\n\r\n    for (\r\n      let z = tileGrid.getZForResolution(viewState.resolution);\r\n      z >= tileGrid.getMinZoom();\r\n      --z\r\n    ) {\r\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\r\n      const tile = source.getTile(\r\n        z,\r\n        tileCoord[1],\r\n        tileCoord[2],\r\n        pixelRatio,\r\n        projection\r\n      );\r\n      if (\r\n        !(tile instanceof ImageTile || tile instanceof ReprojTile) ||\r\n        (tile instanceof ReprojTile && tile.getState() === TileState.EMPTY)\r\n      ) {\r\n        return null;\r\n      }\r\n\r\n      if (tile.getState() !== TileState.LOADED) {\r\n        continue;\r\n      }\r\n\r\n      const tileOrigin = tileGrid.getOrigin(z);\r\n      const tileSize = toSize(tileGrid.getTileSize(z));\r\n      const tileResolution = tileGrid.getResolution(z);\r\n\r\n      const col = Math.floor(\r\n        tilePixelRatio *\r\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\r\n            tileCoord[1] * tileSize[0])\r\n      );\r\n\r\n      const row = Math.floor(\r\n        tilePixelRatio *\r\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\r\n            tileCoord[2] * tileSize[1])\r\n      );\r\n\r\n      const gutter = Math.round(\r\n        tilePixelRatio * source.getGutterForProjection(viewState.projection)\r\n      );\r\n\r\n      return this.getImageData(tile.getImage(), col + gutter, row + gutter);\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\r\n   * @param {number} zoom Zoom level.\r\n   * @param {import(\"../../Tile.js\").default} tile Tile.\r\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\r\n   */\r\n  loadedTileCallback(tiles, zoom, tile) {\r\n    if (this.isDrawableTile(tile)) {\r\n      return super.loadedTileCallback(tiles, zoom, tile);\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Determine whether render should be called.\r\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\r\n   * @return {boolean} Layer is ready to be rendered.\r\n   */\r\n  prepareFrame(frameState) {\r\n    return !!this.getLayer().getSource();\r\n  }\r\n\r\n  /**\r\n   * Render the layer.\r\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\r\n   * @param {HTMLElement} target Target that may be used to render content to.\r\n   * @return {HTMLElement} The rendered element.\r\n   */\r\n  renderFrame(frameState, target) {\r\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\r\n    const viewState = frameState.viewState;\r\n    const projection = viewState.projection;\r\n    const viewResolution = viewState.resolution;\r\n    const viewCenter = viewState.center;\r\n    const rotation = viewState.rotation;\r\n    const pixelRatio = frameState.pixelRatio;\r\n\r\n    const tileLayer = this.getLayer();\r\n    const tileSource = tileLayer.getSource();\r\n    const sourceRevision = tileSource.getRevision();\r\n    const tileGrid = tileSource.getTileGridForProjection(projection);\r\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\r\n    const tileResolution = tileGrid.getResolution(z);\r\n\r\n    let extent = frameState.extent;\r\n    const resolution = frameState.viewState.resolution;\r\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\r\n    // desired dimensions of the canvas in pixels\r\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\r\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\r\n\r\n    const layerExtent =\r\n      layerState.extent && fromUserExtent(layerState.extent, projection);\r\n    if (layerExtent) {\r\n      extent = getIntersection(\r\n        extent,\r\n        fromUserExtent(layerState.extent, projection)\r\n      );\r\n    }\r\n\r\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\r\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\r\n    const canvasExtent = [\r\n      viewCenter[0] - dx,\r\n      viewCenter[1] - dy,\r\n      viewCenter[0] + dx,\r\n      viewCenter[1] + dy,\r\n    ];\r\n\r\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\r\n\r\n    /**\r\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\r\n     */\r\n    const tilesToDrawByZ = {};\r\n    tilesToDrawByZ[z] = {};\r\n\r\n    const findLoadedTiles = this.createLoadedTileFinder(\r\n      tileSource,\r\n      projection,\r\n      tilesToDrawByZ\r\n    );\r\n\r\n    const tmpExtent = this.tmpExtent;\r\n    const tmpTileRange = this.tmpTileRange_;\r\n    this.newTiles_ = false;\r\n    const viewport = rotation\r\n      ? getRotatedViewport(\r\n          viewState.center,\r\n          resolution,\r\n          rotation,\r\n          frameState.size\r\n        )\r\n      : undefined;\r\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\r\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\r\n        if (\r\n          rotation &&\r\n          !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\r\n        ) {\r\n          continue;\r\n        }\r\n        const tile = this.getTile(z, x, y, frameState);\r\n        if (this.isDrawableTile(tile)) {\r\n          const uid = getUid(this);\r\n          if (tile.getState() == TileState.LOADED) {\r\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\r\n            let inTransition = tile.inTransition(uid);\r\n            if (inTransition && layerState.opacity !== 1) {\r\n              // Skipping transition when layer is not fully opaque avoids visual artifacts.\r\n              tile.endTransition(uid);\r\n              inTransition = false;\r\n            }\r\n            if (\r\n              !this.newTiles_ &&\r\n              (inTransition || !this.renderedTiles.includes(tile))\r\n            ) {\r\n              this.newTiles_ = true;\r\n            }\r\n          }\r\n          if (tile.getAlpha(uid, frameState.time) === 1) {\r\n            // don't look for alt tiles if alpha is 1\r\n            continue;\r\n          }\r\n        }\r\n\r\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\r\n          tile.tileCoord,\r\n          tmpTileRange,\r\n          tmpExtent\r\n        );\r\n\r\n        let covered = false;\r\n        if (childTileRange) {\r\n          covered = findLoadedTiles(z + 1, childTileRange);\r\n        }\r\n        if (!covered) {\r\n          tileGrid.forEachTileCoordParentTileRange(\r\n            tile.tileCoord,\r\n            findLoadedTiles,\r\n            tmpTileRange,\r\n            tmpExtent\r\n          );\r\n        }\r\n      }\r\n    }\r\n\r\n    const canvasScale =\r\n      ((tileResolution / viewResolution) * pixelRatio) / tilePixelRatio;\r\n\r\n    // set forward and inverse pixel transforms\r\n    composeTransform(\r\n      this.pixelTransform,\r\n      frameState.size[0] / 2,\r\n      frameState.size[1] / 2,\r\n      1 / pixelRatio,\r\n      1 / pixelRatio,\r\n      rotation,\r\n      -width / 2,\r\n      -height / 2\r\n    );\r\n\r\n    const canvasTransform = toTransformString(this.pixelTransform);\r\n\r\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\r\n    const context = this.context;\r\n    const canvas = context.canvas;\r\n\r\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\r\n\r\n    // set scale transform for calculating tile positions on the canvas\r\n    composeTransform(\r\n      this.tempTransform,\r\n      width / 2,\r\n      height / 2,\r\n      canvasScale,\r\n      canvasScale,\r\n      0,\r\n      -width / 2,\r\n      -height / 2\r\n    );\r\n\r\n    if (canvas.width != width || canvas.height != height) {\r\n      canvas.width = width;\r\n      canvas.height = height;\r\n    } else if (!this.containerReused) {\r\n      context.clearRect(0, 0, width, height);\r\n    }\r\n\r\n    if (layerExtent) {\r\n      this.clipUnrotated(context, frameState, layerExtent);\r\n    }\r\n\r\n    if (!tileSource.getInterpolate()) {\r\n      context.imageSmoothingEnabled = false;\r\n    }\r\n\r\n    this.preRender(context, frameState);\r\n\r\n    this.renderedTiles.length = 0;\r\n    /** @type {Array<number>} */\r\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\r\n    zs.sort(numberSafeCompareFunction);\r\n\r\n    let clips, clipZs, currentClip;\r\n    if (\r\n      layerState.opacity === 1 &&\r\n      (!this.containerReused ||\r\n        tileSource.getOpaque(frameState.viewState.projection))\r\n    ) {\r\n      zs = zs.reverse();\r\n    } else {\r\n      clips = [];\r\n      clipZs = [];\r\n    }\r\n    for (let i = zs.length - 1; i >= 0; --i) {\r\n      const currentZ = zs[i];\r\n      const currentTilePixelSize = tileSource.getTilePixelSize(\r\n        currentZ,\r\n        pixelRatio,\r\n        projection\r\n      );\r\n      const currentResolution = tileGrid.getResolution(currentZ);\r\n      const currentScale = currentResolution / tileResolution;\r\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\r\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\r\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\r\n        getTopLeft(canvasExtent),\r\n        currentZ\r\n      );\r\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\r\n      const origin = applyTransform(this.tempTransform, [\r\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\r\n          tileResolution,\r\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\r\n          tileResolution,\r\n      ]);\r\n      const tileGutter =\r\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\r\n      const tilesToDraw = tilesToDrawByZ[currentZ];\r\n      for (const tileCoordKey in tilesToDraw) {\r\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (\r\n          tilesToDraw[tileCoordKey]\r\n        );\r\n        const tileCoord = tile.tileCoord;\r\n\r\n        // Calculate integer positions and sizes so that tiles align\r\n        const xIndex = originTileCoord[1] - tileCoord[1];\r\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\r\n        const yIndex = originTileCoord[2] - tileCoord[2];\r\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\r\n        const x = Math.round(origin[0] - xIndex * dx);\r\n        const y = Math.round(origin[1] - yIndex * dy);\r\n        const w = nextX - x;\r\n        const h = nextY - y;\r\n        const transition = z === currentZ;\r\n\r\n        const inTransition =\r\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\r\n        let contextSaved = false;\r\n        if (!inTransition) {\r\n          if (clips) {\r\n            // Clip mask for regions in this tile that already filled by a higher z tile\r\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\r\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\r\n              if (z !== currentZ && currentZ < clipZs[i]) {\r\n                const clip = clips[i];\r\n                if (\r\n                  intersects(\r\n                    [x, y, x + w, y + h],\r\n                    [clip[0], clip[3], clip[4], clip[7]]\r\n                  )\r\n                ) {\r\n                  if (!contextSaved) {\r\n                    context.save();\r\n                    contextSaved = true;\r\n                  }\r\n                  context.beginPath();\r\n                  // counter-clockwise (outer ring) for current tile\r\n                  context.moveTo(currentClip[0], currentClip[1]);\r\n                  context.lineTo(currentClip[2], currentClip[3]);\r\n                  context.lineTo(currentClip[4], currentClip[5]);\r\n                  context.lineTo(currentClip[6], currentClip[7]);\r\n                  // clockwise (inner ring) for higher z tile\r\n                  context.moveTo(clip[6], clip[7]);\r\n                  context.lineTo(clip[4], clip[5]);\r\n                  context.lineTo(clip[2], clip[3]);\r\n                  context.lineTo(clip[0], clip[1]);\r\n                  context.clip();\r\n                }\r\n              }\r\n            }\r\n            clips.push(currentClip);\r\n            clipZs.push(currentZ);\r\n          } else {\r\n            context.clearRect(x, y, w, h);\r\n          }\r\n        }\r\n        this.drawTileImage(\r\n          tile,\r\n          frameState,\r\n          x,\r\n          y,\r\n          w,\r\n          h,\r\n          tileGutter,\r\n          transition\r\n        );\r\n        if (clips && !inTransition) {\r\n          if (contextSaved) {\r\n            context.restore();\r\n          }\r\n          this.renderedTiles.unshift(tile);\r\n        } else {\r\n          this.renderedTiles.push(tile);\r\n        }\r\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\r\n      }\r\n    }\r\n\r\n    this.renderedRevision = sourceRevision;\r\n    this.renderedResolution = tileResolution;\r\n    this.extentChanged =\r\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\r\n    this.renderedExtent_ = canvasExtent;\r\n    this.renderedPixelRatio = pixelRatio;\r\n    this.renderedProjection = projection;\r\n\r\n    this.manageTilePyramid(\r\n      frameState,\r\n      tileSource,\r\n      tileGrid,\r\n      pixelRatio,\r\n      projection,\r\n      extent,\r\n      z,\r\n      tileLayer.getPreload()\r\n    );\r\n    this.scheduleExpireCache(frameState, tileSource);\r\n\r\n    this.postRender(context, frameState);\r\n\r\n    if (layerState.extent) {\r\n      context.restore();\r\n    }\r\n    context.imageSmoothingEnabled = true;\r\n\r\n    if (canvasTransform !== canvas.style.transform) {\r\n      canvas.style.transform = canvasTransform;\r\n    }\r\n\r\n    return this.container;\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\r\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\r\n   * @param {number} x Left of the tile.\r\n   * @param {number} y Top of the tile.\r\n   * @param {number} w Width of the tile.\r\n   * @param {number} h Height of the tile.\r\n   * @param {number} gutter Tile gutter.\r\n   * @param {boolean} transition Apply an alpha transition.\r\n   */\r\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition) {\r\n    const image = this.getTileImage(tile);\r\n    if (!image) {\r\n      return;\r\n    }\r\n    const uid = getUid(this);\r\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\r\n    const alpha =\r\n      layerState.opacity *\r\n      (transition ? tile.getAlpha(uid, frameState.time) : 1);\r\n    const alphaChanged = alpha !== this.context.globalAlpha;\r\n    if (alphaChanged) {\r\n      this.context.save();\r\n      this.context.globalAlpha = alpha;\r\n    }\r\n    this.context.drawImage(\r\n      image,\r\n      gutter,\r\n      gutter,\r\n      image.width - 2 * gutter,\r\n      image.height - 2 * gutter,\r\n      x,\r\n      y,\r\n      w,\r\n      h\r\n    );\r\n\r\n    if (alphaChanged) {\r\n      this.context.restore();\r\n    }\r\n    if (alpha !== layerState.opacity) {\r\n      frameState.animate = true;\r\n    } else if (transition) {\r\n      tile.endTransition(uid);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @return {HTMLCanvasElement} Image\r\n   */\r\n  getImage() {\r\n    const context = this.context;\r\n    return context ? context.canvas : null;\r\n  }\r\n\r\n  /**\r\n   * Get the image from a tile.\r\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\r\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\r\n   * @protected\r\n   */\r\n  getTileImage(tile) {\r\n    return tile.getImage();\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\r\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\r\n   * @protected\r\n   */\r\n  scheduleExpireCache(frameState, tileSource) {\r\n    if (tileSource.canExpireCache()) {\r\n      /**\r\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\r\n       * @param {import(\"../../Map.js\").default} map Map.\r\n       * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\r\n       */\r\n      const postRenderFunction = function (tileSource, map, frameState) {\r\n        const tileSourceKey = getUid(tileSource);\r\n        if (tileSourceKey in frameState.usedTiles) {\r\n          tileSource.expireCache(\r\n            frameState.viewState.projection,\r\n            frameState.usedTiles[tileSourceKey]\r\n          );\r\n        }\r\n      }.bind(null, tileSource);\r\n\r\n      frameState.postRenderFunctions.push(\r\n        /** @type {import(\"../../Map.js\").PostRenderFunction} */ (\r\n          postRenderFunction\r\n        )\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\r\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\r\n   * @param {import('../../Tile.js').default} tile Tile.\r\n   * @protected\r\n   */\r\n  updateUsedTiles(usedTiles, tileSource, tile) {\r\n    // FIXME should we use tilesToDrawByZ instead?\r\n    const tileSourceKey = getUid(tileSource);\r\n    if (!(tileSourceKey in usedTiles)) {\r\n      usedTiles[tileSourceKey] = {};\r\n    }\r\n    usedTiles[tileSourceKey][tile.getKey()] = true;\r\n  }\r\n\r\n  /**\r\n   * Manage tile pyramid.\r\n   * This function performs a number of functions related to the tiles at the\r\n   * current zoom and lower zoom levels:\r\n   * - registers idle tiles in frameState.wantedTiles so that they are not\r\n   *   discarded by the tile queue\r\n   * - enqueues missing tiles\r\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\r\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\r\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\r\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\r\n   * @param {number} currentZ Current Z.\r\n   * @param {number} preload Load low resolution tiles up to `preload` levels.\r\n   * @param {function(import(\"../../Tile.js\").default):void} [tileCallback] Tile callback.\r\n   * @protected\r\n   */\r\n  manageTilePyramid(\r\n    frameState,\r\n    tileSource,\r\n    tileGrid,\r\n    pixelRatio,\r\n    projection,\r\n    extent,\r\n    currentZ,\r\n    preload,\r\n    tileCallback\r\n  ) {\r\n    const tileSourceKey = getUid(tileSource);\r\n    if (!(tileSourceKey in frameState.wantedTiles)) {\r\n      frameState.wantedTiles[tileSourceKey] = {};\r\n    }\r\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\r\n    const tileQueue = frameState.tileQueue;\r\n    const minZoom = tileGrid.getMinZoom();\r\n    const rotation = frameState.viewState.rotation;\r\n    const viewport = rotation\r\n      ? getRotatedViewport(\r\n          frameState.viewState.center,\r\n          frameState.viewState.resolution,\r\n          rotation,\r\n          frameState.size\r\n        )\r\n      : undefined;\r\n    let tileCount = 0;\r\n    let tile, tileRange, tileResolution, x, y, z;\r\n    for (z = minZoom; z <= currentZ; ++z) {\r\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\r\n      tileResolution = tileGrid.getResolution(z);\r\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\r\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\r\n          if (\r\n            rotation &&\r\n            !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\r\n          ) {\r\n            continue;\r\n          }\r\n          if (currentZ - z <= preload) {\r\n            ++tileCount;\r\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\r\n            if (tile.getState() == TileState.IDLE) {\r\n              wantedTiles[tile.getKey()] = true;\r\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\r\n                tileQueue.enqueue([\r\n                  tile,\r\n                  tileSourceKey,\r\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\r\n                  tileResolution,\r\n                ]);\r\n              }\r\n            }\r\n            if (tileCallback !== undefined) {\r\n              tileCallback(tile);\r\n            }\r\n          } else {\r\n            tileSource.useTile(z, x, y, projection);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    tileSource.updateCacheSize(tileCount, projection);\r\n  }\r\n}\r\n\r\nexport default CanvasTileLayerRenderer;\r\n","/**\r\n * @module ol/layer/Tile\r\n */\r\nimport BaseTileLayer from './BaseTile.js';\r\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\r\n\r\n/**\r\n * @classdesc\r\n * For layer sources that provide pre-rendered, tiled images in grids that are\r\n * organized by zoom levels for specific resolutions.\r\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\r\n * property on the layer object; for example, setting `title: 'My Title'` in the\r\n * options means that `title` is observable, and has get/set accessors.\r\n *\r\n * @template {import(\"../source/Tile.js\").default} TileSourceType\r\n * @extends BaseTileLayer<TileSourceType, CanvasTileLayerRenderer>\r\n * @api\r\n */\r\nclass TileLayer extends BaseTileLayer {\r\n  /**\r\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [options] Tile layer options.\r\n   */\r\n  constructor(options) {\r\n    super(options);\r\n  }\r\n\r\n  createRenderer() {\r\n    return new CanvasTileLayerRenderer(this);\r\n  }\r\n}\r\n\r\nexport default TileLayer;\r\n","/**\r\n * @module ol/structs/LRUCache\r\n */\r\n\r\nimport {assert} from '../asserts.js';\r\n\r\n/**\r\n * @typedef {Object} Entry\r\n * @property {string} key_ Key.\r\n * @property {Object} newer Newer.\r\n * @property {Object} older Older.\r\n * @property {*} value_ Value.\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Implements a Least-Recently-Used cache where the keys do not conflict with\r\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\r\n * items from the cache is the responsibility of the user.\r\n *\r\n * @fires import(\"../events/Event.js\").default\r\n * @template T\r\n */\r\nclass LRUCache {\r\n  /**\r\n   * @param {number} [highWaterMark] High water mark.\r\n   */\r\n  constructor(highWaterMark) {\r\n    /**\r\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\r\n     * will be pruned at all.\r\n     * @type {number}\r\n     */\r\n    this.highWaterMark = highWaterMark !== undefined ? highWaterMark : 2048;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.count_ = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {!Object<string, Entry>}\r\n     */\r\n    this.entries_ = {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {?Entry}\r\n     */\r\n    this.oldest_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {?Entry}\r\n     */\r\n    this.newest_ = null;\r\n  }\r\n\r\n  /**\r\n   * @return {boolean} Can expire cache.\r\n   */\r\n  canExpireCache() {\r\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\r\n  }\r\n\r\n  /**\r\n   * Expire the cache.\r\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\r\n   */\r\n  expireCache(keep) {\r\n    while (this.canExpireCache()) {\r\n      this.pop();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * FIXME empty description for jsdoc\r\n   */\r\n  clear() {\r\n    this.count_ = 0;\r\n    this.entries_ = {};\r\n    this.oldest_ = null;\r\n    this.newest_ = null;\r\n  }\r\n\r\n  /**\r\n   * @param {string} key Key.\r\n   * @return {boolean} Contains key.\r\n   */\r\n  containsKey(key) {\r\n    return this.entries_.hasOwnProperty(key);\r\n  }\r\n\r\n  /**\r\n   * @param {function(T, string, LRUCache<T>): ?} f The function\r\n   *     to call for every entry from the oldest to the newer. This function takes\r\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\r\n   *     The return value is ignored.\r\n   */\r\n  forEach(f) {\r\n    let entry = this.oldest_;\r\n    while (entry) {\r\n      f(entry.value_, entry.key_, this);\r\n      entry = entry.newer;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {string} key Key.\r\n   * @param {*} [options] Options (reserved for subclasses).\r\n   * @return {T} Value.\r\n   */\r\n  get(key, options) {\r\n    const entry = this.entries_[key];\r\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\r\n    if (entry === this.newest_) {\r\n      return entry.value_;\r\n    } else if (entry === this.oldest_) {\r\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\r\n      this.oldest_.older = null;\r\n    } else {\r\n      entry.newer.older = entry.older;\r\n      entry.older.newer = entry.newer;\r\n    }\r\n    entry.newer = null;\r\n    entry.older = this.newest_;\r\n    this.newest_.newer = entry;\r\n    this.newest_ = entry;\r\n    return entry.value_;\r\n  }\r\n\r\n  /**\r\n   * Remove an entry from the cache.\r\n   * @param {string} key The entry key.\r\n   * @return {T} The removed entry.\r\n   */\r\n  remove(key) {\r\n    const entry = this.entries_[key];\r\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\r\n    if (entry === this.newest_) {\r\n      this.newest_ = /** @type {Entry} */ (entry.older);\r\n      if (this.newest_) {\r\n        this.newest_.newer = null;\r\n      }\r\n    } else if (entry === this.oldest_) {\r\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\r\n      if (this.oldest_) {\r\n        this.oldest_.older = null;\r\n      }\r\n    } else {\r\n      entry.newer.older = entry.older;\r\n      entry.older.newer = entry.newer;\r\n    }\r\n    delete this.entries_[key];\r\n    --this.count_;\r\n    return entry.value_;\r\n  }\r\n\r\n  /**\r\n   * @return {number} Count.\r\n   */\r\n  getCount() {\r\n    return this.count_;\r\n  }\r\n\r\n  /**\r\n   * @return {Array<string>} Keys.\r\n   */\r\n  getKeys() {\r\n    const keys = new Array(this.count_);\r\n    let i = 0;\r\n    let entry;\r\n    for (entry = this.newest_; entry; entry = entry.older) {\r\n      keys[i++] = entry.key_;\r\n    }\r\n    return keys;\r\n  }\r\n\r\n  /**\r\n   * @return {Array<T>} Values.\r\n   */\r\n  getValues() {\r\n    const values = new Array(this.count_);\r\n    let i = 0;\r\n    let entry;\r\n    for (entry = this.newest_; entry; entry = entry.older) {\r\n      values[i++] = entry.value_;\r\n    }\r\n    return values;\r\n  }\r\n\r\n  /**\r\n   * @return {T} Last value.\r\n   */\r\n  peekLast() {\r\n    return this.oldest_.value_;\r\n  }\r\n\r\n  /**\r\n   * @return {string} Last key.\r\n   */\r\n  peekLastKey() {\r\n    return this.oldest_.key_;\r\n  }\r\n\r\n  /**\r\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\r\n   * @return {string} The newest key.\r\n   */\r\n  peekFirstKey() {\r\n    return this.newest_.key_;\r\n  }\r\n\r\n  /**\r\n   * Return an entry without updating least recently used time.\r\n   * @param {string} key Key.\r\n   * @return {T} Value.\r\n   */\r\n  peek(key) {\r\n    if (!this.containsKey(key)) {\r\n      return undefined;\r\n    }\r\n    return this.entries_[key].value_;\r\n  }\r\n\r\n  /**\r\n   * @return {T} value Value.\r\n   */\r\n  pop() {\r\n    const entry = this.oldest_;\r\n    delete this.entries_[entry.key_];\r\n    if (entry.newer) {\r\n      entry.newer.older = null;\r\n    }\r\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\r\n    if (!this.oldest_) {\r\n      this.newest_ = null;\r\n    }\r\n    --this.count_;\r\n    return entry.value_;\r\n  }\r\n\r\n  /**\r\n   * @param {string} key Key.\r\n   * @param {T} value Value.\r\n   */\r\n  replace(key, value) {\r\n    this.get(key); // update `newest_`\r\n    this.entries_[key].value_ = value;\r\n  }\r\n\r\n  /**\r\n   * @param {string} key Key.\r\n   * @param {T} value Value.\r\n   */\r\n  set(key, value) {\r\n    assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\r\n    const entry = {\r\n      key_: key,\r\n      newer: null,\r\n      older: this.newest_,\r\n      value_: value,\r\n    };\r\n    if (!this.newest_) {\r\n      this.oldest_ = entry;\r\n    } else {\r\n      this.newest_.newer = entry;\r\n    }\r\n    this.newest_ = entry;\r\n    this.entries_[key] = entry;\r\n    ++this.count_;\r\n  }\r\n\r\n  /**\r\n   * Set a maximum number of entries for the cache.\r\n   * @param {number} size Cache size.\r\n   * @api\r\n   */\r\n  setSize(size) {\r\n    this.highWaterMark = size;\r\n  }\r\n}\r\n\r\nexport default LRUCache;\r\n","/**\r\n * @module ol/tilecoord\r\n */\r\n\r\n/**\r\n * An array of three numbers representing the location of a tile in a tile\r\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\r\n * @typedef {Array<number>} TileCoord\r\n * @api\r\n */\r\n\r\n/**\r\n * @param {number} z Z.\r\n * @param {number} x X.\r\n * @param {number} y Y.\r\n * @param {TileCoord} [tileCoord] Tile coordinate.\r\n * @return {TileCoord} Tile coordinate.\r\n */\r\nexport function createOrUpdate(z, x, y, tileCoord) {\r\n  if (tileCoord !== undefined) {\r\n    tileCoord[0] = z;\r\n    tileCoord[1] = x;\r\n    tileCoord[2] = y;\r\n    return tileCoord;\r\n  } else {\r\n    return [z, x, y];\r\n  }\r\n}\r\n\r\n/**\r\n * @param {number} z Z.\r\n * @param {number} x X.\r\n * @param {number} y Y.\r\n * @return {string} Key.\r\n */\r\nexport function getKeyZXY(z, x, y) {\r\n  return z + '/' + x + '/' + y;\r\n}\r\n\r\n/**\r\n * Get the key for a tile coord.\r\n * @param {TileCoord} tileCoord The tile coord.\r\n * @return {string} Key.\r\n */\r\nexport function getKey(tileCoord) {\r\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\r\n}\r\n\r\n/**\r\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\r\n * @param {string} tileKey The tile key.\r\n * @return {string} The cache key.\r\n */\r\nexport function getCacheKeyForTileKey(tileKey) {\r\n  const [z, x, y] = tileKey\r\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\r\n    .split(',')\r\n    .map(Number);\r\n  return getKeyZXY(z, x, y);\r\n}\r\n\r\n/**\r\n * Get a tile coord given a key.\r\n * @param {string} key The tile coord key.\r\n * @return {TileCoord} The tile coord.\r\n */\r\nexport function fromKey(key) {\r\n  return key.split('/').map(Number);\r\n}\r\n\r\n/**\r\n * @param {TileCoord} tileCoord Tile coord.\r\n * @return {number} Hash.\r\n */\r\nexport function hash(tileCoord) {\r\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\r\n}\r\n\r\n/**\r\n * @param {TileCoord} tileCoord Tile coordinate.\r\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\r\n * @return {boolean} Tile coordinate is within extent and zoom level range.\r\n */\r\nexport function withinExtentAndZ(tileCoord, tileGrid) {\r\n  const z = tileCoord[0];\r\n  const x = tileCoord[1];\r\n  const y = tileCoord[2];\r\n\r\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\r\n    return false;\r\n  }\r\n  const tileRange = tileGrid.getFullTileRange(z);\r\n  if (!tileRange) {\r\n    return true;\r\n  } else {\r\n    return tileRange.containsXY(x, y);\r\n  }\r\n}\r\n","/**\r\n * @module ol/TileCache\r\n */\r\nimport LRUCache from './structs/LRUCache.js';\r\nimport {fromKey, getKey} from './tilecoord.js';\r\n\r\nclass TileCache extends LRUCache {\r\n  clear() {\r\n    while (this.getCount() > 0) {\r\n      this.pop().release();\r\n    }\r\n    super.clear();\r\n  }\r\n\r\n  /**\r\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\r\n   */\r\n  expireCache(usedTiles) {\r\n    while (this.canExpireCache()) {\r\n      const tile = this.peekLast();\r\n      if (tile.getKey() in usedTiles) {\r\n        break;\r\n      } else {\r\n        this.pop().release();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\r\n   */\r\n  pruneExceptNewestZ() {\r\n    if (this.getCount() === 0) {\r\n      return;\r\n    }\r\n    const key = this.peekFirstKey();\r\n    const tileCoord = fromKey(key);\r\n    const z = tileCoord[0];\r\n    this.forEach(\r\n      function (tile) {\r\n        if (tile.tileCoord[0] !== z) {\r\n          this.remove(getKey(tile.tileCoord));\r\n          tile.release();\r\n        }\r\n      }.bind(this)\r\n    );\r\n  }\r\n}\r\n\r\nexport default TileCache;\r\n","/**\r\n * @module ol/source/TileEventType\r\n */\r\n\r\n/**\r\n * @enum {string}\r\n */\r\nexport default {\r\n  /**\r\n   * Triggered when a tile starts loading.\r\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\r\n   * @api\r\n   */\r\n  TILELOADSTART: 'tileloadstart',\r\n\r\n  /**\r\n   * Triggered when a tile finishes loading, either when its data is loaded,\r\n   * or when loading was aborted because the tile is no longer needed.\r\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\r\n   * @api\r\n   */\r\n  TILELOADEND: 'tileloadend',\r\n\r\n  /**\r\n   * Triggered if tile loading results in an error. Note that this is not the\r\n   * right place to re-fetch tiles. See {@link module:ol/ImageTile~ImageTile#load}\r\n   * for details.\r\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\r\n   * @api\r\n   */\r\n  TILELOADERROR: 'tileloaderror',\r\n};\r\n\r\n/**\r\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\r\n */\r\n","/**\r\n * @module ol/tilegrid/TileGrid\r\n */\r\nimport TileRange, {\r\n  createOrUpdate as createOrUpdateTileRange,\r\n} from '../TileRange.js';\r\nimport {DEFAULT_TILE_SIZE} from './common.js';\r\nimport {assert} from '../asserts.js';\r\nimport {ceil, clamp, floor} from '../math.js';\r\nimport {createOrUpdate, getTopLeft} from '../extent.js';\r\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\r\nimport {intersectsLinearRing} from '../geom/flat/intersectsextent.js';\r\nimport {isSorted, linearFindNearest} from '../array.js';\r\nimport {toSize} from '../size.js';\r\n\r\n/**\r\n * @private\r\n * @type {import(\"../tilecoord.js\").TileCoord}\r\n */\r\nconst tmpTileCoord = [0, 0, 0];\r\n\r\n/**\r\n * Number of decimal digits to consider in integer values when rounding.\r\n * @type {number}\r\n */\r\nconst DECIMALS = 5;\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\r\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\r\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\r\n * @property {number} [minZoom=0] Minimum zoom.\r\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\r\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\r\n * specified, `extent` or `origins` must be provided.\r\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\r\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\r\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\r\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\r\n * `origin` must be provided.\r\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\r\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\r\n * array will have a length of `maxZoom + 1`.\r\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\r\n * of the grid for each zoom level. If specified the values\r\n * define each zoom level's extent together with the `origin` or `origins`.\r\n * A grid `extent` can be configured in addition, and will further limit the extent\r\n * for which tile requests are made by sources. If the bottom-left corner of\r\n * an extent is used as `origin` or `origins`, then the `y` value must be\r\n * negative because OpenLayers tile coordinates use the top left as the origin.\r\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\r\n * Default is `[256, 256]`.\r\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\r\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\r\n * tile size.\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Base class for setting the grid pattern for sources accessing tiled-image\r\n * servers.\r\n * @api\r\n */\r\nclass TileGrid {\r\n  /**\r\n   * @param {Options} options Tile grid options.\r\n   */\r\n  constructor(options) {\r\n    /**\r\n     * @protected\r\n     * @type {number}\r\n     */\r\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {!Array<number>}\r\n     */\r\n    this.resolutions_ = options.resolutions;\r\n    assert(\r\n      isSorted(\r\n        this.resolutions_,\r\n        function (a, b) {\r\n          return b - a;\r\n        },\r\n        true\r\n      ),\r\n      17\r\n    ); // `resolutions` must be sorted in descending order\r\n\r\n    // check if we've got a consistent zoom factor and origin\r\n    let zoomFactor;\r\n    if (!options.origins) {\r\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\r\n        if (!zoomFactor) {\r\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\r\n        } else {\r\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\r\n            zoomFactor = undefined;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.zoomFactor_ = zoomFactor;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {number}\r\n     */\r\n    this.maxZoom = this.resolutions_.length - 1;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../coordinate.js\").Coordinate|null}\r\n     */\r\n    this.origin_ = options.origin !== undefined ? options.origin : null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\r\n     */\r\n    this.origins_ = null;\r\n    if (options.origins !== undefined) {\r\n      this.origins_ = options.origins;\r\n      assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\r\n    }\r\n\r\n    const extent = options.extent;\r\n\r\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\r\n      this.origin_ = getTopLeft(extent);\r\n    }\r\n\r\n    assert(\r\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\r\n      18\r\n    ); // Either `origin` or `origins` must be configured, never both\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<number|import(\"../size.js\").Size>}\r\n     */\r\n    this.tileSizes_ = null;\r\n    if (options.tileSizes !== undefined) {\r\n      this.tileSizes_ = options.tileSizes;\r\n      assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|import(\"../size.js\").Size}\r\n     */\r\n    this.tileSize_ =\r\n      options.tileSize !== undefined\r\n        ? options.tileSize\r\n        : !this.tileSizes_\r\n        ? DEFAULT_TILE_SIZE\r\n        : null;\r\n    assert(\r\n      (!this.tileSize_ && this.tileSizes_) ||\r\n        (this.tileSize_ && !this.tileSizes_),\r\n      22\r\n    ); // Either `tileSize` or `tileSizes` must be configured, never both\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../extent.js\").Extent}\r\n     */\r\n    this.extent_ = extent !== undefined ? extent : null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<import(\"../TileRange.js\").default>}\r\n     */\r\n    this.fullTileRanges_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../size.js\").Size}\r\n     */\r\n    this.tmpSize_ = [0, 0];\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../extent.js\").Extent}\r\n     */\r\n    this.tmpExtent_ = [0, 0, 0, 0];\r\n\r\n    if (options.sizes !== undefined) {\r\n      this.fullTileRanges_ = options.sizes.map(function (size, z) {\r\n        const tileRange = new TileRange(\r\n          Math.min(0, size[0]),\r\n          Math.max(size[0] - 1, -1),\r\n          Math.min(0, size[1]),\r\n          Math.max(size[1] - 1, -1)\r\n        );\r\n        if (extent) {\r\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\r\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\r\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\r\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\r\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\r\n        }\r\n        return tileRange;\r\n      }, this);\r\n    } else if (extent) {\r\n      this.calculateTileRanges_(extent);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Call a function with each tile coordinate for a given extent and zoom level.\r\n   *\r\n   * @param {import(\"../extent.js\").Extent} extent Extent.\r\n   * @param {number} zoom Integer zoom level.\r\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\r\n   * @api\r\n   */\r\n  forEachTileCoord(extent, zoom, callback) {\r\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\r\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\r\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\r\n        callback([zoom, i, j]);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\r\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\r\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\r\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\r\n   * @return {boolean} Callback succeeded.\r\n   */\r\n  forEachTileCoordParentTileRange(\r\n    tileCoord,\r\n    callback,\r\n    tempTileRange,\r\n    tempExtent\r\n  ) {\r\n    let tileRange, x, y;\r\n    let tileCoordExtent = null;\r\n    let z = tileCoord[0] - 1;\r\n    if (this.zoomFactor_ === 2) {\r\n      x = tileCoord[1];\r\n      y = tileCoord[2];\r\n    } else {\r\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, tempExtent);\r\n    }\r\n    while (z >= this.minZoom) {\r\n      if (this.zoomFactor_ === 2) {\r\n        x = Math.floor(x / 2);\r\n        y = Math.floor(y / 2);\r\n        tileRange = createOrUpdateTileRange(x, x, y, y, tempTileRange);\r\n      } else {\r\n        tileRange = this.getTileRangeForExtentAndZ(\r\n          tileCoordExtent,\r\n          z,\r\n          tempTileRange\r\n        );\r\n      }\r\n      if (callback(z, tileRange)) {\r\n        return true;\r\n      }\r\n      --z;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Get the extent for this tile grid, if it was configured.\r\n   * @return {import(\"../extent.js\").Extent} Extent.\r\n   * @api\r\n   */\r\n  getExtent() {\r\n    return this.extent_;\r\n  }\r\n\r\n  /**\r\n   * Get the maximum zoom level for the grid.\r\n   * @return {number} Max zoom.\r\n   * @api\r\n   */\r\n  getMaxZoom() {\r\n    return this.maxZoom;\r\n  }\r\n\r\n  /**\r\n   * Get the minimum zoom level for the grid.\r\n   * @return {number} Min zoom.\r\n   * @api\r\n   */\r\n  getMinZoom() {\r\n    return this.minZoom;\r\n  }\r\n\r\n  /**\r\n   * Get the origin for the grid at the given zoom level.\r\n   * @param {number} z Integer zoom level.\r\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\r\n   * @api\r\n   */\r\n  getOrigin(z) {\r\n    if (this.origin_) {\r\n      return this.origin_;\r\n    } else {\r\n      return this.origins_[z];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get the resolution for the given zoom level.\r\n   * @param {number} z Integer zoom level.\r\n   * @return {number} Resolution.\r\n   * @api\r\n   */\r\n  getResolution(z) {\r\n    return this.resolutions_[z];\r\n  }\r\n\r\n  /**\r\n   * Get the list of resolutions for the tile grid.\r\n   * @return {Array<number>} Resolutions.\r\n   * @api\r\n   */\r\n  getResolutions() {\r\n    return this.resolutions_;\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\r\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\r\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\r\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\r\n   */\r\n  getTileCoordChildTileRange(tileCoord, tempTileRange, tempExtent) {\r\n    if (tileCoord[0] < this.maxZoom) {\r\n      if (this.zoomFactor_ === 2) {\r\n        const minX = tileCoord[1] * 2;\r\n        const minY = tileCoord[2] * 2;\r\n        return createOrUpdateTileRange(\r\n          minX,\r\n          minX + 1,\r\n          minY,\r\n          minY + 1,\r\n          tempTileRange\r\n        );\r\n      }\r\n      const tileCoordExtent = this.getTileCoordExtent(\r\n        tileCoord,\r\n        tempExtent || this.tmpExtent_\r\n      );\r\n      return this.getTileRangeForExtentAndZ(\r\n        tileCoordExtent,\r\n        tileCoord[0] + 1,\r\n        tempTileRange\r\n      );\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\r\n   * @param {number} z Integer zoom level.\r\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\r\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\r\n   */\r\n  getTileRangeForTileCoordAndZ(tileCoord, z, tempTileRange) {\r\n    if (z > this.maxZoom || z < this.minZoom) {\r\n      return null;\r\n    }\r\n\r\n    const tileCoordZ = tileCoord[0];\r\n    const tileCoordX = tileCoord[1];\r\n    const tileCoordY = tileCoord[2];\r\n\r\n    if (z === tileCoordZ) {\r\n      return createOrUpdateTileRange(\r\n        tileCoordX,\r\n        tileCoordY,\r\n        tileCoordX,\r\n        tileCoordY,\r\n        tempTileRange\r\n      );\r\n    }\r\n\r\n    if (this.zoomFactor_) {\r\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\r\n      const minX = Math.floor(tileCoordX * factor);\r\n      const minY = Math.floor(tileCoordY * factor);\r\n      if (z < tileCoordZ) {\r\n        return createOrUpdateTileRange(minX, minX, minY, minY, tempTileRange);\r\n      }\r\n\r\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\r\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\r\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\r\n    }\r\n\r\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\r\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, tempTileRange);\r\n  }\r\n\r\n  /**\r\n   * Get the extent for a tile range.\r\n   * @param {number} z Integer zoom level.\r\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\r\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\r\n   * @return {import(\"../extent.js\").Extent} Extent.\r\n   */\r\n  getTileRangeExtent(z, tileRange, tempExtent) {\r\n    const origin = this.getOrigin(z);\r\n    const resolution = this.getResolution(z);\r\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\r\n    const minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\r\n    const maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\r\n    const minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\r\n    const maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\r\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\r\n  }\r\n\r\n  /**\r\n   * Get a tile range for the given extent and integer zoom level.\r\n   * @param {import(\"../extent.js\").Extent} extent Extent.\r\n   * @param {number} z Integer zoom level.\r\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary tile range object.\r\n   * @return {import(\"../TileRange.js\").default} Tile range.\r\n   */\r\n  getTileRangeForExtentAndZ(extent, z, tempTileRange) {\r\n    const tileCoord = tmpTileCoord;\r\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tileCoord);\r\n    const minX = tileCoord[1];\r\n    const minY = tileCoord[2];\r\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tileCoord);\r\n    return createOrUpdateTileRange(\r\n      minX,\r\n      tileCoord[1],\r\n      minY,\r\n      tileCoord[2],\r\n      tempTileRange\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\r\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\r\n   */\r\n  getTileCoordCenter(tileCoord) {\r\n    const origin = this.getOrigin(tileCoord[0]);\r\n    const resolution = this.getResolution(tileCoord[0]);\r\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\r\n    return [\r\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\r\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\r\n    ];\r\n  }\r\n\r\n  /**\r\n   * Get the extent of a tile coordinate.\r\n   *\r\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\r\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary extent object.\r\n   * @return {import(\"../extent.js\").Extent} Extent.\r\n   * @api\r\n   */\r\n  getTileCoordExtent(tileCoord, tempExtent) {\r\n    const origin = this.getOrigin(tileCoord[0]);\r\n    const resolution = this.getResolution(tileCoord[0]);\r\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\r\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\r\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\r\n    const maxX = minX + tileSize[0] * resolution;\r\n    const maxY = minY + tileSize[1] * resolution;\r\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\r\n  }\r\n\r\n  /**\r\n   * Get the tile coordinate for the given map coordinate and resolution.  This\r\n   * method considers that coordinates that intersect tile boundaries should be\r\n   * assigned the higher tile coordinate.\r\n   *\r\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\r\n   * @param {number} resolution Resolution.\r\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\r\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\r\n   * @api\r\n   */\r\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\r\n    return this.getTileCoordForXYAndResolution_(\r\n      coordinate[0],\r\n      coordinate[1],\r\n      resolution,\r\n      false,\r\n      opt_tileCoord\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Note that this method should not be called for resolutions that correspond\r\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\r\n   * @param {number} x X.\r\n   * @param {number} y Y.\r\n   * @param {number} resolution Resolution (for a non-integer zoom level).\r\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\r\n   *     intersections go to the higher tile coordinate, let edge intersections\r\n   *     go to the lower tile coordinate.\r\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\r\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\r\n   * @private\r\n   */\r\n  getTileCoordForXYAndResolution_(\r\n    x,\r\n    y,\r\n    resolution,\r\n    reverseIntersectionPolicy,\r\n    opt_tileCoord\r\n  ) {\r\n    const z = this.getZForResolution(resolution);\r\n    const scale = resolution / this.getResolution(z);\r\n    const origin = this.getOrigin(z);\r\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\r\n\r\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\r\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\r\n\r\n    if (reverseIntersectionPolicy) {\r\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\r\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\r\n    } else {\r\n      tileCoordX = floor(tileCoordX, DECIMALS);\r\n      tileCoordY = floor(tileCoordY, DECIMALS);\r\n    }\r\n\r\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\r\n  }\r\n\r\n  /**\r\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\r\n   * they should have separate implementations.  This method is for integer zoom\r\n   * levels.  The other method should only be called for resolutions corresponding\r\n   * to non-integer zoom levels.\r\n   * @param {number} x Map x coordinate.\r\n   * @param {number} y Map y coordinate.\r\n   * @param {number} z Integer zoom level.\r\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\r\n   *     intersections go to the higher tile coordinate, let edge intersections\r\n   *     go to the lower tile coordinate.\r\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\r\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\r\n   * @private\r\n   */\r\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\r\n    const origin = this.getOrigin(z);\r\n    const resolution = this.getResolution(z);\r\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\r\n\r\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\r\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\r\n\r\n    if (reverseIntersectionPolicy) {\r\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\r\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\r\n    } else {\r\n      tileCoordX = floor(tileCoordX, DECIMALS);\r\n      tileCoordY = floor(tileCoordY, DECIMALS);\r\n    }\r\n\r\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\r\n  }\r\n\r\n  /**\r\n   * Get a tile coordinate given a map coordinate and zoom level.\r\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\r\n   * @param {number} z Zoom level.\r\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\r\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\r\n   * @api\r\n   */\r\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\r\n    return this.getTileCoordForXYAndZ_(\r\n      coordinate[0],\r\n      coordinate[1],\r\n      z,\r\n      false,\r\n      opt_tileCoord\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\r\n   * @return {number} Tile resolution.\r\n   */\r\n  getTileCoordResolution(tileCoord) {\r\n    return this.resolutions_[tileCoord[0]];\r\n  }\r\n\r\n  /**\r\n   * Get the tile size for a zoom level. The type of the return value matches the\r\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\r\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\r\n   * @param {number} z Z.\r\n   * @return {number|import(\"../size.js\").Size} Tile size.\r\n   * @api\r\n   */\r\n  getTileSize(z) {\r\n    if (this.tileSize_) {\r\n      return this.tileSize_;\r\n    } else {\r\n      return this.tileSizes_[z];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {number} z Zoom level.\r\n   * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\r\n   */\r\n  getFullTileRange(z) {\r\n    if (!this.fullTileRanges_) {\r\n      return this.extent_\r\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\r\n        : null;\r\n    } else {\r\n      return this.fullTileRanges_[z];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {number} resolution Resolution.\r\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\r\n   *     If 0, the nearest resolution will be used.\r\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\r\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\r\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\r\n   *\r\n   * For example to change tile Z at the midpoint of zoom levels\r\n   * ```js\r\n   * function(value, high, low) {\r\n   *   return value - low * Math.sqrt(high / low);\r\n   * }\r\n   * ```\r\n   * @return {number} Z.\r\n   * @api\r\n   */\r\n  getZForResolution(resolution, opt_direction) {\r\n    const z = linearFindNearest(\r\n      this.resolutions_,\r\n      resolution,\r\n      opt_direction || 0\r\n    );\r\n    return clamp(z, this.minZoom, this.maxZoom);\r\n  }\r\n\r\n  /**\r\n   * The tile with the provided tile coordinate intersects the given viewport.\r\n   * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coordinate.\r\n   * @param {Array<number>} viewport Viewport as returned from {@link module:ol/extent.getRotatedViewport}.\r\n   * @return {boolean} The tile with the provided tile coordinate intersects the given viewport.\r\n   */\r\n  tileCoordIntersectsViewport(tileCoord, viewport) {\r\n    return intersectsLinearRing(\r\n      viewport,\r\n      0,\r\n      viewport.length,\r\n      2,\r\n      this.getTileCoordExtent(tileCoord)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\r\n   * @private\r\n   */\r\n  calculateTileRanges_(extent) {\r\n    const length = this.resolutions_.length;\r\n    const fullTileRanges = new Array(length);\r\n    for (let z = this.minZoom; z < length; ++z) {\r\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\r\n    }\r\n    this.fullTileRanges_ = fullTileRanges;\r\n  }\r\n}\r\n\r\nexport default TileGrid;\r\n","/**\r\n * @module ol/tilegrid\r\n */\r\nimport TileGrid from './tilegrid/TileGrid.js';\r\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\r\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\r\nimport {\r\n  containsCoordinate,\r\n  createOrUpdate,\r\n  getCorner,\r\n  getHeight,\r\n  getWidth,\r\n} from './extent.js';\r\nimport {toSize} from './size.js';\r\n\r\n/**\r\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\r\n * @return {!TileGrid} Default tile grid for the\r\n * passed projection.\r\n */\r\nexport function getForProjection(projection) {\r\n  let tileGrid = projection.getDefaultTileGrid();\r\n  if (!tileGrid) {\r\n    tileGrid = createForProjection(projection);\r\n    projection.setDefaultTileGrid(tileGrid);\r\n  }\r\n  return tileGrid;\r\n}\r\n\r\n/**\r\n * @param {TileGrid} tileGrid Tile grid.\r\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\r\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\r\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\r\n */\r\nexport function wrapX(tileGrid, tileCoord, projection) {\r\n  const z = tileCoord[0];\r\n  const center = tileGrid.getTileCoordCenter(tileCoord);\r\n  const projectionExtent = extentFromProjection(projection);\r\n  if (!containsCoordinate(projectionExtent, center)) {\r\n    const worldWidth = getWidth(projectionExtent);\r\n    const worldsAway = Math.ceil(\r\n      (projectionExtent[0] - center[0]) / worldWidth\r\n    );\r\n    center[0] += worldWidth * worldsAway;\r\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\r\n  } else {\r\n    return tileCoord;\r\n  }\r\n}\r\n\r\n/**\r\n * @param {import(\"./extent.js\").Extent} extent Extent.\r\n * @param {number} [maxZoom] Maximum zoom level (default is\r\n *     DEFAULT_MAX_ZOOM).\r\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\r\n *     DEFAULT_TILE_SIZE).\r\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\r\n * @return {!TileGrid} TileGrid instance.\r\n */\r\nexport function createForExtent(extent, maxZoom, tileSize, corner) {\r\n  corner = corner !== undefined ? corner : 'top-left';\r\n\r\n  const resolutions = resolutionsFromExtent(extent, maxZoom, tileSize);\r\n\r\n  return new TileGrid({\r\n    extent: extent,\r\n    origin: getCorner(extent, corner),\r\n    resolutions: resolutions,\r\n    tileSize: tileSize,\r\n  });\r\n}\r\n\r\n/**\r\n * @typedef {Object} XYZOptions\r\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\r\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\r\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\r\n * @property {number} [maxResolution] Resolution at level zero.\r\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\r\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\r\n * @property {number} [minZoom=0] Minimum zoom.\r\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\r\n */\r\n\r\n/**\r\n * Creates a tile grid with a standard XYZ tiling scheme.\r\n * @param {XYZOptions} [options] Tile grid options.\r\n * @return {!TileGrid} Tile grid instance.\r\n * @api\r\n */\r\nexport function createXYZ(options) {\r\n  const xyzOptions = options || {};\r\n\r\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\r\n\r\n  const gridOptions = {\r\n    extent: extent,\r\n    minZoom: xyzOptions.minZoom,\r\n    tileSize: xyzOptions.tileSize,\r\n    resolutions: resolutionsFromExtent(\r\n      extent,\r\n      xyzOptions.maxZoom,\r\n      xyzOptions.tileSize,\r\n      xyzOptions.maxResolution\r\n    ),\r\n  };\r\n  return new TileGrid(gridOptions);\r\n}\r\n\r\n/**\r\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\r\n * @param {import(\"./extent.js\").Extent} extent Extent.\r\n * @param {number} [maxZoom] Maximum zoom level (default is\r\n *     DEFAULT_MAX_ZOOM).\r\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\r\n *     DEFAULT_TILE_SIZE).\r\n * @param {number} [maxResolution] Resolution at level zero.\r\n * @return {!Array<number>} Resolutions array.\r\n */\r\nfunction resolutionsFromExtent(extent, maxZoom, tileSize, maxResolution) {\r\n  maxZoom = maxZoom !== undefined ? maxZoom : DEFAULT_MAX_ZOOM;\r\n  tileSize = toSize(tileSize !== undefined ? tileSize : DEFAULT_TILE_SIZE);\r\n\r\n  const height = getHeight(extent);\r\n  const width = getWidth(extent);\r\n\r\n  maxResolution =\r\n    maxResolution > 0\r\n      ? maxResolution\r\n      : Math.max(width / tileSize[0], height / tileSize[1]);\r\n\r\n  const length = maxZoom + 1;\r\n  const resolutions = new Array(length);\r\n  for (let z = 0; z < length; ++z) {\r\n    resolutions[z] = maxResolution / Math.pow(2, z);\r\n  }\r\n  return resolutions;\r\n}\r\n\r\n/**\r\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\r\n * @param {number} [maxZoom] Maximum zoom level (default is\r\n *     DEFAULT_MAX_ZOOM).\r\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\r\n *     DEFAULT_TILE_SIZE).\r\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\r\n * @return {!TileGrid} TileGrid instance.\r\n */\r\nexport function createForProjection(projection, maxZoom, tileSize, corner) {\r\n  const extent = extentFromProjection(projection);\r\n  return createForExtent(extent, maxZoom, tileSize, corner);\r\n}\r\n\r\n/**\r\n * Generate a tile grid extent from a projection.  If the projection has an\r\n * extent, it is used.  If not, a global extent is assumed.\r\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\r\n * @return {import(\"./extent.js\").Extent} Extent.\r\n */\r\nexport function extentFromProjection(projection) {\r\n  projection = getProjection(projection);\r\n  let extent = projection.getExtent();\r\n  if (!extent) {\r\n    const half =\r\n      (180 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit();\r\n    extent = createOrUpdate(-half, -half, half, half);\r\n  }\r\n  return extent;\r\n}\r\n","/**\r\n * @module ol/source/Tile\r\n */\r\nimport Event from '../events/Event.js';\r\nimport Source from './Source.js';\r\nimport TileCache from '../TileCache.js';\r\nimport TileState from '../TileState.js';\r\nimport {abstract} from '../util.js';\r\nimport {assert} from '../asserts.js';\r\nimport {equivalent} from '../proj.js';\r\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\r\nimport {\r\n  getForProjection as getTileGridForProjection,\r\n  wrapX,\r\n} from '../tilegrid.js';\r\nimport {scale as scaleSize, toSize} from '../size.js';\r\n\r\n/***\r\n * @template Return\r\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\r\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\r\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\r\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\r\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\r\n */\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\r\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\r\n * @property {number} [cacheSize] CacheSize.\r\n * @property {boolean} [opaque=false] Whether the layer is opaque.\r\n * @property {number} [tilePixelRatio] TilePixelRatio.\r\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\r\n * @property {import(\"./Source.js\").State} [state] State.\r\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\r\n * @property {boolean} [wrapX=false] WrapX.\r\n * @property {number} [transition] Transition.\r\n * @property {string} [key] Key.\r\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\r\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\r\n * the nearest neighbor is used when resampling.\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Abstract base class; normally only used for creating subclasses and not\r\n * instantiated in apps.\r\n * Base class for sources providing images divided into a tile grid.\r\n * @abstract\r\n * @api\r\n */\r\nclass TileSource extends Source {\r\n  /**\r\n   * @param {Options} options SourceTile source options.\r\n   */\r\n  constructor(options) {\r\n    super({\r\n      attributions: options.attributions,\r\n      attributionsCollapsible: options.attributionsCollapsible,\r\n      projection: options.projection,\r\n      state: options.state,\r\n      wrapX: options.wrapX,\r\n      interpolate: options.interpolate,\r\n    });\r\n\r\n    /***\r\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\r\n     */\r\n    this.on;\r\n\r\n    /***\r\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\r\n     */\r\n    this.once;\r\n\r\n    /***\r\n     * @type {TileSourceOnSignature<void>}\r\n     */\r\n    this.un;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.tilePixelRatio_ =\r\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\r\n\r\n    /**\r\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\r\n     */\r\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\r\n\r\n    const tileSize = [256, 256];\r\n    if (this.tileGrid) {\r\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\r\n    }\r\n\r\n    /**\r\n     * @protected\r\n     * @type {import(\"../TileCache.js\").default}\r\n     */\r\n    this.tileCache = new TileCache(options.cacheSize || 0);\r\n\r\n    /**\r\n     * @protected\r\n     * @type {import(\"../size.js\").Size}\r\n     */\r\n    this.tmpSize = [0, 0];\r\n\r\n    /**\r\n     * @private\r\n     * @type {string}\r\n     */\r\n    this.key_ = options.key || '';\r\n\r\n    /**\r\n     * @protected\r\n     * @type {import(\"../Tile.js\").Options}\r\n     */\r\n    this.tileOptions = {\r\n      transition: options.transition,\r\n      interpolate: options.interpolate,\r\n    };\r\n\r\n    /**\r\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\r\n     * by a renderer if the views resolution does not match any resolution of the tile source.\r\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\r\n     * will be used. If -1, the nearest higher resolution will be used.\r\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\r\n     */\r\n    this.zDirection = options.zDirection ? options.zDirection : 0;\r\n  }\r\n\r\n  /**\r\n   * @return {boolean} Can expire cache.\r\n   */\r\n  canExpireCache() {\r\n    return this.tileCache.canExpireCache();\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\r\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\r\n   */\r\n  expireCache(projection, usedTiles) {\r\n    const tileCache = this.getTileCacheForProjection(projection);\r\n    if (tileCache) {\r\n      tileCache.expireCache(usedTiles);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\r\n   * @param {number} z Zoom level.\r\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\r\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\r\n   *     loaded tile.  If the callback returns `false`, the tile will not be\r\n   *     considered loaded.\r\n   * @return {boolean} The tile range is fully covered with loaded tiles.\r\n   */\r\n  forEachLoadedTile(projection, z, tileRange, callback) {\r\n    const tileCache = this.getTileCacheForProjection(projection);\r\n    if (!tileCache) {\r\n      return false;\r\n    }\r\n\r\n    let covered = true;\r\n    let tile, tileCoordKey, loaded;\r\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\r\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\r\n        tileCoordKey = getKeyZXY(z, x, y);\r\n        loaded = false;\r\n        if (tileCache.containsKey(tileCoordKey)) {\r\n          tile = /** @type {!import(\"../Tile.js\").default} */ (\r\n            tileCache.get(tileCoordKey)\r\n          );\r\n          loaded = tile.getState() === TileState.LOADED;\r\n          if (loaded) {\r\n            loaded = callback(tile) !== false;\r\n          }\r\n        }\r\n        if (!loaded) {\r\n          covered = false;\r\n        }\r\n      }\r\n    }\r\n    return covered;\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\r\n   * @return {number} Gutter.\r\n   */\r\n  getGutterForProjection(projection) {\r\n    return 0;\r\n  }\r\n\r\n  /**\r\n   * Return the key to be used for all tiles in the source.\r\n   * @return {string} The key for all tiles.\r\n   */\r\n  getKey() {\r\n    return this.key_;\r\n  }\r\n\r\n  /**\r\n   * Set the value to be used as the key for all tiles in the source.\r\n   * @param {string} key The key for tiles.\r\n   * @protected\r\n   */\r\n  setKey(key) {\r\n    if (this.key_ !== key) {\r\n      this.key_ = key;\r\n      this.changed();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\r\n   * @return {boolean} Opaque.\r\n   */\r\n  getOpaque(projection) {\r\n    return this.opaque_;\r\n  }\r\n\r\n  /**\r\n   * @return {Array<number>|null} Resolutions.\r\n   */\r\n  getResolutions() {\r\n    if (!this.tileGrid) {\r\n      return null;\r\n    }\r\n    return this.tileGrid.getResolutions();\r\n  }\r\n\r\n  /**\r\n   * @abstract\r\n   * @param {number} z Tile coordinate z.\r\n   * @param {number} x Tile coordinate x.\r\n   * @param {number} y Tile coordinate y.\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\r\n   * @return {!import(\"../Tile.js\").default} Tile.\r\n   */\r\n  getTile(z, x, y, pixelRatio, projection) {\r\n    return abstract();\r\n  }\r\n\r\n  /**\r\n   * Return the tile grid of the tile source.\r\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\r\n   * @api\r\n   */\r\n  getTileGrid() {\r\n    return this.tileGrid;\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\r\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\r\n   */\r\n  getTileGridForProjection(projection) {\r\n    if (!this.tileGrid) {\r\n      return getTileGridForProjection(projection);\r\n    } else {\r\n      return this.tileGrid;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\r\n   * @return {import(\"../TileCache.js\").default} Tile cache.\r\n   * @protected\r\n   */\r\n  getTileCacheForProjection(projection) {\r\n    const sourceProjection = this.getProjection();\r\n    assert(\r\n      sourceProjection === null || equivalent(sourceProjection, projection),\r\n      68 // A VectorTile source can only be rendered if it has a projection compatible with the view projection.\r\n    );\r\n    return this.tileCache;\r\n  }\r\n\r\n  /**\r\n   * Get the tile pixel ratio for this source. Subclasses may override this\r\n   * method, which is meant to return a supported pixel ratio that matches the\r\n   * provided `pixelRatio` as close as possible.\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   * @return {number} Tile pixel ratio.\r\n   */\r\n  getTilePixelRatio(pixelRatio) {\r\n    return this.tilePixelRatio_;\r\n  }\r\n\r\n  /**\r\n   * @param {number} z Z.\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\r\n   * @return {import(\"../size.js\").Size} Tile size.\r\n   */\r\n  getTilePixelSize(z, pixelRatio, projection) {\r\n    const tileGrid = this.getTileGridForProjection(projection);\r\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\r\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\r\n    if (tilePixelRatio == 1) {\r\n      return tileSize;\r\n    } else {\r\n      return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\r\n   * is outside the resolution and extent range of the tile grid, `null` will be\r\n   * returned.\r\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\r\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\r\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\r\n   *     null if no tile URL should be created for the passed `tileCoord`.\r\n   */\r\n  getTileCoordForTileUrlFunction(tileCoord, projection) {\r\n    projection = projection !== undefined ? projection : this.getProjection();\r\n    const tileGrid = this.getTileGridForProjection(projection);\r\n    if (this.getWrapX() && projection.isGlobal()) {\r\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\r\n    }\r\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\r\n  }\r\n\r\n  /**\r\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\r\n   * @api\r\n   */\r\n  clear() {\r\n    this.tileCache.clear();\r\n  }\r\n\r\n  refresh() {\r\n    this.clear();\r\n    super.refresh();\r\n  }\r\n\r\n  /**\r\n   * Increases the cache size if needed\r\n   * @param {number} tileCount Minimum number of tiles needed.\r\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\r\n   */\r\n  updateCacheSize(tileCount, projection) {\r\n    const tileCache = this.getTileCacheForProjection(projection);\r\n    if (tileCount > tileCache.highWaterMark) {\r\n      tileCache.highWaterMark = tileCount;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Marks a tile coord as being used, without triggering a load.\r\n   * @abstract\r\n   * @param {number} z Tile coordinate z.\r\n   * @param {number} x Tile coordinate x.\r\n   * @param {number} y Tile coordinate y.\r\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\r\n   */\r\n  useTile(z, x, y, projection) {}\r\n}\r\n\r\n/**\r\n * @classdesc\r\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\r\n * type.\r\n */\r\nexport class TileSourceEvent extends Event {\r\n  /**\r\n   * @param {string} type Type.\r\n   * @param {import(\"../Tile.js\").default} tile The tile.\r\n   */\r\n  constructor(type, tile) {\r\n    super(type);\r\n\r\n    /**\r\n     * The tile related to the event.\r\n     * @type {import(\"../Tile.js\").default}\r\n     * @api\r\n     */\r\n    this.tile = tile;\r\n  }\r\n}\r\n\r\nexport default TileSource;\r\n","/**\r\n * @module ol/tileurlfunction\r\n */\r\nimport {assert} from './asserts.js';\r\nimport {modulo} from './math.js';\r\nimport {hash as tileCoordHash} from './tilecoord.js';\r\n\r\n/**\r\n * @param {string} template Template.\r\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\r\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\r\n */\r\nexport function createFromTemplate(template, tileGrid) {\r\n  const zRegEx = /\\{z\\}/g;\r\n  const xRegEx = /\\{x\\}/g;\r\n  const yRegEx = /\\{y\\}/g;\r\n  const dashYRegEx = /\\{-y\\}/g;\r\n  return (\r\n    /**\r\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\r\n     * @param {number} pixelRatio Pixel ratio.\r\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\r\n     * @return {string|undefined} Tile URL.\r\n     */\r\n    function (tileCoord, pixelRatio, projection) {\r\n      if (!tileCoord) {\r\n        return undefined;\r\n      } else {\r\n        return template\r\n          .replace(zRegEx, tileCoord[0].toString())\r\n          .replace(xRegEx, tileCoord[1].toString())\r\n          .replace(yRegEx, tileCoord[2].toString())\r\n          .replace(dashYRegEx, function () {\r\n            const z = tileCoord[0];\r\n            const range = tileGrid.getFullTileRange(z);\r\n            assert(range, 55); // The {-y} placeholder requires a tile grid with extent\r\n            const y = range.getHeight() - tileCoord[2] - 1;\r\n            return y.toString();\r\n          });\r\n      }\r\n    }\r\n  );\r\n}\r\n\r\n/**\r\n * @param {Array<string>} templates Templates.\r\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\r\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\r\n */\r\nexport function createFromTemplates(templates, tileGrid) {\r\n  const len = templates.length;\r\n  const tileUrlFunctions = new Array(len);\r\n  for (let i = 0; i < len; ++i) {\r\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\r\n  }\r\n  return createFromTileUrlFunctions(tileUrlFunctions);\r\n}\r\n\r\n/**\r\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\r\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\r\n */\r\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\r\n  if (tileUrlFunctions.length === 1) {\r\n    return tileUrlFunctions[0];\r\n  }\r\n  return (\r\n    /**\r\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\r\n     * @param {number} pixelRatio Pixel ratio.\r\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\r\n     * @return {string|undefined} Tile URL.\r\n     */\r\n    function (tileCoord, pixelRatio, projection) {\r\n      if (!tileCoord) {\r\n        return undefined;\r\n      } else {\r\n        const h = tileCoordHash(tileCoord);\r\n        const index = modulo(h, tileUrlFunctions.length);\r\n        return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\r\n      }\r\n    }\r\n  );\r\n}\r\n\r\n/**\r\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\r\n * @param {number} pixelRatio Pixel ratio.\r\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\r\n * @return {string|undefined} Tile URL.\r\n */\r\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\r\n  return undefined;\r\n}\r\n\r\n/**\r\n * @param {string} url URL.\r\n * @return {Array<string>} Array of urls.\r\n */\r\nexport function expandUrl(url) {\r\n  const urls = [];\r\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\r\n  if (match) {\r\n    // char range\r\n    const startCharCode = match[1].charCodeAt(0);\r\n    const stopCharCode = match[2].charCodeAt(0);\r\n    let charCode;\r\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\r\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\r\n    }\r\n    return urls;\r\n  }\r\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\r\n  if (match) {\r\n    // number range\r\n    const stop = parseInt(match[2], 10);\r\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\r\n      urls.push(url.replace(match[0], i.toString()));\r\n    }\r\n    return urls;\r\n  }\r\n  urls.push(url);\r\n  return urls;\r\n}\r\n","/**\r\n * @module ol/source/UrlTile\r\n */\r\nimport TileEventType from './TileEventType.js';\r\nimport TileSource, {TileSourceEvent} from './Tile.js';\r\nimport TileState from '../TileState.js';\r\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\r\nimport {getKeyZXY} from '../tilecoord.js';\r\nimport {getUid} from '../util.js';\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\r\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\r\n * @property {number} [cacheSize] Cache size.\r\n * @property {boolean} [opaque=false] Whether the layer is opaque.\r\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\r\n * @property {import(\"./Source.js\").State} [state] State.\r\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\r\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\r\n * @property {number} [tilePixelRatio] TilePixelRatio.\r\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\r\n * @property {string} [url] Url.\r\n * @property {Array<string>} [urls] Urls.\r\n * @property {boolean} [wrapX=true] WrapX.\r\n * @property {number} [transition] Transition.\r\n * @property {string} [key] Key.\r\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\r\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\r\n * the nearest neighbor is used when resampling.\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Base class for sources providing tiles divided into a tile grid over http.\r\n *\r\n * @fires import(\"./Tile.js\").TileSourceEvent\r\n */\r\nclass UrlTile extends TileSource {\r\n  /**\r\n   * @param {Options} options Image tile options.\r\n   */\r\n  constructor(options) {\r\n    super({\r\n      attributions: options.attributions,\r\n      cacheSize: options.cacheSize,\r\n      opaque: options.opaque,\r\n      projection: options.projection,\r\n      state: options.state,\r\n      tileGrid: options.tileGrid,\r\n      tilePixelRatio: options.tilePixelRatio,\r\n      wrapX: options.wrapX,\r\n      transition: options.transition,\r\n      interpolate: options.interpolate,\r\n      key: options.key,\r\n      attributionsCollapsible: options.attributionsCollapsible,\r\n      zDirection: options.zDirection,\r\n    });\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.generateTileUrlFunction_ =\r\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {import(\"../Tile.js\").LoadFunction}\r\n     */\r\n    this.tileLoadFunction = options.tileLoadFunction;\r\n\r\n    if (options.tileUrlFunction) {\r\n      this.tileUrlFunction = options.tileUrlFunction;\r\n    }\r\n\r\n    /**\r\n     * @protected\r\n     * @type {!Array<string>|null}\r\n     */\r\n    this.urls = null;\r\n\r\n    if (options.urls) {\r\n      this.setUrls(options.urls);\r\n    } else if (options.url) {\r\n      this.setUrl(options.url);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @type {!Object<string, boolean>}\r\n     */\r\n    this.tileLoadingKeys_ = {};\r\n  }\r\n\r\n  /**\r\n   * Return the tile load function of the source.\r\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\r\n   * @api\r\n   */\r\n  getTileLoadFunction() {\r\n    return this.tileLoadFunction;\r\n  }\r\n\r\n  /**\r\n   * Return the tile URL function of the source.\r\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\r\n   * @api\r\n   */\r\n  getTileUrlFunction() {\r\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\r\n      ? this.tileUrlFunction.bind(this)\r\n      : this.tileUrlFunction;\r\n  }\r\n\r\n  /**\r\n   * Return the URLs used for this source.\r\n   * When a tileUrlFunction is used instead of url or urls,\r\n   * null will be returned.\r\n   * @return {!Array<string>|null} URLs.\r\n   * @api\r\n   */\r\n  getUrls() {\r\n    return this.urls;\r\n  }\r\n\r\n  /**\r\n   * Handle tile change events.\r\n   * @param {import(\"../events/Event.js\").default} event Event.\r\n   * @protected\r\n   */\r\n  handleTileChange(event) {\r\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\r\n    const uid = getUid(tile);\r\n    const tileState = tile.getState();\r\n    let type;\r\n    if (tileState == TileState.LOADING) {\r\n      this.tileLoadingKeys_[uid] = true;\r\n      type = TileEventType.TILELOADSTART;\r\n    } else if (uid in this.tileLoadingKeys_) {\r\n      delete this.tileLoadingKeys_[uid];\r\n      type =\r\n        tileState == TileState.ERROR\r\n          ? TileEventType.TILELOADERROR\r\n          : tileState == TileState.LOADED\r\n          ? TileEventType.TILELOADEND\r\n          : undefined;\r\n    }\r\n    if (type != undefined) {\r\n      this.dispatchEvent(new TileSourceEvent(type, tile));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set the tile load function of the source.\r\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\r\n   * @api\r\n   */\r\n  setTileLoadFunction(tileLoadFunction) {\r\n    this.tileCache.clear();\r\n    this.tileLoadFunction = tileLoadFunction;\r\n    this.changed();\r\n  }\r\n\r\n  /**\r\n   * Set the tile URL function of the source.\r\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\r\n   * @param {string} [key] Optional new tile key for the source.\r\n   * @api\r\n   */\r\n  setTileUrlFunction(tileUrlFunction, key) {\r\n    this.tileUrlFunction = tileUrlFunction;\r\n    this.tileCache.pruneExceptNewestZ();\r\n    if (typeof key !== 'undefined') {\r\n      this.setKey(key);\r\n    } else {\r\n      this.changed();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set the URL to use for requests.\r\n   * @param {string} url URL.\r\n   * @api\r\n   */\r\n  setUrl(url) {\r\n    const urls = expandUrl(url);\r\n    this.urls = urls;\r\n    this.setUrls(urls);\r\n  }\r\n\r\n  /**\r\n   * Set the URLs to use for requests.\r\n   * @param {Array<string>} urls URLs.\r\n   * @api\r\n   */\r\n  setUrls(urls) {\r\n    this.urls = urls;\r\n    const key = urls.join('\\n');\r\n    if (this.generateTileUrlFunction_) {\r\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\r\n    } else {\r\n      this.setKey(key);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\r\n   * @return {string|undefined} Tile URL.\r\n   */\r\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\r\n    return undefined;\r\n  }\r\n\r\n  /**\r\n   * Marks a tile coord as being used, without triggering a load.\r\n   * @param {number} z Tile coordinate z.\r\n   * @param {number} x Tile coordinate x.\r\n   * @param {number} y Tile coordinate y.\r\n   */\r\n  useTile(z, x, y) {\r\n    const tileCoordKey = getKeyZXY(z, x, y);\r\n    if (this.tileCache.containsKey(tileCoordKey)) {\r\n      this.tileCache.get(tileCoordKey);\r\n    }\r\n  }\r\n}\r\n\r\nexport default UrlTile;\r\n","/**\r\n * @module ol/source/TileImage\r\n */\r\nimport EventType from '../events/EventType.js';\r\nimport ImageTile from '../ImageTile.js';\r\nimport ReprojTile from '../reproj/Tile.js';\r\nimport TileCache from '../TileCache.js';\r\nimport TileState from '../TileState.js';\r\nimport UrlTile from './UrlTile.js';\r\nimport {equivalent, get as getProjection} from '../proj.js';\r\nimport {getKey, getKeyZXY} from '../tilecoord.js';\r\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\r\nimport {getUid} from '../util.js';\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\r\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\r\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\r\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\r\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\r\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\r\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\r\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\r\n * @property {boolean} [opaque=false] Whether the layer is opaque.\r\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\r\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\r\n * Higher values can increase reprojection performance, but decrease precision.\r\n * @property {import(\"./Source.js\").State} [state] Source state.\r\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\r\n * Default is {@link module:ol/ImageTile~ImageTile}.\r\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\r\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\r\n * ```js\r\n * function(imageTile, src) {\r\n *   imageTile.getImage().src = src;\r\n * };\r\n * ```\r\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\r\n * service advertizes 256px by 256px tiles but actually sends 512px\r\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\r\n * should be set to `2`.\r\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\r\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\r\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\r\n * used instead of defining each one separately in the `urls` option.\r\n * @property {Array<string>} [urls] An array of URL templates.\r\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\r\n * request out-of-bounds tiles from the server. When set to `false`, only one\r\n * world will be rendered. When set to `true`, tiles will be requested for one\r\n * world only, but they will be wrapped horizontally to render multiple worlds.\r\n * @property {number} [transition] Duration of the opacity transition for rendering.\r\n * To disable the opacity transition, pass `transition: 0`.\r\n * @property {string} [key] Optional tile key for proper cache fetching\r\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\r\n * Choose whether to use tiles with a higher or lower zoom level when between integer\r\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Base class for sources providing images divided into a tile grid.\r\n *\r\n * @fires import(\"./Tile.js\").TileSourceEvent\r\n * @api\r\n */\r\nclass TileImage extends UrlTile {\r\n  /**\r\n   * @param {!Options} options Image tile options.\r\n   */\r\n  constructor(options) {\r\n    super({\r\n      attributions: options.attributions,\r\n      cacheSize: options.cacheSize,\r\n      opaque: options.opaque,\r\n      projection: options.projection,\r\n      state: options.state,\r\n      tileGrid: options.tileGrid,\r\n      tileLoadFunction: options.tileLoadFunction\r\n        ? options.tileLoadFunction\r\n        : defaultTileLoadFunction,\r\n      tilePixelRatio: options.tilePixelRatio,\r\n      tileUrlFunction: options.tileUrlFunction,\r\n      url: options.url,\r\n      urls: options.urls,\r\n      wrapX: options.wrapX,\r\n      transition: options.transition,\r\n      interpolate:\r\n        options.interpolate !== undefined ? options.interpolate : true,\r\n      key: options.key,\r\n      attributionsCollapsible: options.attributionsCollapsible,\r\n      zDirection: options.zDirection,\r\n    });\r\n\r\n    /**\r\n     * @protected\r\n     * @type {?string}\r\n     */\r\n    this.crossOrigin =\r\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {typeof ImageTile}\r\n     */\r\n    this.tileClass =\r\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {!Object<string, TileCache>}\r\n     */\r\n    this.tileCacheForProjection = {};\r\n\r\n    /**\r\n     * @protected\r\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\r\n     */\r\n    this.tileGridForProjection = {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.renderReprojectionEdges_ = false;\r\n  }\r\n\r\n  /**\r\n   * @return {boolean} Can expire cache.\r\n   */\r\n  canExpireCache() {\r\n    if (this.tileCache.canExpireCache()) {\r\n      return true;\r\n    } else {\r\n      for (const key in this.tileCacheForProjection) {\r\n        if (this.tileCacheForProjection[key].canExpireCache()) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\r\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\r\n   */\r\n  expireCache(projection, usedTiles) {\r\n    const usedTileCache = this.getTileCacheForProjection(projection);\r\n\r\n    this.tileCache.expireCache(\r\n      this.tileCache == usedTileCache ? usedTiles : {}\r\n    );\r\n    for (const id in this.tileCacheForProjection) {\r\n      const tileCache = this.tileCacheForProjection[id];\r\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\r\n   * @return {number} Gutter.\r\n   */\r\n  getGutterForProjection(projection) {\r\n    if (\r\n      this.getProjection() &&\r\n      projection &&\r\n      !equivalent(this.getProjection(), projection)\r\n    ) {\r\n      return 0;\r\n    } else {\r\n      return this.getGutter();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @return {number} Gutter.\r\n   */\r\n  getGutter() {\r\n    return 0;\r\n  }\r\n\r\n  /**\r\n   * Return the key to be used for all tiles in the source.\r\n   * @return {string} The key for all tiles.\r\n   */\r\n  getKey() {\r\n    let key = super.getKey();\r\n    if (!this.getInterpolate()) {\r\n      key += ':disable-interpolation';\r\n    }\r\n    return key;\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\r\n   * @return {boolean} Opaque.\r\n   */\r\n  getOpaque(projection) {\r\n    if (\r\n      this.getProjection() &&\r\n      projection &&\r\n      !equivalent(this.getProjection(), projection)\r\n    ) {\r\n      return false;\r\n    } else {\r\n      return super.getOpaque(projection);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\r\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\r\n   */\r\n  getTileGridForProjection(projection) {\r\n    const thisProj = this.getProjection();\r\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\r\n      return this.tileGrid;\r\n    } else {\r\n      const projKey = getUid(projection);\r\n      if (!(projKey in this.tileGridForProjection)) {\r\n        this.tileGridForProjection[projKey] =\r\n          getTileGridForProjection(projection);\r\n      }\r\n      return this.tileGridForProjection[projKey];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\r\n   * @return {import(\"../TileCache.js\").default} Tile cache.\r\n   */\r\n  getTileCacheForProjection(projection) {\r\n    const thisProj = this.getProjection();\r\n    if (!thisProj || equivalent(thisProj, projection)) {\r\n      return this.tileCache;\r\n    } else {\r\n      const projKey = getUid(projection);\r\n      if (!(projKey in this.tileCacheForProjection)) {\r\n        this.tileCacheForProjection[projKey] = new TileCache(\r\n          this.tileCache.highWaterMark\r\n        );\r\n      }\r\n      return this.tileCacheForProjection[projKey];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {number} z Tile coordinate z.\r\n   * @param {number} x Tile coordinate x.\r\n   * @param {number} y Tile coordinate y.\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\r\n   * @param {string} key The key set on the tile.\r\n   * @return {!ImageTile} Tile.\r\n   * @private\r\n   */\r\n  createTile_(z, x, y, pixelRatio, projection, key) {\r\n    const tileCoord = [z, x, y];\r\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\r\n      tileCoord,\r\n      projection\r\n    );\r\n    const tileUrl = urlTileCoord\r\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\r\n      : undefined;\r\n    const tile = new this.tileClass(\r\n      tileCoord,\r\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\r\n      tileUrl !== undefined ? tileUrl : '',\r\n      this.crossOrigin,\r\n      this.tileLoadFunction,\r\n      this.tileOptions\r\n    );\r\n    tile.key = key;\r\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\r\n    return tile;\r\n  }\r\n\r\n  /**\r\n   * @param {number} z Tile coordinate z.\r\n   * @param {number} x Tile coordinate x.\r\n   * @param {number} y Tile coordinate y.\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\r\n   * @return {!(ImageTile|ReprojTile)} Tile.\r\n   */\r\n  getTile(z, x, y, pixelRatio, projection) {\r\n    const sourceProjection = this.getProjection();\r\n    if (\r\n      !sourceProjection ||\r\n      !projection ||\r\n      equivalent(sourceProjection, projection)\r\n    ) {\r\n      return this.getTileInternal(\r\n        z,\r\n        x,\r\n        y,\r\n        pixelRatio,\r\n        sourceProjection || projection\r\n      );\r\n    } else {\r\n      const cache = this.getTileCacheForProjection(projection);\r\n      const tileCoord = [z, x, y];\r\n      let tile;\r\n      const tileCoordKey = getKey(tileCoord);\r\n      if (cache.containsKey(tileCoordKey)) {\r\n        tile = cache.get(tileCoordKey);\r\n      }\r\n      const key = this.getKey();\r\n      if (tile && tile.key == key) {\r\n        return tile;\r\n      } else {\r\n        const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\r\n        const targetTileGrid = this.getTileGridForProjection(projection);\r\n        const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\r\n          tileCoord,\r\n          projection\r\n        );\r\n        const newTile = new ReprojTile(\r\n          sourceProjection,\r\n          sourceTileGrid,\r\n          projection,\r\n          targetTileGrid,\r\n          tileCoord,\r\n          wrappedTileCoord,\r\n          this.getTilePixelRatio(pixelRatio),\r\n          this.getGutter(),\r\n          function (z, x, y, pixelRatio) {\r\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\r\n          }.bind(this),\r\n          this.reprojectionErrorThreshold_,\r\n          this.renderReprojectionEdges_,\r\n          this.getInterpolate()\r\n        );\r\n        newTile.key = key;\r\n\r\n        if (tile) {\r\n          newTile.interimTile = tile;\r\n          newTile.refreshInterimChain();\r\n          cache.replace(tileCoordKey, newTile);\r\n        } else {\r\n          cache.set(tileCoordKey, newTile);\r\n        }\r\n        return newTile;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {number} z Tile coordinate z.\r\n   * @param {number} x Tile coordinate x.\r\n   * @param {number} y Tile coordinate y.\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\r\n   * @return {!(ImageTile|ReprojTile)} Tile.\r\n   * @protected\r\n   */\r\n  getTileInternal(z, x, y, pixelRatio, projection) {\r\n    let tile = null;\r\n    const tileCoordKey = getKeyZXY(z, x, y);\r\n    const key = this.getKey();\r\n    if (!this.tileCache.containsKey(tileCoordKey)) {\r\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\r\n      this.tileCache.set(tileCoordKey, tile);\r\n    } else {\r\n      tile = this.tileCache.get(tileCoordKey);\r\n      if (tile.key != key) {\r\n        // The source's params changed. If the tile has an interim tile and if we\r\n        // can use it then we use it. Otherwise we create a new tile.  In both\r\n        // cases we attempt to assign an interim tile to the new tile.\r\n        const interimTile = tile;\r\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\r\n\r\n        //make the new tile the head of the list,\r\n        if (interimTile.getState() == TileState.IDLE) {\r\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\r\n          tile.interimTile = interimTile.interimTile;\r\n        } else {\r\n          tile.interimTile = interimTile;\r\n        }\r\n        tile.refreshInterimChain();\r\n        this.tileCache.replace(tileCoordKey, tile);\r\n      }\r\n    }\r\n    return tile;\r\n  }\r\n\r\n  /**\r\n   * Sets whether to render reprojection edges or not (usually for debugging).\r\n   * @param {boolean} render Render the edges.\r\n   * @api\r\n   */\r\n  setRenderReprojectionEdges(render) {\r\n    if (this.renderReprojectionEdges_ == render) {\r\n      return;\r\n    }\r\n    this.renderReprojectionEdges_ = render;\r\n    for (const id in this.tileCacheForProjection) {\r\n      this.tileCacheForProjection[id].clear();\r\n    }\r\n    this.changed();\r\n  }\r\n\r\n  /**\r\n   * Sets the tile grid to use when reprojecting the tiles to the given\r\n   * projection instead of the default tile grid for the projection.\r\n   *\r\n   * This can be useful when the default tile grid cannot be created\r\n   * (e.g. projection has no extent defined) or\r\n   * for optimization reasons (custom tile size, resolutions, ...).\r\n   *\r\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\r\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\r\n   * @api\r\n   */\r\n  setTileGridForProjection(projection, tilegrid) {\r\n    const proj = getProjection(projection);\r\n    if (proj) {\r\n      const projKey = getUid(proj);\r\n      if (!(projKey in this.tileGridForProjection)) {\r\n        this.tileGridForProjection[projKey] = tilegrid;\r\n      }\r\n    }\r\n  }\r\n\r\n  clear() {\r\n    super.clear();\r\n    for (const id in this.tileCacheForProjection) {\r\n      this.tileCacheForProjection[id].clear();\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * @param {ImageTile} imageTile Image tile.\r\n * @param {string} src Source.\r\n */\r\nfunction defaultTileLoadFunction(imageTile, src) {\r\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\r\n    src;\r\n}\r\n\r\nexport default TileImage;\r\n","/**\r\n * @module ol/source/XYZ\r\n */\r\n\r\nimport TileImage from './TileImage.js';\r\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\r\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\r\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\r\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\r\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\r\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\r\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\r\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\r\n * @property {boolean} [opaque=false] Whether the layer is opaque.\r\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\r\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\r\n * Higher values can increase reprojection performance, but decrease precision.\r\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\r\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\r\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\r\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\r\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\r\n * ```js\r\n * function(imageTile, src) {\r\n *   imageTile.getImage().src = src;\r\n * };\r\n * ```\r\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\r\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\r\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\r\n * should be set to `2`.\r\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\r\n * Not used if `tileGrid` is provided.\r\n * @property {number} [gutter=0] The size in pixels of the gutter around image tiles to ignore.\r\n * This allows artifacts of rendering at tile edges to be ignored.\r\n * Supported images should be wider and taller than the tile size by a value of `2 x gutter`.\r\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\r\n * tile URL given a tile coordinate and the projection.\r\n * Required if `url` or `urls` are not provided.\r\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\r\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\r\n * may be used instead of defining each one separately in the `urls` option.\r\n * @property {Array<string>} [urls] An array of URL templates.\r\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\r\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\r\n * To disable the opacity transition, pass `transition: 0`.\r\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\r\n * Choose whether to use tiles with a higher or lower zoom level when between integer\r\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Layer source for tile data with URLs in a set XYZ format that are\r\n * defined in a URL template. By default, this follows the widely-used\r\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\r\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\r\n * using the `{-y}` placeholder in the URL template, so long as the\r\n * source does not have a custom tile grid. In this case\r\n * a `tileUrlFunction` can be used, such as:\r\n * ```js\r\n *  tileUrlFunction: function(coordinate) {\r\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\r\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\r\n *  }\r\n * ```\r\n * @api\r\n */\r\nclass XYZ extends TileImage {\r\n  /**\r\n   * @param {Options} [options] XYZ options.\r\n   */\r\n  constructor(options) {\r\n    options = options || {};\r\n\r\n    const projection =\r\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\r\n\r\n    const tileGrid =\r\n      options.tileGrid !== undefined\r\n        ? options.tileGrid\r\n        : createXYZ({\r\n            extent: extentFromProjection(projection),\r\n            maxResolution: options.maxResolution,\r\n            maxZoom: options.maxZoom,\r\n            minZoom: options.minZoom,\r\n            tileSize: options.tileSize,\r\n          });\r\n\r\n    super({\r\n      attributions: options.attributions,\r\n      cacheSize: options.cacheSize,\r\n      crossOrigin: options.crossOrigin,\r\n      interpolate: options.interpolate,\r\n      opaque: options.opaque,\r\n      projection: projection,\r\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\r\n      tileGrid: tileGrid,\r\n      tileLoadFunction: options.tileLoadFunction,\r\n      tilePixelRatio: options.tilePixelRatio,\r\n      tileUrlFunction: options.tileUrlFunction,\r\n      url: options.url,\r\n      urls: options.urls,\r\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\r\n      transition: options.transition,\r\n      attributionsCollapsible: options.attributionsCollapsible,\r\n      zDirection: options.zDirection,\r\n    });\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\r\n  }\r\n\r\n  /**\r\n   * @return {number} Gutter.\r\n   */\r\n  getGutter() {\r\n    return this.gutter_;\r\n  }\r\n}\r\n\r\nexport default XYZ;\r\n","/**\r\n * @module ol/source/OSM\r\n */\r\n\r\nimport XYZ from './XYZ.js';\r\n\r\n/**\r\n * The attribution containing a link to the OpenStreetMap Copyright and License\r\n * page.\r\n * @const\r\n * @type {string}\r\n * @api\r\n */\r\nexport const ATTRIBUTION =\r\n  '&#169; ' +\r\n  '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> ' +\r\n  'contributors.';\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\r\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\r\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images.  Note that\r\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\r\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\r\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\r\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\r\n * @property {number} [maxZoom=19] Max zoom.\r\n * @property {boolean} [opaque=true] Whether the layer is opaque.\r\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\r\n * Higher values can increase reprojection performance, but decrease precision.\r\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\r\n * ```js\r\n * function(imageTile, src) {\r\n *   imageTile.getImage().src = src;\r\n * };\r\n * ```\r\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\r\n * To disable the opacity transition, pass `transition: 0`.\r\n * @property {string} [url='https://tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\r\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\r\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\r\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\r\n * Choose whether to use tiles with a higher or lower zoom level when between integer\r\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Layer source for the OpenStreetMap tile server.\r\n * @api\r\n */\r\nclass OSM extends XYZ {\r\n  /**\r\n   * @param {Options} [options] Open Street Map options.\r\n   */\r\n  constructor(options) {\r\n    options = options || {};\r\n\r\n    let attributions;\r\n    if (options.attributions !== undefined) {\r\n      attributions = options.attributions;\r\n    } else {\r\n      attributions = [ATTRIBUTION];\r\n    }\r\n\r\n    const crossOrigin =\r\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\r\n\r\n    const url =\r\n      options.url !== undefined\r\n        ? options.url\r\n        : 'https://tile.openstreetmap.org/{z}/{x}/{y}.png';\r\n\r\n    super({\r\n      attributions: attributions,\r\n      attributionsCollapsible: false,\r\n      cacheSize: options.cacheSize,\r\n      crossOrigin: crossOrigin,\r\n      interpolate: options.interpolate,\r\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\r\n      opaque: options.opaque !== undefined ? options.opaque : true,\r\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\r\n      tileLoadFunction: options.tileLoadFunction,\r\n      transition: options.transition,\r\n      url: url,\r\n      wrapX: options.wrapX,\r\n      zDirection: options.zDirection,\r\n    });\r\n  }\r\n}\r\n\r\nexport default OSM;\r\n","/**\r\n * @module ol/control/ZoomSlider\r\n */\r\n\r\nimport Control from './Control.js';\r\nimport EventType from '../events/EventType.js';\r\nimport PointerEventType from '../pointer/EventType.js';\r\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\r\nimport {clamp} from '../math.js';\r\nimport {easeOut} from '../easing.js';\r\nimport {listen, unlistenByKey} from '../events.js';\r\nimport {stopPropagation} from '../events/Event.js';\r\n\r\n/**\r\n * The enum for available directions.\r\n *\r\n * @enum {number}\r\n */\r\nconst Direction = {\r\n  VERTICAL: 0,\r\n  HORIZONTAL: 1,\r\n};\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {string} [className='ol-zoomslider'] CSS class name.\r\n * @property {number} [duration=200] Animation duration in milliseconds.\r\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control\r\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * A slider type of control for zooming.\r\n *\r\n * Example:\r\n *\r\n *     map.addControl(new ZoomSlider());\r\n *\r\n * @api\r\n */\r\nclass ZoomSlider extends Control {\r\n  /**\r\n   * @param {Options} [options] Zoom slider options.\r\n   */\r\n  constructor(options) {\r\n    options = options ? options : {};\r\n\r\n    super({\r\n      element: document.createElement('div'),\r\n      render: options.render,\r\n    });\r\n\r\n    /**\r\n     * @type {!Array<import(\"../events.js\").EventsKey>}\r\n     * @private\r\n     */\r\n    this.dragListenerKeys_ = [];\r\n\r\n    /**\r\n     * Will hold the current resolution of the view.\r\n     *\r\n     * @type {number|undefined}\r\n     * @private\r\n     */\r\n    this.currentResolution_ = undefined;\r\n\r\n    /**\r\n     * The direction of the slider. Will be determined from actual display of the\r\n     * container and defaults to Direction.VERTICAL.\r\n     *\r\n     * @type {Direction}\r\n     * @private\r\n     */\r\n    this.direction_ = Direction.VERTICAL;\r\n\r\n    /**\r\n     * @type {boolean}\r\n     * @private\r\n     */\r\n    this.dragging_;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.heightLimit_ = 0;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.widthLimit_ = 0;\r\n\r\n    /**\r\n     * @type {number|undefined}\r\n     * @private\r\n     */\r\n    this.startX_;\r\n\r\n    /**\r\n     * @type {number|undefined}\r\n     * @private\r\n     */\r\n    this.startY_;\r\n\r\n    /**\r\n     * The calculated thumb size (border box plus margins).  Set when initSlider_\r\n     * is called.\r\n     * @type {import(\"../size.js\").Size}\r\n     * @private\r\n     */\r\n    this.thumbSize_ = null;\r\n\r\n    /**\r\n     * Whether the slider is initialized.\r\n     * @type {boolean}\r\n     * @private\r\n     */\r\n    this.sliderInitialized_ = false;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\r\n\r\n    const className =\r\n      options.className !== undefined ? options.className : 'ol-zoomslider';\r\n    const thumbElement = document.createElement('button');\r\n    thumbElement.setAttribute('type', 'button');\r\n    thumbElement.className = className + '-thumb ' + CLASS_UNSELECTABLE;\r\n    const containerElement = this.element;\r\n    containerElement.className =\r\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\r\n    containerElement.appendChild(thumbElement);\r\n\r\n    containerElement.addEventListener(\r\n      PointerEventType.POINTERDOWN,\r\n      this.handleDraggerStart_.bind(this),\r\n      false\r\n    );\r\n    containerElement.addEventListener(\r\n      PointerEventType.POINTERMOVE,\r\n      this.handleDraggerDrag_.bind(this),\r\n      false\r\n    );\r\n    containerElement.addEventListener(\r\n      PointerEventType.POINTERUP,\r\n      this.handleDraggerEnd_.bind(this),\r\n      false\r\n    );\r\n\r\n    containerElement.addEventListener(\r\n      EventType.CLICK,\r\n      this.handleContainerClick_.bind(this),\r\n      false\r\n    );\r\n    thumbElement.addEventListener(EventType.CLICK, stopPropagation, false);\r\n  }\r\n\r\n  /**\r\n   * Remove the control from its current map and attach it to the new map.\r\n   * Pass `null` to just remove the control from the current map.\r\n   * Subclasses may set up event handlers to get notified about changes to\r\n   * the map here.\r\n   * @param {import(\"../Map.js\").default|null} map Map.\r\n   * @api\r\n   */\r\n  setMap(map) {\r\n    super.setMap(map);\r\n    if (map) {\r\n      map.render();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Initializes the slider element. This will determine and set this controls\r\n   * direction_ and also constrain the dragging of the thumb to always be within\r\n   * the bounds of the container.\r\n   *\r\n   * @return {boolean} Initialization successful\r\n   * @private\r\n   */\r\n  initSlider_() {\r\n    const container = this.element;\r\n    let containerWidth = container.offsetWidth;\r\n    let containerHeight = container.offsetHeight;\r\n    if (containerWidth === 0 && containerHeight === 0) {\r\n      return (this.sliderInitialized_ = false);\r\n    }\r\n\r\n    const containerStyle = getComputedStyle(container);\r\n    containerWidth -=\r\n      parseFloat(containerStyle['paddingRight']) +\r\n      parseFloat(containerStyle['paddingLeft']);\r\n    containerHeight -=\r\n      parseFloat(containerStyle['paddingTop']) +\r\n      parseFloat(containerStyle['paddingBottom']);\r\n    const thumb = /** @type {HTMLElement} */ (container.firstElementChild);\r\n    const thumbStyle = getComputedStyle(thumb);\r\n    const thumbWidth =\r\n      thumb.offsetWidth +\r\n      parseFloat(thumbStyle['marginRight']) +\r\n      parseFloat(thumbStyle['marginLeft']);\r\n    const thumbHeight =\r\n      thumb.offsetHeight +\r\n      parseFloat(thumbStyle['marginTop']) +\r\n      parseFloat(thumbStyle['marginBottom']);\r\n    this.thumbSize_ = [thumbWidth, thumbHeight];\r\n\r\n    if (containerWidth > containerHeight) {\r\n      this.direction_ = Direction.HORIZONTAL;\r\n      this.widthLimit_ = containerWidth - thumbWidth;\r\n    } else {\r\n      this.direction_ = Direction.VERTICAL;\r\n      this.heightLimit_ = containerHeight - thumbHeight;\r\n    }\r\n    return (this.sliderInitialized_ = true);\r\n  }\r\n\r\n  /**\r\n   * @param {PointerEvent} event The browser event to handle.\r\n   * @private\r\n   */\r\n  handleContainerClick_(event) {\r\n    const view = this.getMap().getView();\r\n\r\n    const relativePosition = this.getRelativePosition_(\r\n      event.offsetX - this.thumbSize_[0] / 2,\r\n      event.offsetY - this.thumbSize_[1] / 2\r\n    );\r\n\r\n    const resolution = this.getResolutionForPosition_(relativePosition);\r\n    const zoom = view.getConstrainedZoom(view.getZoomForResolution(resolution));\r\n\r\n    view.animateInternal({\r\n      zoom: zoom,\r\n      duration: this.duration_,\r\n      easing: easeOut,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Handle dragger start events.\r\n   * @param {PointerEvent} event The drag event.\r\n   * @private\r\n   */\r\n  handleDraggerStart_(event) {\r\n    if (!this.dragging_ && event.target === this.element.firstElementChild) {\r\n      const element = /** @type {HTMLElement} */ (\r\n        this.element.firstElementChild\r\n      );\r\n      this.getMap().getView().beginInteraction();\r\n      this.startX_ = event.clientX - parseFloat(element.style.left);\r\n      this.startY_ = event.clientY - parseFloat(element.style.top);\r\n      this.dragging_ = true;\r\n\r\n      if (this.dragListenerKeys_.length === 0) {\r\n        const drag = this.handleDraggerDrag_;\r\n        const end = this.handleDraggerEnd_;\r\n        const doc = this.getMap().getOwnerDocument();\r\n        this.dragListenerKeys_.push(\r\n          listen(doc, PointerEventType.POINTERMOVE, drag, this),\r\n          listen(doc, PointerEventType.POINTERUP, end, this)\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle dragger drag events.\r\n   *\r\n   * @param {PointerEvent} event The drag event.\r\n   * @private\r\n   */\r\n  handleDraggerDrag_(event) {\r\n    if (this.dragging_) {\r\n      const deltaX = event.clientX - this.startX_;\r\n      const deltaY = event.clientY - this.startY_;\r\n      const relativePosition = this.getRelativePosition_(deltaX, deltaY);\r\n      this.currentResolution_ =\r\n        this.getResolutionForPosition_(relativePosition);\r\n      this.getMap().getView().setResolution(this.currentResolution_);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle dragger end events.\r\n   * @param {PointerEvent} event The drag event.\r\n   * @private\r\n   */\r\n  handleDraggerEnd_(event) {\r\n    if (this.dragging_) {\r\n      const view = this.getMap().getView();\r\n      view.endInteraction();\r\n\r\n      this.dragging_ = false;\r\n      this.startX_ = undefined;\r\n      this.startY_ = undefined;\r\n      this.dragListenerKeys_.forEach(unlistenByKey);\r\n      this.dragListenerKeys_.length = 0;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Positions the thumb inside its container according to the given resolution.\r\n   *\r\n   * @param {number} res The res.\r\n   * @private\r\n   */\r\n  setThumbPosition_(res) {\r\n    const position = this.getPositionForResolution_(res);\r\n    const thumb = /** @type {HTMLElement} */ (this.element.firstElementChild);\r\n\r\n    if (this.direction_ == Direction.HORIZONTAL) {\r\n      thumb.style.left = this.widthLimit_ * position + 'px';\r\n    } else {\r\n      thumb.style.top = this.heightLimit_ * position + 'px';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Calculates the relative position of the thumb given x and y offsets.  The\r\n   * relative position scales from 0 to 1.  The x and y offsets are assumed to be\r\n   * in pixel units within the dragger limits.\r\n   *\r\n   * @param {number} x Pixel position relative to the left of the slider.\r\n   * @param {number} y Pixel position relative to the top of the slider.\r\n   * @return {number} The relative position of the thumb.\r\n   * @private\r\n   */\r\n  getRelativePosition_(x, y) {\r\n    let amount;\r\n    if (this.direction_ === Direction.HORIZONTAL) {\r\n      amount = x / this.widthLimit_;\r\n    } else {\r\n      amount = y / this.heightLimit_;\r\n    }\r\n    return clamp(amount, 0, 1);\r\n  }\r\n\r\n  /**\r\n   * Calculates the corresponding resolution of the thumb given its relative\r\n   * position (where 0 is the minimum and 1 is the maximum).\r\n   *\r\n   * @param {number} position The relative position of the thumb.\r\n   * @return {number} The corresponding resolution.\r\n   * @private\r\n   */\r\n  getResolutionForPosition_(position) {\r\n    const fn = this.getMap().getView().getResolutionForValueFunction();\r\n    return fn(1 - position);\r\n  }\r\n\r\n  /**\r\n   * Determines the relative position of the slider for the given resolution.  A\r\n   * relative position of 0 corresponds to the minimum view resolution.  A\r\n   * relative position of 1 corresponds to the maximum view resolution.\r\n   *\r\n   * @param {number} res The resolution.\r\n   * @return {number} The relative position value (between 0 and 1).\r\n   * @private\r\n   */\r\n  getPositionForResolution_(res) {\r\n    const fn = this.getMap().getView().getValueForResolutionFunction();\r\n    return clamp(1 - fn(res), 0, 1);\r\n  }\r\n\r\n  /**\r\n   * Update the zoomslider element.\r\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\r\n   * @override\r\n   */\r\n  render(mapEvent) {\r\n    if (!mapEvent.frameState) {\r\n      return;\r\n    }\r\n    if (!this.sliderInitialized_ && !this.initSlider_()) {\r\n      return;\r\n    }\r\n    const res = mapEvent.frameState.viewState.resolution;\r\n    this.currentResolution_ = res;\r\n    this.setThumbPosition_(res);\r\n  }\r\n}\r\n\r\nexport default ZoomSlider;\r\n","import Feature from \"ol/Feature\";\r\nimport Map from \"ol/Map\";\r\nimport VectorLayer from \"ol/layer/Vector\";\r\nimport VectorSource from \"ol/source/Vector\";\r\nimport View from \"ol/View\";\r\nimport { Circle as CircleStyle, Fill, RegularShape, Stroke, Style } from \"ol/style\";\r\nimport { LineString, Point } from \"ol/geom\";\r\nimport { getVectorContext } from \"ol/render\";\r\nimport TileLayer from \"ol/layer/Tile\";\r\nimport OSM from \"ol/source/OSM\";\r\nimport { transform } from \"ol/proj\";\r\nimport ZoomSlider from 'ol/control/ZoomSlider';\r\nimport {defaults as defaultControls} from 'ol/control'\r\n\r\nvar blueLightTowerCount = 4;\r\nconst blueLightTower = new Array(blueLightTowerCount);\r\nvar blueLightTowerPositionX = new Array(blueLightTowerCount);\r\nvar blueLightTowerPositionY = new Array(blueLightTowerCount);\r\n\r\nfor(let i = 0; i <= blueLightTowerCount; i++){\r\n    blueLightTowerPositionX[i] = 29.18818 + Math.random() * 0.0001 * i;\r\n    blueLightTowerPositionY[i] = -81.04965 - Math.random() * 0.0001 * i;\r\n}\r\nfor (let i = 0; i < blueLightTowerCount; ++i) {\r\n  blueLightTower[i] = new Feature({\r\n    geometry: new Point(transform([blueLightTowerPositionY[i], blueLightTowerPositionX[i]], \"EPSG:4326\", \"EPSG:3857\")),\r\n    labelPoint: new Point(transform([blueLightTowerPositionY[i], blueLightTowerPositionX[i]], \"EPSG:4326\", \"EPSG:3857\")),\r\n    size: 15,\r\n    name: 'Blue Light Tower'+ i,\r\n  });\r\n};\r\nconst BlueLightstyle = {\"15\": new Style({\r\n    image: new RegularShape({\r\n      points: 5,\r\n      radius: 7,\r\n      radius2: 3,\r\n      angle: 0,\r\n      fill: new Fill({ color: 'blue' }),\r\n      stroke: new Stroke({ color: 'black', width: 1 })\r\n    })\r\n  }),\r\n};\r\nconst BlueLightvectorSource = new VectorSource({\r\n  features: blueLightTower,\r\n  wrapX: false\r\n});\r\nconst BlueLightvector = new VectorLayer({\r\n  source: BlueLightvectorSource,\r\n  style: function (blueLightTower) {\r\n    return BlueLightstyle[blueLightTower.get(\"size\")];\r\n  }\r\n});\r\n\r\nconst mapView = new View({\r\n  center: transform([-81.04934, 29.18818], \"EPSG:4326\", \"EPSG:3857\"),\r\n  zoom: 18,\r\n  extent: [-9024000, 3398000,  -9021000, 3401000 ],\r\n});\r\nconst map = new Map({\r\n  target: 'map',\r\n  layers: [new TileLayer({source: new OSM() }), BlueLightvector],\r\n  view: mapView,\r\n  controls: defaultControls().extend([new ZoomSlider()]),\r\n});\r\ndocument.getElementById('ToggleBlueLights').addEventListener('click', function () {\r\n BlueLightvector.setVisible(!BlueLightvector.getVisible());\r\n});\r\nmap.render();\r\n"],"names":["relList","link","processPreload","mutations","mutation","node","getFetchOpts","script","fetchOpts","BaseEvent","type","stopPropagation","evt","ObjectEventType","Disposable","Disposable$1","numberSafeCompareFunction","a","b","linearFindNearest","arr","target","direction","n","i","reverseSubArray","begin","end","tmp","extend","data","extension","length","equals","arr1","arr2","len1","isSorted","func","strict","compare","currentVal","index","res","TRUE","FALSE","VOID","memoizeOne","fn","called","lastResult","lastArgs","lastThis","nextArgs","arrayEquals","clear","object","property","isEmpty","Target","listener","listeners","listenersForType","event","isString","Event","dispatching","pendingRemovals","propagate","ii","pr","EventTarget","EventType$1","listen","thisArg","once","originalListener","eventsKey","listenOnce","unlistenByKey","key","Observable","EventType","len","keys","unByKey","Observable$1","abstract","uidCounter_","getUid","obj","ObjectEvent","oldValue","BaseObject","values","value","eventType","silent","source","BaseObject$1","messages","AssertionError","code","message","AssertionError$1","assert","assertion","errorCode","Feature","geometryOrProperties","geometry","properties","clone","style","createStyleFunction","id","name","styles","Feature$1","CollectionEventType","Property","CollectionEvent","element","Collection","array","options","f","elem","prev","except","Collection$1","ua","FIREFOX","SAFARI","WEBKIT","MAC","DEVICE_PIXEL_RATIO","WORKER_OFFSCREEN_CANVAS","IMAGE_DECODE","PASSIVE_EVENT_LISTENERS","passive","create","set","transform","c","d","e","setFromArray","transform1","transform2","apply","coordinate","x","y","makeScale","compose","dx1","dy1","sx","sy","angle","dx2","dy2","sin","cos","makeInverse","det","determinant","mat","transformStringDiv","toString","transformString","Relationship","boundingExtent","coordinates","extent","createEmpty","extendCoordinate","buffer","dest","closestSquaredDistanceXY","dx","dy","containsCoordinate","containsXY","containsExtent","extent1","extent2","coordinateRelationship","minX","minY","maxX","maxY","relationship","createOrUpdate","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromFlatCoordinates","flatCoordinates","offset","stride","extendFlatCoordinates","extendXY","forEachCorner","callback","val","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","getWidth","getHeight","getCenter","getCorner","corner","getForViewAndSize","center","resolution","rotation","size","x0","y0","x1","y1","x2","y2","x3","y3","getRotatedViewport","cosRotation","sinRotation","xCos","xSin","yCos","ySin","getIntersection","intersection","intersects","returnOrUpdate","intersectsSegment","start","startRel","endRel","startX","startY","endX","endY","slope","wrapX","projection","projectionExtent","worldWidth","wrapAndSliceX","clamp","min","max","squaredSegmentDistance","t","squaredDistance","solveLinearSystem","maxRow","maxEl","r","absValue","j","coef","k","l","m","toRadians","angleInDegrees","modulo","lerp","toFixed","decimals","factor","floor","ceil","HEX_COLOR_RE_","NAMED_COLOR_RE_","asString","color","fromNamed","el","rgb","fromString","cache","cacheSize","s","fromStringInternal_","asArray","g","hasAlpha","normalize","IconImageCache","iconImage","src","crossOrigin","getKey","maxCacheSize","colorString","shared","LayerProperty","BaseLayer","managed","state","zIndex","states","background","maxResolution","minResolution","maxZoom","minZoom","opacity","visible","zindex","BaseLayer$1","RenderEventType","Layer","baseOptions","pixel","resolve","frameState","layerRenderer","map","layerStatesArray","layerState","arrayLayerState","inView","viewState","zoom","Layer$1","add","delta","coordinate1","coordinate2","rotate","cosAngle","sinAngle","scale","worldsAway","getWorldsAway","sourceExtentWidth","MapRenderer","coordinateToPixelTransform","pixelToCoordinateTransform","composeTransform","hitTolerance","checkWrapped","layerFilter","thisArg2","result","forEachFeatureAtCoordinate","feature","layer","translatedCoordinate","offsets","layerStates","numLayers","matches","tmpCoord","order","iconImageCache","expireIconCache","MapRenderer$1","RenderEvent","inversePixelTransform","context","RenderEvent$1","CLASS_HIDDEN","CLASS_UNSELECTABLE","CLASS_CONTROL","CLASS_COLLAPSED","fontRegEx","fontRegExMatchIndex","getFontParameters","fontSpec","match","createCanvasContext2D","width","height","canvasPool","settings","canvas","releaseCanvas","replaceNode","newNode","oldNode","parent","removeNode","removeChildren","replaceChildren","children","oldChildren","oldChild","newChild","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineDashOffset","defaultLineJoin","defaultMiterLimit","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","defaultLineWidth","checkedFonts","measureContext","measureFont","textHeights","registerFont","referenceFonts","text","interval","referenceWidth","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","measureTextWidth","check","done","fonts","font","families","family","measureTextHeight","measureElement","metrics","measureText","measureAndCacheTextWidth","curr","getTextDimensions","baseStyle","chunks","widths","heights","lineWidths","lineWidth","lineHeight","currentWidth","currentHeight","drawImageOrLabel","labelOrImage","originX","originY","w","h","executeLabelInstructions","label","contextInstructions","CompositeMapRenderer","container","declutterLayers","previousElement","sourceState","CompositeMapRenderer$1","GroupEvent","LayerGroup","layers","layersArray","listenerKeys","collectionEvent","collection","currentLayers","pos","ownLayerState","defaultZIndex","LayerGroup$1","MapEvent","MapEvent$1","MapBrowserEvent","originalEvent","dragging","activePointers","MapBrowserEvent$1","MapBrowserEventType","MapBrowserEventHandler","moveTolerance","PointerEventType","pointerEvent","newEvent","pointerId","doc","MapBrowserEventHandler$1","MapEventType","MapProperty","DROP","PriorityQueue","priorityFunction","keyFunction","elements","priorities","elementKey","priority","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","PriorityQueue$1","TileState","TileQueue","tilePriorityFunction","tileChangeCallback","added","tile","tileKey","maxTotalLoading","maxNewLoads","newLoads","TileQueue$1","getTilePriority","tileSourceKey","tileCenter","tileResolution","deltaX","deltaY","ViewHint","ViewProperty","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","METERS_PER_UNIT","Projection","global","tileGrid","worldExtent","Projection$1","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","MAX_SAFE_Y","EPSG3857Projection","point","PROJECTIONS","fromEPSG4326","input","output","dimension","toEPSG4326","EPSG4326Projection","axisOrientation","get","transforms","destination","transformFn","sourceCode","destinationCode","DEFAULT_RADIUS","getDistance","c1","c2","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","showCoordinateWarning","disableCoordinateWarning","disable","cloneTransform","identityTransform","addProjection","addProj","addTransformFunc","addProjections","projections","projectionLike","getProj","getPointResolution","units","pointResolution","getter","metersPerUnit","projUnits","getTransformFromProjections","vertices","addEquivalentProjections","addEquivalentTransforms","projections1","projections2","forwardTransform","inverseTransform","projection1","projection2","createProjection","defaultCode","equivalent","equalUnits","sourceProjection","destinationProjection","transformFunc","getTransformFunc","getTransform","toUserCoordinate","fromUserCoordinate","destProjection","toUserExtent","fromUserExtent","addCommon","EPSG3857_PROJECTIONS","EPSG4326_PROJECTIONS","createExtent","onlyCenter","smooth","isMoving","centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","none","getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","getSmoothClampedResolution","createSnapToResolutions","resolutions","cappedMaxRes","capped","z","createSnapToPower","power","tolerance","minZoomLevel","cappedZoomLevel","zoomLevel","newResolution","createMinMaxResolution","createSnapToN","theta","createSnapToZero","easeIn","easeOut","inAndOut","linear","transform2D","anchor","anchorX","anchorY","translate","tmpTransform","createTransform","Geometry","revision","squaredTolerance","closestPoint","minSquaredDistance","coord","sourceProj","getProjection","inCoordinates","outCoordinates","pixelExtent","projectedExtent","Geometry$1","SimpleGeometry","simplifiedGeometry","layout","getStrideForLayout","nesting","getLayoutForStride","transformGeom2D","simpleGeometry","SimpleGeometry$1","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","squaredDx","arrayMaxSquaredDelta","ends","assignClosestPoint","maxDelta","isRing","tmpPoint","assignClosestArrayPoint","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","jj","douglasPeucker","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","snap","quantize","quantizeArray","simplifiedEnds","inflateCoordinates","inflateCoordinatesArray","inflateMultiCoordinatesArray","endss","coordinatesss","linearRing","twiceArea","linearRings","LinearRing","linearRingArea","LinearRing$1","Point","Point$1","linearRingContainsExtent","linearRingContainsXY","wn","linearRingsContainsXY","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","forEach","ret","intersectsLineString","coordinatesExtent","forEachSegment","point1","point2","intersectsLinearRing","intersectsLinearRingArray","linearRingIsClockwise","edge","linearRingsAreOriented","right","isClockwise","orientLinearRings","reverseCoordinates","Polygon","polygon","linearRingsArea","flatCenter","fromExtent","DEFAULT_MIN_ZOOM","View","resolutionConstraintInfo","createResolutionConstraint","centerConstraint","createCenterConstraint","resolutionConstraint","rotationConstraint","createRotationConstraint","padding","oldPadding","newPadding","offsetX","offsetY","newOptions","var_args","args","animationCount","animationCallback","series","animation","isNoopAnimation","now","more","seriesComplete","elapsed","fraction","progress","constrainedResolution","constrainedRotation","currentCenter","rotateCoordinate","addCoordinate","currentResolution","hints","enabled","logPower","reducedSize","calculateCenterOn","zoomFactor","nearest","baseLevel","geometryOrExtent","polygonFromExtent","coords","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","rotatedExtent","centerRot","centerX","centerY","position","shiftedCenter","deltaCoordinates","newRotation","hint","doNotCancelAnims","forceMoving","newCenter","duration","resolutionDirection","targetCenter","targetResolution","targetZoom","targetRes","returnValue","centerNone","multiWorld","projExtent","constrainOnlyCenter","defaultMaxResolution","defaultMinResolution","constrainRotation","rotationNone","coordinatesEqual","View$1","Control","mapEvent","Control$1","Attribution","className","tipLabel","expandClassName","collapseLabel","collapseClassName","activeLabel","cssClasses","lookup","visibleAttributions","collapsible","attributionGetter","attributions","collapsed","Attribution$1","Rotate","compassClassName","button","view","contains","Rotate$1","Zoom","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","outElement","currentZoom","newZoom","Zoom$1","defaults","controls","InteractionProperty","Interaction","mapBrowserEvent","active","pan","zoomByDelta","Interaction$1","DoubleClickZoom","stopEvent","browserEvent","DoubleClickZoom$1","PointerInteraction","handledUp","handled","centroid","pointerEvents","clientX","clientY","PointerInteraction$1","all","conditions","pass","altShiftKeysOnly","focus","targetElement","activeElement","focusWithTabindex","always","mouseActionButton","noModifierKeys","shiftKeyOnly","targetNotEditable","tagName","mouseOnly","primaryAction","DragPan","condition","targetPointers","centroidFromPointers","scaleCoordinate","distance","centerpx","DragPan$1","DragRotate","DragRotate$1","RenderBox","startPixel","endPixel","px","RenderBox$1","DragBoxEventType","DragBoxEvent","DragBox","completeBox","DragBox$1","DragZoom","DragZoom$1","KeyCode","KeyboardPan","keyEvent","keyCode","mapUnitsDelta","KeyboardPan$1","KeyboardZoom","charCode","KeyboardZoom$1","Kinetic","decay","minVelocity","delay","lastIndex","firstIndex","Kinetic$1","MouseWheelZoom","wheelEvent","timeLeft","useAnchor","MouseWheelZoom$1","PinchRotate","pointerOptions","rotationDelta","touch0","touch1","viewportPosition","PinchRotate$1","PinchZoom","scaleDelta","PinchZoom$1","interactions","kinetic","hasArea","toSize","removeLayerMapProperty","setLayerMapProperty","Map","optionsInternal","createOptionsInternal","defaultControls","defaultInteractions","viewOptions","control","interaction","overlay","features","addLayersFrom","layerGroup","eventPosition","applyTransform","group","renderer","viewCoordinate","rootNode","interactionsArray","tileQueue","lowOnFrameBudget","postRenderFunctions","defaultView","keyboardEventTarget","time","previousFrameState","viewHints","oldLayerGroup","computedStyle","overlays","Map$1","quickselect","left","quickselectStep","defaultCompare","sd","newLeft","newRight","swap","RBush","maxEntries","bbox","toBBox","nodesToSearch","child","childBBox","tmpNode","item","createNode","equalsFn","path","indexes","goingUp","findItem","items","N","M","calcBBox","N2","N1","multiSelect","right2","right3","level","minArea","minEnlargement","targetNode","bboxArea","enlargement","enlargedArea","isNode","insertPath","splitIndex","minOverlap","bbox1","distBBox","bbox2","overlap","intersectionArea","compareMinX","compareNodeMinX","compareMinY","compareNodeMinY","xMargin","yMargin","leftBBox","rightBBox","margin","bboxMargin","siblings","p","destNode","mid","ImageState","ImageStyle","pixelRatio","displacement","rotateWithView","ImageStyle$1","asColorLike","RegularShape","fill","image","renderOptions","stroke","lineJoin","strokeWidth","miterLimit","r1","r2","points","alpha","miterRatio","bevelAdd","aa","bb","dd","innerMiterRatio","innerLength","lineDash","lineDashOffset","strokeStyle","maxRadius","radius2","startAngle","step","angle0","radiusC","RegularShape$1","CircleStyle","Circle","Fill","Fill$1","Stroke","lineCap","Stroke$1","Style","defaultGeometryFunction","toFunction","styleFunction","defaultStyles","createDefaultStyle","Style$1","listenImage","loadHandler","errorHandler","img","listening","decoding","loaded","error","taintedTestContext","IconImage","imageState","ctx","Icon","getIconImage","iconImageSize","Icon$1","DEFAULT_FILL_COLOR","Text","overflow","maxAngle","placement","textAlign","justify","textBaseline","Text$1","toStyle","flatStyle","getFill","getStroke","getText","getImage","prefix","iconSrc","iconImg","shapePoints","circleRadius","BaseVectorLayer","renderOrder","styleLike","toStyleFunction","BaseVectorLayer$1","Instruction","fillInstruction","strokeInstruction","beginPathInstruction","closePathInstruction","CanvasInstruction","VectorContext","hitDetectionRenderer","circleGeometry","geometryCollectionGeometry","lineStringGeometry","multiLineStringGeometry","multiPointGeometry","multiPolygonGeometry","pointGeometry","polygonGeometry","fillStyle","imageStyle","declutterImageWithText","textStyle","VectorContext$1","CanvasBuilder","dashArray","dash","myEnd","closed","skipFirst","lastXCoord","lastYCoord","nextCoord","skipped","lastRel","nextRel","builderEnds","builderEnd","builderBegin","builderEndss","myEnds","hitDetectionInstructions","instruction","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","createFill","applyStroke","endGeometryInstruction","Builder","CanvasImageBuilder","myBegin","sharedData","origin","ImageBuilder","CanvasLineStringBuilder","moveToLineToInstruction","LineStringBuilder","CanvasPolygonBuilder","numEnds","circleInstruction","PolygonBuilder","matchingChunk","chunkStart","chunkEnd","chunkM","acos","m12","m23","x12","y12","x23","y23","TEXT_ALIGN","CanvasTextBuilder","instructions","fillState","strokeState","textState","geometryType","flatOffset","flatEnd","o","oo","range","geometryWidths","interiorPoints","beg","keep","p0","p1","p2","p3","strokeKey","textKey","fillKey","baseline","textFillStyle","textStrokeStyle","textScale","textOffsetX","textOffsetY","textRotateWithView","textRotation","BATCH_CONSTRUCTORS","TextBuilder","BuilderGroup","builderInstructions","zKey","builders","builderKey","builderInstruction","builderType","zIndexKey","replays","replay","Constructor","CanvasBuilderGroup","LayerRenderer","tiles","tileRange","LayerRenderer$1","pixelContext","createPixelContext","CanvasLayerRenderer","col","row","backgroundColor","layerClassName","topLeft","topRight","bottomRight","bottomLeft","inverted","CanvasLayerRenderer$1","drawTextOnPath","startM","segmentM","advance","interpolate","beginX","beginY","startOffset","startLength","endM","reverse","flat","PI","singleSegment","previousAngle","iStart","charLength","chars","lineStringLength","tmpExtent","p4","getDeclutterBox","replayImageOrLabelArgs","rtlRegEx","horizontalTextAlign","align","createTextChunks","acc","line","Executor","overlaps","textIsArray","renderWidth","leftRight","strokeInstructions","fillInstructions","lineOffset","widthHeightIndex","lineWidthIndex","previousFont","fillStrokeArgs","sheetWidth","sheetHeight","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","contextScale","imageOrLabel","dimensions","box","strokePadding","repeatSize","featureCallback","hitExtent","declutterTree","pixelCoordinates","transformSetFromArray","prevX","prevY","roundX","roundY","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","currentGeometry","declutterMode","labelWithAnchor","backgroundFill","backgroundStroke","widthIndex","imageArgs","imageDeclutterBox","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","parts","drawChars","cc","part","Executor$1","ORDER","ExecutorGroup","allInstructions","renderBuffer","flatClipCoords","executors","instructionByZindex","candidates","declutteredFeatures","contextSize","newContext","getPixelIndexArray","imageData","idx","zs","executor","builderTypes","circlePixelIndexArrayCache","maxDistanceSq","distances","distanceSq","pixelIndex","ExecutorGroup$1","CanvasImmediateRenderer","userTransform","localTransform","close","geometries","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imageSize","imagePixelRatio","imageAnchor","imageOrigin","imageScale","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","CanvasImmediateRenderer$1","HIT_DETECT_RESOLUTION","createHitDetectionImageData","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","originalStyle","imgSize","imgContext","byGeometryType","zIndexKeys","geomAndStyle","kk","hitDetect","resultFeatures","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","renderPointGeometry","renderLineStringGeometry","renderPolygonGeometry","renderMultiPointGeometry","renderMultiLineStringGeometry","renderMultiPolygonGeometry","renderGeometryCollectionGeometry","renderCircleGeometry","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","builderGroup","declutterBuilderGroup","circleReplay","textReplay","renderFeature","replayGroup","loading","renderFeatureInternal","renderGeometry","geometryRenderer","lineStringReplay","polygonReplay","imageBuilderGroup","imageReplay","textBuilderGroup","CanvasVectorLayerRenderer","vectorLayer","executorGroup","vectorSource","endWorld","world","compositionContext","canvasTransform","transformToString","declutterExecutorGroup","clipped","render","layerExtent","intersectsExtent","executorGroups","animating","interacting","updateWhileAnimating","updateWhileInteracting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","defaultRenderOrder","renderedExtent","loadExtents","gutter","wrapCoordinateX","loadExtent","wrapExtentX","getRenderTolerance","getSquaredRenderTolerance","ready","dirty","userExtent","replayGroupInstructions","CanvasVectorLayerRenderer$1","VectorLayer","VectorLayer$1","RBush_","extents","uid","rbush","RBush$1","Source","adaptAttributions","self","reject","attributionLike","Source$1","VectorEventType","withCredentials","loadFeaturesXhr","url","format","success","failure","xhr","dataProjection","VectorSourceEvent","VectorSource","allStrategy","useSpatialIndex","featureKey","valid","newFeatures","geometryFeatures","modifyingCollection","fast","featureId","removeAndIgnoreReturn","clearEvent","anExtent","filter","closestFeature","previousMinSquaredDistance","minDistance","sid","loadedExtentsRtree","extentsToLoad","extentToLoad","featureChangeKeys","removed","loader","VectorSource$1","TileProperty","BaseTileLayer","preload","useInterimTilesOnError","BaseTileLayer$1","Tile","tileCoord","Tile$1","ImageTile","tileLoadFunction","getBlankImage","ImageTile$1","ERROR_THRESHOLD","MAX_SUBDIVISION","MAX_TRIANGLE_WIDTH","Triangulation","targetProj","targetExtent","maxSourceExtent","errorThreshold","destinationResolution","transformInvCache","transformInv","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","leftBound","triangle","newTriangle","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","targetQuadExtent","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","Triangulation$1","brokenDiagonalRendering_","drawTestTriangle","u1","v1","u2","v2","verifyBrokenDiagonalRendering","isBrokenDiagonalRendering","calculateSourceResolution","sourceCenter","sourceResolution","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","calculateSourceExtentResolution","triangulation","sources","renderEdges","pixelRound","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","augmentedMatrix","affineCoefs","steps","ud","vd","ReprojTile","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","maxTargetExtent","limitedTargetExtent","sourceProjExtent","errorThresholdInPixels","sourceRange","srcX","srcY","renderReprojected","leftToLoad","sourceListenKey","ReprojTile$1","TileRange","TileRange$1","CanvasTileLayerRenderer","tileLayer","tileState","tilePixelRatio","tileOrigin","tileSize","viewResolution","viewCenter","tileSource","sourceRevision","canvasExtent","tilesToDrawByZ","findLoadedTiles","tmpTileRange","viewport","inTransition","childTileRange","covered","canvasScale","toTransformString","clips","clipZs","currentClip","currentZ","currentTilePixelSize","currentScale","originTileCoord","originTileExtent","tileGutter","tilesToDraw","tileCoordKey","xIndex","nextX","yIndex","nextY","transition","contextSaved","clip","alphaChanged","postRenderFunction","usedTiles","tileCallback","wantedTiles","tileCount","CanvasTileLayerRenderer$1","TileLayer","TileLayer$1","LRUCache","highWaterMark","entry","LRUCache$1","getKeyZXY","fromKey","hash","withinExtentAndZ","TileCache","TileCache$1","TileEventType","tmpTileCoord","DECIMALS","TileGrid","restrictedTileRange","tempTileRange","tempExtent","tileCoordExtent","createOrUpdateTileRange","tileCoordZ","tileCoordX","tileCoordY","opt_tileCoord","reverseIntersectionPolicy","createOrUpdateTileCoord","opt_direction","fullTileRanges","TileGrid$1","getForProjection","createForProjection","extentFromProjection","createForExtent","resolutionsFromExtent","createXYZ","xyzOptions","gridOptions","half","TileSource","tileCache","getTileGridForProjection","scaleSize","TileSourceEvent","TileSource$1","createFromTemplate","template","zRegEx","xRegEx","yRegEx","dashYRegEx","createFromTemplates","templates","tileUrlFunctions","createFromTileUrlFunctions","tileCoordHash","expandUrl","urls","startCharCode","stopCharCode","stop","UrlTile","tileUrlFunction","UrlTile$1","TileImage","defaultTileLoadFunction","usedTileCache","thisProj","projKey","urlTileCoord","tileUrl","newTile","interimTile","tilegrid","proj","imageTile","TileImage$1","XYZ","XYZ$1","ATTRIBUTION","OSM","OSM$1","Direction","ZoomSlider","thumbElement","containerElement","containerWidth","containerHeight","containerStyle","thumb","thumbStyle","thumbWidth","thumbHeight","relativePosition","drag","amount","ZoomSlider$1","blueLightTowerCount","blueLightTower","blueLightTowerPositionX","blueLightTowerPositionY","BlueLightstyle","BlueLightvectorSource","BlueLightvector","mapView"],"mappings":"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"}